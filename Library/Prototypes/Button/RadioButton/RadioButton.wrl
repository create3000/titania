#VRML V2.0 utf8

PROTO RadioButton [
  exposedField SFInt32 whichChoice -1
  eventIn      MFNode  addChildren
  eventIn      MFNode  removeChildren
  exposedField MFNode  children [ ]
]
{
  PROTO Fields [
    exposedField SFInt32 whichChoice -1
  ]
  {
    Group { }
  }

  DEF Buttons Group {
    addChildren IS addChildren
    removeChildren IS removeChildren
    children IS children
  }

  DEF RadioButton Script {
    eventIn SFInt32 set_whichChoice
    eventIn SFTime  set_touchTime
    eventIn MFNode  set_children
    field   SFInt32 whichChoice -1
    field   MFNode  children [ ]
    field   SFNode  buttons USE Buttons
    field   SFNode  fields DEF Fields Fields {
      whichChoice IS whichChoice
    }
    field   SFNode  self USE RadioButton

    url "vrmlscript:
function initialize ()
{
	set_children (buttons .children);
}

function set_whichChoice (value)
{
	if (whichChoice > -1 && whichChoice < buttons .children .length)
		buttons .children [whichChoice] .enabled = FALSE;
	
	whichChoice = value;

	if (whichChoice > -1 && whichChoice < buttons .children .length)
		buttons .children [whichChoice] .enabled = TRUE;
}

function set_touchTime (value)
{
	for (var i = 0; i < buttons .children .length; ++ i)
	{
		if (value == buttons .children [i] .enterTime)
		{
			if (i != whichChoice)
				fields .whichChoice = i;

			break;
		}
	}
}

function set_children (value)
{
	for (var i = 0; i < children .length; ++ i)
		Browser .deleteRoute (children [i], 'enterTime', self, 'set_touchTime');
		
	children = value;

	for (var i = 0; i < children .length; ++ i)
		Browser .addRoute (children [i], 'enterTime', self, 'set_touchTime');
		
	set_whichChoice (fields .whichChoice);
}
"
  }

  ROUTE Buttons.children_changed TO RadioButton.set_children
  ROUTE Fields.whichChoice_changed TO RadioButton.set_whichChoice
}


