#VRML V2.0 utf8

PROTO ToggleAnim [
	    exposedField        SFBool direction FALSE
	    eventIn      SFTime startTime 
	    eventIn      SFTime forward 
	    eventIn      SFTime back 
	    eventOut     SFBool state_changed 
	    eventIn      SFBool set_isActive 
	    field        SFNode forwardTimer TimeSensor { }
	    field        SFNode backTimer TimeSensor { }
	  ]
{
	PROTO Data [
		exposedField        SFBool direction FALSE
	] {Group{}}

  Group {
    children	DEF _toggleAnimScript Script {
      eventOut      SFBool      state_changed IS state_changed
      eventIn      SFTime      startTime IS startTime
	  eventIn	   SFTime      forward  IS forward
	  eventIn	   SFTime      back  IS back
      eventIn      SFBool      set_direction
      eventIn      SFBool      set_isActive IS set_isActive
      field      SFBool      direction FALSE
      field      SFNode      forwardTimer IS forwardTimer
      field      SFNode      backTimer IS backTimer
      field      SFBool      isActive	FALSE
      field      SFBool      next	FALSE
      field      SFNode      data	DEF Data_0 Data {
			direction IS direction 
	  }
	
      url	"vrmlscript:
function initialize()
{
	forwardTimer.stopTime = 0;
	backTimer.stopTime    = 0;
	direction = data.direction;
	state_changed = direction;
}

function set_direction(value, time)
{
	if (value == direction) return;
	direction = value;
	if (direction == state_changed) {
		next = TRUE;
	} else {
		next = FALSE;
		if (direction) {
			forwardTimer.enabled   = TRUE;
			forwardTimer.startTime = time;			
		} else {
			backTimer.enabled	= TRUE;
			backTimer.startTime = time;
		}
	}
}

function startTime(value, time)
{
	if (!next) set_direction(!direction, time);
}

function forward(value, time)
{
	set_direction(TRUE, time);
}

function back(value, time)
{
	 set_direction(FALSE, time);
}

function set_isActive(value, time)
{
	isActive = value;
	if (!isActive) {
		if (next) {
			direction = !direction;
			state_changed = direction;
			set_direction(!direction, time);
		} else {
			state_changed = direction;
			forwardTimer.enabled = FALSE;
			backTimer.enabled	 = FALSE;			
		}
	}
}

"
	  mustEvaluate TRUE
      directOutput	TRUE
    }

  }
ROUTE Data_0.direction TO _toggleAnimScript.set_direction
}
