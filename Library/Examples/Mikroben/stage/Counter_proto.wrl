#VRML V2.0 utf8

PROTO Counter [
  exposedField  SFInt32   maxValue		0
  exposedField  SFInt32   offset		0
  exposedField  SFTime    startTime		0
  exposedField  SFTime    stopTime		0
  eventOut      SFBool    isActive		
  eventOut      SFTime    enterTime		
  eventOut      SFTime    exitTime		
  eventOut      SFInt32   whichChoice_changed		
  eventOut      SFFloat   fraction_changed		
]
{
  PROTO Data [
    exposedField  SFInt32   value		0
    exposedField  SFInt32   offset		0
    exposedField  SFTime    startTime		0
    exposedField  SFTime    stopTime		0
  ]
  {
    Group { }
  }

  DEF _counter Script { 
    eventOut  SFBool    isActive IS isActive
    eventOut  SFTime    enterTime IS enterTime
    eventOut  SFInt32   whichChoice_changed IS whichChoice_changed
    eventOut  SFFloat   fraction_changed IS fraction_changed
    eventOut  SFTime    exitTime IS exitTime
    eventIn   SFInt32    set_offset
    eventIn   SFTime    set_startTime
    eventIn   SFTime    set_stopTime
    field     SFInt32   offset 0
    field     SFNode    data DEF Data Data { 
      value IS maxValue
      offset IS offset
      startTime IS startTime
      stopTime IS stopTime
    }
    url "vrmlscript:
function set_offset(value, time)
{
	if (value <= 0) {
		offset = 0;
		isActive = TRUE;
		enterTime = time;
	} else if (value >= data.value) {
		offset = data.value;
		isActive = FALSE;
		exitTime = time;
	} else {
		offset = value;
	}
}
function set_startTime(value, time)
{
	if (!isActive) {
		isActive = TRUE;
		enterTime = time;
		offset = 0;

		whichChoice_changed = offset;
		fraction_changed = offset / data.value;
print ('################################################## ' + value + ' : ' + offset);
	} else {
		++offset;
		whichChoice_changed = offset;
		fraction_changed = offset / data.value;

		if (offset >= data.value) {
			offset = data.value;
			isActive = FALSE;
			exitTime = time;
		}
print ('################################################## ' + value + ' : ' + offset);
	}
}
function set_stopTime(value, time) {
	if (isActive) {
		isActive = FALSE;
		exitTime = time;
	}
}
function initialize() {
	if (data.startTime) data.startTime = 1;
	if (data.stopTime) data.stopTime = 1;
}
"
    directOutput TRUE
  }

  ROUTE Data.offset_changed TO _counter.set_offset
  ROUTE Data.startTime_changed TO _counter.set_startTime
  ROUTE Data.stopTime_changed TO _counter.set_stopTime
}

