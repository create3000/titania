#VRML V2.0 utf8

PROTO DigitalClock [
            exposedField SFTime time 0
                field        MFNode children [ Switch {},  Switch {} ]
                field        MFNode fraction [ Switch {}, Switch {} ]
          ]
{
        PROTO Data [
            exposedField SFTime time 0
            ]
        { Group {} }

        DEF _digitalClock Script {
            eventIn     SFTime set_time
                field        SFInt32 sec -1
                field        SFInt32 min -1
                field        SFInt32 hour -1
                field        SFInt32 l 0
                field        MFNode children  IS children
                field        MFNode fraction  IS fraction
                field    SFNode    data DEF _0 Data {
                        time IS time
                }

      url       "vrmlscript:
function  set_time(value, time)
{
    t = Math.floor(value);
        f = (value - t);
   for (i = 0; i < fraction.length; i++) {
                f *= 10;
                whichChoice = Math.floor(f);
                fraction[i].whichChoice = whichChoice;
        f -= whichChoice;
    }
    if (l > 0) {
        if (t != sec && l) {
                sec = t;
                s = sec % 60; t =  sec / 60;
                e = s % 10;
                children[0].whichChoice = e;
                if (l > 1) {
                        z = s / 10;
                        children[1].whichChoice = z;
                        if (t != min && l > 2) {
                                min = t;
                                m = min % 60; t = min / 60;
                                e = m % 10;
                                children[2].whichChoice = e;
                                if (l > 2) {
                                        z = m / 10;
                                        children[3].whichChoice = z;
                                        if (t != hour && l > 4) {
                                                hour = t;
                                                h = hour % 24; t = hour / 24;
                                                e = h  % 10;
                                                children[4].whichChoice = e;
                                                if (l > 5) {
                                                        z = h  / 10;
                                                        children[5].whichChoice = z;
                                                }
                                        }
                                }
                        }
                }
        }
    }
}
function  initialize()
{
    set_time(data.time, 0);
        l = children.length;
}
        "
      directOutput      TRUE
    }
  ROUTE _0.time_changed TO _digitalClock.set_time
}