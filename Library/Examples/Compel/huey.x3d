<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE X3D PUBLIC "ISO//Web3D//DTD X3D 3.3//EN" "http://www.web3d.org/specifications/x3d-3.3.dtd">
<X3D profile='Full' version='3.3' xmlns:xsd='http://www.w3.org/2001/XMLSchema-instance' xsd:noNamespaceSchemaLocation='http://www.web3d.org/specifications/x3d-3.3.xsd'>
  <head>
    <meta name='comment' content='World of Titania'/>
    <meta name='created' content='Fri, 28 Aug 2015 13:12:45 GMT'/>
    <meta name='creator' content='Holger Seelig'/>
    <meta name='generator' content='Titania V1.0.0, http://titania.create3000.de'/>
    <meta name='modified' content='Fri, 28 Aug 2015 13:12:45 GMT'/>
  </head>
  <Scene>
    <WorldInfo
        info='"Created in CosmoWorlds", "Packaged by CosmoPackage"'/>
    <Transform DEF='draggerWithFeedback_1'>
      <Script DEF='SpringMotionWhenLetGo_1'>
        <field accessType='outputOnly' type='SFVec3f' name='putDraggerHere'/>
        <field accessType='inputOnly' type='SFTime' name='timeIn'/>
        <field accessType='inputOnly' type='SFBool' name='draggerActiveIn'/>
        <field accessType='inputOnly' type='SFVec3f' name='draggerLocIn'/>
        <field accessType='initializeOnly' type='SFVec3f' name='curDraggerLoc'/>
        <field accessType='initializeOnly' type='SFBool' name='simulationOn'/>
        <field accessType='initializeOnly' type='SFTime' name='prevTime' value='-1'/>
        <field accessType='initializeOnly' type='SFTime' name='timeStepSize' value='0.05'/>
        <field accessType='initializeOnly' type='SFFloat' name='mass' value='1'/>
        <field accessType='initializeOnly' type='SFFloat' name='springConstant' value='100'/>
        <field accessType='initializeOnly' type='SFFloat' name='dampingConstant' value='1'/>
        <field accessType='initializeOnly' type='SFFloat' name='restingPos'/>
        <field accessType='initializeOnly' type='SFFloat' name='prevVelo'/>
        <field accessType='initializeOnly' type='SFFloat' name='prevPos'/>
        <field accessType='initializeOnly' type='SFFloat' name='curPos'/>
<![CDATA[vrmlscript:
function turnSimulationOn(draggerIsActive)
{
	if (draggerIsActive == TRUE)
		wantItOn = FALSE;
	else
		wantItOn = TRUE;

	if (simulationOn == wantItOn)
		return;
	simulationOn = wantItOn;
	
	// Initialize simulation variables
	prevVelo = 0;

	// Setting prevTime to -1 insures that we'll start with the second
	// clock tick, using time step space between first two.
	prevTime = -1;
}

function performSimulationStep(deltaTime)
{
	if (simulationOn == FALSE)
		return;

	curVelo = prevVelo;
	curPos = prevPos;

	curSpringForce = -1 * springConstant * (curPos - restingPos);
	curDampingForce = -1 * dampingConstant * curVelo;
	curTotalForce = curSpringForce + curDampingForce;
	curAcc = curTotalForce / mass;

	curVelo = curVelo + curAcc * deltaTime;
	curPos = curPos + curVelo * deltaTime;

	// store changed fields
	prevVelo = curVelo;
	prevPos = curPos;
}

function performSimulation(time)
{
	if (simulationOn == FALSE)
		return;

	if (prevTime == -1) {
		prevTime = time;
		return;
	}


	// At beginning of step, use dragger's location for the position
	prevPos = curDraggerLoc[1];

	// Execute simulation in time steps until no time left.
	timeToFill = time - prevTime;
	while ( timeToFill > 0 ) {

		if ( timeToFill < timeStepSize )
			performSimulationStep(timeToFill);
		else
			performSimulationStep(timeStepSize);

		timeToFill = timeToFill - timeStepSize;
	}

	// Set prevTime to time we just advanced up to
	prevTime = time;

	// Write out position at end of time:
	putDraggerHere = new SFVec3f(0, curPos, 0);
}

function draggerActiveIn(value, time)
{
	// We start/stop the simulation when the dragger goes
	// active/inactive.  Thus, the simulation runs only when the
	// user is not dragging.
	turnSimulationOn(value);
}

function draggerLocIn(value, time)
{
	curDraggerLoc = value;
}

function timeIn(value, time)
{
	performSimulation(time);
}

]]> 
      </Script>
      <Script DEF='FlapArmsAndLegs_1'>
        <field accessType='outputOnly' type='SFRotation' name='rightArmRotation'/>
        <field accessType='outputOnly' type='SFRotation' name='leftArmRotation'/>
        <field accessType='outputOnly' type='SFRotation' name='rightLegRotation'/>
        <field accessType='outputOnly' type='SFRotation' name='leftLegRotation'/>
        <field accessType='outputOnly' type='SFFloat' name='faceAnimationFrame'/>
        <field accessType='inputOnly' type='SFVec3f' name='bodyLocation'/>
        <field accessType='initializeOnly' type='SFFloat' name='armRotationMultiplier' value='0.5'/>
        <field accessType='initializeOnly' type='SFFloat' name='armBaseRot' value='0.3'/>
        <field accessType='initializeOnly' type='SFFloat' name='legRotationMultiplier' value='0.2'/>
        <field accessType='initializeOnly' type='SFFloat' name='legBaseRot' value='1'/>
<![CDATA[vrmlscript:
function flapThoseArms(bodyLoc)
{
	bodyHeight = bodyLoc[1];
	armRot = armBaseRot + armRotationMultiplier * bodyHeight;
	rightArmRotation = new SFRotation(0,0,1,armRot);
	leftArmRotation = new SFRotation(0,0,-1,armRot);
}

function flapThoseLegs(bodyLoc)
{
	bodyHeight = bodyLoc[1];
	legRot = legBaseRot + legRotationMultiplier * bodyHeight;
	rightLegRotation = new SFRotation(0,0,1,legRot);
	leftLegRotation = new SFRotation(0,0,-1,legRot);
}

function bodyLocation(value, time)
{
	flapThoseArms(value);
	flapThoseLegs(value);
}

]]> 
      </Script>
      <Script DEF='AnimateFace_1'>
        <field accessType='outputOnly' type='SFFloat' name='animationFraction'/>
        <field accessType='inputOnly' type='SFVec3f' name='bodyLocation'/>
        <field accessType='initializeOnly' type='SFFloat' name='startHeight' value='-2'/>
        <field accessType='initializeOnly' type='SFFloat' name='endHeight' value='2'/>
<![CDATA[vrmlscript:
function sendOutAnimationFraction(curBodyPosition)
{
	curHeight = curBodyPosition[1];
	
	if (endHeight > startHeight) {
		if ( curHeight < startHeight )
			animationFraction = 0;
		else if ( curHeight > endHeight )
			animationFraction = 1;
		else {
			animationFraction = (curHeight - startHeight ) /
					    (endHeight - startHeight);
		}		
	}
	else {
		if ( curHeight < endHeight )
			animationFraction = 1;
		else if ( curHeight > startHeight )
			animationFraction = 0;
		else {
			animationFraction = (curHeight - startHeight ) /
					    (endHeight - startHeight);
		}
		
	}	
}

function bodyLocation(value,time)
{
	sendOutAnimationFraction(value);
}
]]> 
      </Script>
      <Transform DEF='VerticalDragger_1'>
        <PlaneSensor DEF='_1'
            maxPosition='0 -1'/>
        <Transform DEF='_2'>
          <Transform DEF='body_1'>
            <Shape>
              <Appearance>
                <Material
                    diffuseColor='0.274851 0.8 0.465359'/>
              </Appearance>
              <Cylinder/>
            </Shape>
          </Transform>
          <Transform DEF='rightArm_1'
              translation='-1.52073 0.760865 0.148512'
              rotation='0 0 1 0.3'
              scale='1.35 0.5 0.25'
              center='0.502919 -3.09799e-14 1.13687e-13'>
            <Shape>
              <Appearance>
                <Material
                    diffuseColor='0.8 0.414927 0.644391'/>
              </Appearance>
              <Box
                  size='1 1 1'/>
            </Shape>
          </Transform>
          <Transform DEF='leftArm_1'
              translation='1.5 0.76 0.15'
              rotation='0 0 -1 0.3'
              scale='1.35 0.5 0.25'
              center='-0.5 0 0'>
            <Shape>
              <Appearance>
                <Material
                    diffuseColor='0.8 0.414927 0.644391'/>
              </Appearance>
              <Box
                  size='1 1 1'/>
            </Shape>
          </Transform>
          <Transform DEF='rightLeg_1'
              translation='-0.955501 -1.02229 -0.000999436'
              rotation='0 0 1 1'
              scale='1.35 0.5 0.25'
              center='0.502919 -3.09799e-14 1.13687e-13'>
            <Shape>
              <Appearance>
                <Material
                    diffuseColor='0.8 0.414927 0.644391'/>
              </Appearance>
              <Box
                  size='1 1 1'/>
            </Shape>
          </Transform>
          <Transform DEF='leftLeg_1'
              translation='0.933208 -0.964036 -0.000999421'
              rotation='0 0 -1 1'
              scale='1.35 0.5 0.25'
              center='-0.5 0 0'>
            <Shape>
              <Appearance>
                <Material
                    diffuseColor='0.8 0.414927 0.644391'/>
              </Appearance>
              <Box
                  size='1 1 1'/>
            </Shape>
          </Transform>
          <Transform DEF='head_1'
              translation='0 2 0'>
            <Shape>
              <Appearance>
                <Material
                    diffuseColor='0.676533 0.8 0.139863'/>
              </Appearance>
              <Sphere/>
            </Shape>
          </Transform>
          <Transform DEF='arrow_1'
              rotation='0 -1 0 0.0874216'>
            <Shape>
              <Appearance>
                <Material
                    ambientIntensity='0'
                    diffuseColor='1 0.0540743 0.406095'
                    shininess='0.0816327'/>
              </Appearance>
              <IndexedFaceSet
                  solid='false'
                  coordIndex='4, 6, 5, -1, 1, 0, 6, -1, 3, 2, 4, -1, 1, 6, 2, -1, 6, 4, 2, -1'>
                <Coordinate
                    point='0.0250123 0.786237 1.0347, 0.394682 0.793306 0.957494, 0.411184 -0.144155 0.950423, 0.76891 -0.0407165 0.841896, 0.244499 -0.856756 1.00672, -0.308227 -0.219205 0.983151, 0.0359881 -0.180304 1.03447'/>
              </IndexedFaceSet>
            </Shape>
          </Transform>
          <Transform DEF='face_1'
              translation='-0.0378572 0.00402868 -0.00922847'
              rotation='-0.105827 -0.994385 5.17042e-08 0.0337095'
              scale='1 0.999999 1'
              scaleOrientation='0 0 -1 0.00138107'
              center='-0.0483298 1.95284 1.13396'>
            <Group>
              <Group DEF='OhFaceToSmileFace_1'>
                <TimeSensor DEF='Time_1'/>
              </Group>
              <CoordinateInterpolator DEF='facePointInterp_1'
                  key='0, 1'
                  keyValue='0.000215083 1.99617 1.0351, -0.178876 2.12069 1.0351, -0.356607 1.97541 1.0351, -0.322056 1.82403 1.0351, -0.163762 1.75987 1.0351, -0.0170948 1.88413 1.0351, -0.0726638 1.75767 1.0351, 0.0955591 1.83625 1.0351, 0.0822322 1.93416 1.0351, 0.311704 2.10134 1.02756, 0.13609 2.34242 0.962978, 0.0482979 2.14194 1.05111, 0.232524 2.49845 0.890255, 0.0561758 2.54736 0.897869, 0.0149872 2.39107 0.962557, 0.289725 2.59035 0.847359, 0.340862 2.27757 0.95716, 0.467076 2.35081 0.911107, -0.386541 2.23641 0.961107, -0.471164 2.11235 0.993781, -0.239717 2.13933 1.02244, -0.262307 2.38352 0.926371, -0.481212 2.3239 0.912153, -0.567869 2.30477 0.904834, -0.412464 2.61093 0.815225, -0.395833 2.49202 0.862955, -0.199356 2.55299 0.872899, -0.246534 2.47313 0.895155, -0.154146 2.34367 0.95959, 0.117234 1.41492 1.22909, 0.134671 1.4723 1.24353, 0.102224 1.52073 1.22762, 0.0671407 1.36172 1.19548, 0.0457317 1.56086 1.1968, -0.105284 1.37607 1.09377, -0.106997 1.5384 1.10422, -0.17007 1.50838 1.06452, -0.166918 1.41553 1.05984, -0.172807 1.47939 1.06084, -0.0966395 2.08846 1.0351, -0.236133 2.08994 1.0351, -0.356607 1.97541 1.0351, -0.322056 1.82403 1.0351, -0.163762 1.75987 1.0351, -0.0568571 1.79165 1.0351, 0.00246345 1.82801 1.0351, 0.0119336 1.90657 1.0351, -0.00581429 2.01321 1.0351, 0.179493 2.3021 0.971716, 0.102233 2.35907 0.961716, -0.0274548 2.16832 1.05236, 0.188983 2.43178 0.921672, 0.288013 2.34108 0.941127, 0.406235 2.53917 0.84941, 0.271438 2.31738 0.95244, -0.00918856 2.62701 0.877612, 0.33915 2.15342 1.00398, -0.229125 2.3056 0.961388, -0.33573 2.25138 0.96398, -0.23747 2.20564 0.997763, -0.0498689 2.13598 1.05558, -0.25324 2.37579 0.930815, -0.643832 2.14801 0.951317, -0.431576 2.31556 0.923636, -0.0869249 2.56072 0.888857, -0.450641 2.35504 0.905515, -0.37132 2.4427 0.885708, -0.555121 2.52293 0.82453, 0.47121 1.59488 1.45269, 0.353085 1.89545 1.40355, 0.34367 1.64531 1.38027, 0.213843 1.29474 1.27816, 0.152528 1.50009 1.25613, -0.179903 1.33589 1.04648, -0.190655 1.53276 1.05397, -0.441791 1.69266 0.915645, -0.553751 1.57552 0.840667, -0.508144 1.93599 0.8933'/>
            </Group>
            <TouchSensor DEF='DefaultTouchSensor_1'/>
            <Shape>
              <Appearance>
                <Material
                    ambientIntensity='0.253968'
                    diffuseColor='1 0.854922 0'
                    specularColor='0.872449 0.247119 0.254214'
                    shininess='1'/>
              </Appearance>
              <IndexedFaceSet
                  solid='false'
                  colorPerVertex='false'
                  colorIndex='0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1'
                  coordIndex='7, 5, 6, -1, 5, 7, 0, -1, 0, 7, 8, -1, 3, 1, 2, -1, 1, 3, 4, -1, 1, 4, 0, -1, 0, 4, 5, -1, 9, 10, 11, -1, 12, 13, 14, -1, 13, 12, 15, -1, 10, 9, 16, -1, 16, 9, 17, -1, 15, 16, 17, -1, 15, 12, 16, -1, 18, 19, 20, -1, 18, 20, 21, -1, 22, 19, 18, -1, 19, 22, 23, -1, 22, 24, 23, -1, 24, 22, 25, -1, 24, 25, 26, -1, 26, 25, 27, -1, 26, 27, 28, -1, 29, 30, 31, -1, 32, 29, 31, -1, 32, 31, 33, -1, 34, 32, 33, -1, 34, 33, 35, -1, 34, 35, 36, -1, 37, 34, 36, -1, 36, 38, 37, -1'>
                <Color
                    color='1 0.854922 0, 1 0 0.607821, 0.41654 0.154251 0.604278'/>
                <Coordinate DEF='_3'
                    point='-0.0482122 2.04232 1.0351, -0.207504 2.10532 1.0351, -0.356607 1.97541 1.0351, -0.322056 1.82403 1.0351, -0.163762 1.75987 1.0351, -0.036976 1.83789 1.0351, -0.0351002 1.79284 1.0351, 0.0537464 1.87141 1.0351, 0.038209 1.97369 1.0351, 0.245598 2.20172 0.999638, 0.119162 2.35075 0.962347, 0.0104215 2.15513 1.05174, 0.210754 2.46512 0.905963, 0.172094 2.44422 0.919498, 0.210611 2.46512 0.905984, 0.280582 2.45387 0.899899, 0.165837 2.45229 0.917386, 0.403113 2.25212 0.957543, -0.307833 2.271 0.961248, -0.403447 2.18186 0.978881, -0.238594 2.17248 1.0101, -0.156088 2.25975 0.990975, -0.367226 2.34984 0.921484, -0.605851 2.22639 0.928075, -0.42202 2.46324 0.869431, -0.241379 2.52637 0.875906, -0.324998 2.45402 0.889207, -0.308927 2.45791 0.890432, -0.354634 2.4333 0.89206, 0.294222 1.5049 1.34089, 0.243878 1.68388 1.32354, 0.222947 1.58302 1.30395, 0.140492 1.32823 1.23682, 0.0991299 1.53048 1.22646, -0.142594 1.35598 1.07012, -0.148826 1.53558 1.0791, -0.30593 1.60052 0.990083, -0.360335 1.49553 0.950253, -0.340475 1.70769 0.97707'/>
              </IndexedFaceSet>
            </Shape>
          </Transform>
        </Transform>
      </Transform>
    </Transform>
    <TimeSensor DEF='WallClock'
        loop='true'/>
    <Transform DEF='draggerWithFeedback_2'
        translation='3.82983 -1.62198 3.68825'
        rotation='0 -1 0 1.24347'
        scale='0.999998 0.999999 0.999998'>
      <Script DEF='SpringMotionWhenLetGo_2'>
        <field accessType='outputOnly' type='SFVec3f' name='putDraggerHere'/>
        <field accessType='inputOnly' type='SFTime' name='timeIn'/>
        <field accessType='inputOnly' type='SFBool' name='draggerActiveIn'/>
        <field accessType='inputOnly' type='SFVec3f' name='draggerLocIn'/>
        <field accessType='initializeOnly' type='SFVec3f' name='curDraggerLoc'/>
        <field accessType='initializeOnly' type='SFBool' name='simulationOn'/>
        <field accessType='initializeOnly' type='SFTime' name='prevTime' value='-1'/>
        <field accessType='initializeOnly' type='SFTime' name='timeStepSize' value='0.05'/>
        <field accessType='initializeOnly' type='SFFloat' name='mass' value='1'/>
        <field accessType='initializeOnly' type='SFFloat' name='springConstant' value='100'/>
        <field accessType='initializeOnly' type='SFFloat' name='dampingConstant' value='1'/>
        <field accessType='initializeOnly' type='SFFloat' name='restingPos'/>
        <field accessType='initializeOnly' type='SFFloat' name='prevVelo'/>
        <field accessType='initializeOnly' type='SFFloat' name='prevPos'/>
        <field accessType='initializeOnly' type='SFFloat' name='curPos'/>
<![CDATA[vrmlscript:
function turnSimulationOn(draggerIsActive)
{
	if (draggerIsActive == TRUE)
		wantItOn = FALSE;
	else
		wantItOn = TRUE;

	if (simulationOn == wantItOn)
		return;
	simulationOn = wantItOn;
	
	// Initialize simulation variables
	prevVelo = 0;

	// Setting prevTime to -1 insures that we'll start with the second
	// clock tick, using time step space between first two.
	prevTime = -1;
}

function performSimulationStep(deltaTime)
{
	if (simulationOn == FALSE)
		return;

	curVelo = prevVelo;
	curPos = prevPos;

	curSpringForce = -1 * springConstant * (curPos - restingPos);
	curDampingForce = -1 * dampingConstant * curVelo;
	curTotalForce = curSpringForce + curDampingForce;
	curAcc = curTotalForce / mass;

	curVelo = curVelo + curAcc * deltaTime;
	curPos = curPos + curVelo * deltaTime;

	// store changed fields
	prevVelo = curVelo;
	prevPos = curPos;
}

function performSimulation(time)
{
	if (simulationOn == FALSE)
		return;

	if (prevTime == -1) {
		prevTime = time;
		return;
	}


	// At beginning of step, use dragger's location for the position
	prevPos = curDraggerLoc[1];

	// Execute simulation in time steps until no time left.
	timeToFill = time - prevTime;
	while ( timeToFill > 0 ) {

		if ( timeToFill < timeStepSize )
			performSimulationStep(timeToFill);
		else
			performSimulationStep(timeStepSize);

		timeToFill = timeToFill - timeStepSize;
	}

	// Set prevTime to time we just advanced up to
	prevTime = time;

	// Write out position at end of time:
	putDraggerHere = new SFVec3f(0, curPos, 0);
}

function draggerActiveIn(value, time)
{
	// We start/stop the simulation when the dragger goes
	// active/inactive.  Thus, the simulation runs only when the
	// user is not dragging.
	turnSimulationOn(value);
}

function draggerLocIn(value, time)
{
	curDraggerLoc = value;
}

function timeIn(value, time)
{
	performSimulation(time);
}

]]> 
      </Script>
      <Script DEF='FlapArmsAndLegs_2'>
        <field accessType='outputOnly' type='SFRotation' name='rightArmRotation'/>
        <field accessType='outputOnly' type='SFRotation' name='leftArmRotation'/>
        <field accessType='outputOnly' type='SFRotation' name='rightLegRotation'/>
        <field accessType='outputOnly' type='SFRotation' name='leftLegRotation'/>
        <field accessType='inputOnly' type='SFVec3f' name='bodyLocation'/>
        <field accessType='initializeOnly' type='SFFloat' name='armRotationMultiplier' value='0.5'/>
        <field accessType='initializeOnly' type='SFFloat' name='armBaseRot' value='0.3'/>
        <field accessType='initializeOnly' type='SFFloat' name='legRotationMultiplier' value='0.2'/>
        <field accessType='initializeOnly' type='SFFloat' name='legBaseRot' value='1'/>
<![CDATA[vrmlscript:
function flapThoseArms(bodyLoc)
{
	bodyHeight = bodyLoc[1];
	armRot = armBaseRot + armRotationMultiplier * bodyHeight;
	rightArmRotation = new SFRotation(0,0,1,armRot);
	leftArmRotation = new SFRotation(0,0,-1,armRot);
}

function flapThoseLegs(bodyLoc)
{
	bodyHeight = bodyLoc[1];
	legRot = legBaseRot + legRotationMultiplier * bodyHeight;
	rightLegRotation = new SFRotation(0,0,1,legRot);
	leftLegRotation = new SFRotation(0,0,-1,legRot);
}

function bodyLocation(value, time)
{
	flapThoseArms(value);
	flapThoseLegs(value);
}
]]> 
      </Script>
      <Script DEF='AnimateFace_2'>
        <field accessType='outputOnly' type='SFFloat' name='animationFraction'/>
        <field accessType='inputOnly' type='SFVec3f' name='bodyLocation'/>
        <field accessType='initializeOnly' type='SFFloat' name='startHeight' value='-2'/>
        <field accessType='initializeOnly' type='SFFloat' name='endHeight' value='2'/>
<![CDATA[vrmlscript:
function sendOutAnimationFraction(curBodyPosition)
{
	curHeight = curBodyPosition[1];
	
	if (endHeight > startHeight) {
		if ( curHeight < startHeight )
			animationFraction = 0;
		else if ( curHeight > endHeight )
			animationFraction = 1;
		else {
			animationFraction = (curHeight - startHeight ) /
					    (endHeight - startHeight);
		}		
	}
	else {
		if ( curHeight < endHeight )
			animationFraction = 1;
		else if ( curHeight > startHeight )
			animationFraction = 0;
		else {
			animationFraction = (curHeight - startHeight ) /
					    (endHeight - startHeight);
		}
		
	}	
}

function bodyLocation(value,time)
{
	sendOutAnimationFraction(value);
}
]]> 
      </Script>
      <Transform DEF='VerticalDragger_2'>
        <PlaneSensor DEF='_4'
            maxPosition='0 -1'/>
        <Transform DEF='_5'>
          <Transform DEF='body_2'>
            <Shape>
              <Appearance>
                <Material
                    diffuseColor='0.8 0.512228 0.524169'/>
              </Appearance>
              <Cylinder/>
            </Shape>
          </Transform>
          <Transform DEF='rightArm_2'
              translation='-1.52073 0.760865 0.148512'
              rotation='0 0 1 0.3'
              scale='1.35 0.5 0.25'
              center='0.502919 -3.09799e-14 1.13687e-13'>
            <Shape>
              <Appearance>
                <Material
                    diffuseColor='0.8 0.270637 0.22283'/>
              </Appearance>
              <Box
                  size='1 1 1'/>
            </Shape>
          </Transform>
          <Transform DEF='leftArm_2'
              translation='1.5 0.76 0.15'
              rotation='0 0 -1 0.3'
              scale='1.35 0.5 0.25'
              center='-0.5 0 0'>
            <Shape>
              <Appearance>
                <Material
                    diffuseColor='0.8 0.270637 0.22283'/>
              </Appearance>
              <Box
                  size='1 1 1'/>
            </Shape>
          </Transform>
          <Transform DEF='rightLeg_2'
              translation='-0.955501 -1.02229 -0.000999436'
              rotation='0 0 1 1'
              scale='1.35 0.5 0.25'
              center='0.502919 -3.09799e-14 1.13687e-13'>
            <Shape>
              <Appearance>
                <Material
                    diffuseColor='0.8 0.270637 0.22283'/>
              </Appearance>
              <Box
                  size='1 1 1'/>
            </Shape>
          </Transform>
          <Transform DEF='leftLeg_2'
              translation='0.933208 -0.964036 -0.000999421'
              rotation='0 0 -1 1'
              scale='1.35 0.5 0.25'
              center='-0.5 0 0'>
            <Shape>
              <Appearance>
                <Material
                    diffuseColor='0.8 0.270637 0.22283'/>
              </Appearance>
              <Box
                  size='1 1 1'/>
            </Shape>
          </Transform>
          <Transform DEF='head_2'
              translation='0 2 0'>
            <Shape>
              <Appearance>
                <Material
                    diffuseColor='0.517987 0.739817 0.8'/>
              </Appearance>
              <Sphere/>
            </Shape>
          </Transform>
          <Transform DEF='arrow_2'
              translation='1.10945 0.0382096 1.68657'
              rotation='-5.4078e-06 1 2.93159e-06 0.362182'
              scale='0.999996 0.999998 1'
              scaleOrientation='3.91548e-06 -1 -3.71615e-06 0.00746927'>
            <Shape>
              <Appearance>
                <Material
                    ambientIntensity='0'
                    diffuseColor='0 0 0'
                    specularColor='0.293243 0.297387 0.290421'
                    shininess='0.0816327'/>
              </Appearance>
              <IndexedFaceSet
                  solid='false'
                  coordIndex='4, 6, 5, -1, 1, 0, 6, -1, 3, 2, 4, -1, 1, 6, 2, -1, 6, 4, 2, -1'>
                <Coordinate
                    point='0.0250123 0.786237 1.0347, 0.394682 0.793306 0.957494, 0.411184 -0.144155 0.950423, 0.76891 -0.0407165 0.841896, 0.244499 -0.856756 1.00672, -0.308227 -0.219205 0.983151, 0.0359881 -0.180304 1.03447'/>
              </IndexedFaceSet>
            </Shape>
          </Transform>
          <Transform DEF='face_2'
              translation='1.05152 0.0805391 -0.518701'
              rotation='0.0040698 0.999991 -0.00081124 0.888554'
              scale='1 0.999994 1'
              scaleOrientation='-0.0186361 0.999788 -0.00876722 0.0415707'
              center='-0.0483298 1.95284 1.13396'>
            <Group>
              <Group DEF='OhFaceToSmileFace_2'>
                <TimeSensor DEF='Time_2'/>
              </Group>
              <CoordinateInterpolator DEF='facePointInterp_2'
                  key='0, 1'
                  keyValue='-0.0966395 2.08846 1.0351, -0.236133 2.08994 1.0351, -0.356607 1.97541 1.0351, -0.322056 1.82403 1.0351, -0.163762 1.75987 1.0351, -0.0568571 1.79165 1.0351, 0.00246345 1.82801 1.0351, 0.0119336 1.90657 1.0351, -0.00581429 2.01321 1.0351, 0.179493 2.3021 0.971716, 0.102233 2.35907 0.961716, -0.0274548 2.16832 1.05236, 0.188983 2.43178 0.921672, 0.288013 2.34108 0.941127, 0.406235 2.53917 0.84941, 0.271438 2.31738 0.95244, -0.00918856 2.62701 0.877612, 0.33915 2.15342 1.00398, -0.229125 2.3056 0.961388, -0.33573 2.25138 0.96398, -0.23747 2.20564 0.997763, -0.0498689 2.13598 1.05558, -0.25324 2.37579 0.930815, -0.643832 2.14801 0.951317, -0.431576 2.31556 0.923636, -0.0869249 2.56072 0.888857, -0.450641 2.35504 0.905515, -0.37132 2.4427 0.885708, -0.555121 2.52293 0.82453, 0.47121 1.59488 1.45269, 0.353085 1.89545 1.40355, 0.34367 1.64531 1.38027, 0.213843 1.29474 1.27816, 0.152528 1.50009 1.25613, -0.179903 1.33589 1.04648, -0.190655 1.53276 1.05397, -0.441791 1.69266 0.915645, -0.553751 1.57552 0.840667, -0.508144 1.93599 0.8933, 0.000215083 1.99617 1.0351, -0.178876 2.12069 1.0351, -0.356607 1.97541 1.0351, -0.322056 1.82403 1.0351, -0.163762 1.75987 1.0351, -0.0170948 1.88413 1.0351, -0.0726638 1.75767 1.0351, 0.0955591 1.83625 1.0351, 0.0822322 1.93416 1.0351, 0.311704 2.10134 1.02756, 0.13609 2.34242 0.962978, 0.0482979 2.14194 1.05111, 0.232524 2.49845 0.890255, 0.0561758 2.54736 0.897869, 0.0149872 2.39107 0.962557, 0.289725 2.59035 0.847359, 0.340862 2.27757 0.95716, 0.467076 2.35081 0.911107, -0.386541 2.23641 0.961107, -0.471164 2.11235 0.993781, -0.239717 2.13933 1.02244, -0.262307 2.38352 0.926371, -0.481212 2.3239 0.912153, -0.567869 2.30477 0.904834, -0.412464 2.61093 0.815225, -0.395833 2.49202 0.862955, -0.199356 2.55299 0.872899, -0.246534 2.47313 0.895155, -0.154146 2.34367 0.95959, 0.117234 1.41492 1.22909, 0.134671 1.4723 1.24353, 0.102224 1.52073 1.22762, 0.0671407 1.36172 1.19548, 0.0457317 1.56086 1.1968, -0.105284 1.37607 1.09377, -0.106997 1.5384 1.10422, -0.17007 1.50838 1.06452, -0.166918 1.41553 1.05984, -0.172807 1.47939 1.06084'/>
            </Group>
            <TouchSensor DEF='DefaultTouchSensor_2'/>
            <Shape>
              <Appearance>
                <Material
                    ambientIntensity='0.253968'
                    diffuseColor='1 0.854922 0'
                    specularColor='0.872449 0.247119 0.254214'
                    shininess='1'/>
              </Appearance>
              <IndexedFaceSet
                  solid='false'
                  colorPerVertex='false'
                  colorIndex='0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1'
                  coordIndex='7, 5, 6, -1, 5, 7, 0, -1, 0, 7, 8, -1, 3, 1, 2, -1, 1, 3, 4, -1, 1, 4, 0, -1, 0, 4, 5, -1, 9, 10, 11, -1, 12, 13, 14, -1, 13, 12, 15, -1, 10, 9, 16, -1, 16, 9, 17, -1, 15, 16, 17, -1, 15, 12, 16, -1, 18, 19, 20, -1, 18, 20, 21, -1, 22, 19, 18, -1, 19, 22, 23, -1, 22, 24, 23, -1, 24, 22, 25, -1, 24, 25, 26, -1, 26, 25, 27, -1, 26, 27, 28, -1, 29, 30, 31, -1, 32, 29, 31, -1, 32, 31, 33, -1, 34, 32, 33, -1, 34, 33, 35, -1, 34, 35, 36, -1, 37, 34, 36, -1, 36, 38, 37, -1'>
                <Color
                    color='1 0 0, 0.706346 0 1, 1 0 0.844137'/>
                <Coordinate DEF='_6'
                    point='-0.0482122 2.04232 1.0351, -0.207504 2.10532 1.0351, -0.356607 1.97541 1.0351, -0.322056 1.82403 1.0351, -0.163762 1.75987 1.0351, -0.036976 1.83789 1.0351, -0.0351002 1.79284 1.0351, 0.0537463 1.87141 1.0351, 0.038209 1.97369 1.0351, 0.245598 2.20172 0.999638, 0.119162 2.35075 0.962347, 0.0104216 2.15513 1.05174, 0.210754 2.46512 0.905963, 0.172094 2.44422 0.919498, 0.210611 2.46512 0.905984, 0.280582 2.45387 0.899899, 0.165837 2.45229 0.917386, 0.403113 2.25212 0.957543, -0.307833 2.271 0.961248, -0.403447 2.18186 0.978881, -0.238594 2.17248 1.0101, -0.156088 2.25975 0.990975, -0.367226 2.34984 0.921484, -0.605851 2.22639 0.928075, -0.42202 2.46324 0.869431, -0.241379 2.52637 0.875906, -0.324998 2.45402 0.889207, -0.308927 2.45791 0.890432, -0.354634 2.4333 0.89206, 0.294222 1.5049 1.34089, 0.243878 1.68388 1.32354, 0.222947 1.58302 1.30395, 0.140492 1.32823 1.23682, 0.0991299 1.53048 1.22646, -0.142594 1.35598 1.07012, -0.148826 1.53558 1.0791, -0.30593 1.60052 0.990083, -0.360334 1.49553 0.950253, -0.340475 1.70769 0.97707'/>
              </IndexedFaceSet>
            </Shape>
          </Transform>
        </Transform>
      </Transform>
    </Transform>
    <Transform DEF='draggerWithFeedback'
        translation='-3.75478 -1.40445 1.40843'
        rotation='0 1 0 4.05459'>
      <Script DEF='SpringMotionWhenLetGo_3'>
        <field accessType='outputOnly' type='SFVec3f' name='putDraggerHere'/>
        <field accessType='inputOnly' type='SFTime' name='timeIn'/>
        <field accessType='inputOnly' type='SFBool' name='draggerActiveIn'/>
        <field accessType='inputOnly' type='SFVec3f' name='draggerLocIn'/>
        <field accessType='initializeOnly' type='SFVec3f' name='curDraggerLoc'/>
        <field accessType='initializeOnly' type='SFBool' name='simulationOn'/>
        <field accessType='initializeOnly' type='SFTime' name='prevTime' value='-1'/>
        <field accessType='initializeOnly' type='SFTime' name='timeStepSize' value='0.05'/>
        <field accessType='initializeOnly' type='SFFloat' name='mass' value='1'/>
        <field accessType='initializeOnly' type='SFFloat' name='springConstant' value='100'/>
        <field accessType='initializeOnly' type='SFFloat' name='dampingConstant' value='1'/>
        <field accessType='initializeOnly' type='SFFloat' name='restingPos'/>
        <field accessType='initializeOnly' type='SFFloat' name='prevVelo'/>
        <field accessType='initializeOnly' type='SFFloat' name='prevPos'/>
        <field accessType='initializeOnly' type='SFFloat' name='curPos'/>
<![CDATA[vrmlscript:
function turnSimulationOn(draggerIsActive)
{
	if (draggerIsActive == TRUE)
		wantItOn = FALSE;
	else
		wantItOn = TRUE;

	if (simulationOn == wantItOn)
		return;
	simulationOn = wantItOn;
	
	// Initialize simulation variables
	prevVelo = 0;

	// Setting prevTime to -1 insures that we'll start with the second
	// clock tick, using time step space between first two.
	prevTime = -1;
}


function performSimulationStep(deltaTime)
{
	if (simulationOn == FALSE)
		return;

	curVelo = prevVelo;
	curPos = prevPos;

	curSpringForce = -1 * springConstant * (curPos - restingPos);
	curDampingForce = -1 * dampingConstant * curVelo;
	curTotalForce = curSpringForce + curDampingForce;
	curAcc = curTotalForce / mass;

	curVelo = curVelo + curAcc * deltaTime;
	curPos = curPos + curVelo * deltaTime;

	// store changed fields
	prevVelo = curVelo;
	prevPos = curPos;
}

function performSimulation(time)
{
	if (simulationOn == FALSE)
		return;

	if (prevTime == -1) {
		prevTime = time;
		return;
	}


	// At beginning of step, use dragger's location for the position
	prevPos = curDraggerLoc[1];

	// Execute simulation in time steps until no time left.
	timeToFill = time - prevTime;
	while ( timeToFill > 0 ) {

		if ( timeToFill < timeStepSize )
			performSimulationStep(timeToFill);
		else
			performSimulationStep(timeStepSize);

		timeToFill = timeToFill - timeStepSize;
	}

	// Set prevTime to time we just advanced up to
	prevTime = time;

	// Write out position at end of time:
	putDraggerHere = new SFVec3f(0, curPos, 0);
}

function draggerActiveIn(value, time)
{
	// We start/stop the simulation when the dragger goes
	// active/inactive.  Thus, the simulation runs only when the
	// user is not dragging.
	turnSimulationOn(value);
}

function draggerLocIn(value, time)
{
	curDraggerLoc = value;
}

function timeIn(value, time)
{
	performSimulation(time);
}

]]> 
      </Script>
      <Script DEF='FlapArmsAndLegs_3'>
        <field accessType='outputOnly' type='SFRotation' name='rightArmRotation'/>
        <field accessType='outputOnly' type='SFRotation' name='leftArmRotation'/>
        <field accessType='outputOnly' type='SFRotation' name='rightLegRotation'/>
        <field accessType='outputOnly' type='SFRotation' name='leftLegRotation'/>
        <field accessType='inputOnly' type='SFVec3f' name='bodyLocation'/>
        <field accessType='initializeOnly' type='SFFloat' name='armRotationMultiplier' value='0.5'/>
        <field accessType='initializeOnly' type='SFFloat' name='armBaseRot' value='-0.3'/>
        <field accessType='initializeOnly' type='SFFloat' name='legRotationMultiplier' value='0.4'/>
        <field accessType='initializeOnly' type='SFFloat' name='legBaseRot' value='0.2'/>
<![CDATA[vrmlscript:
function flapThoseArms(bodyLoc)
{
	bodyHeight = bodyLoc[1];
	armRot = armBaseRot + armRotationMultiplier * bodyHeight;
	rightArmRotation = new SFRotation(0,0,1,armRot);
	leftArmRotation = new SFRotation(0,0,-1,armRot);
}

function flapThoseLegs(bodyLoc)
{
	bodyHeight = bodyLoc[1];
	legRot = legBaseRot + legRotationMultiplier * bodyHeight;
	rightLegRotation = new SFRotation(0,0,1,legRot);
	leftLegRotation = new SFRotation(0,0,-1,legRot);
}

function bodyLocation(value, time)
{
	flapThoseArms(value);
	flapThoseLegs(value);
}
]]> 
      </Script>
      <Script DEF='AnimateFace_3'>
        <field accessType='outputOnly' type='SFFloat' name='animationFraction'/>
        <field accessType='inputOnly' type='SFVec3f' name='bodyLocation'/>
        <field accessType='initializeOnly' type='SFFloat' name='startHeight' value='-2'/>
        <field accessType='initializeOnly' type='SFFloat' name='endHeight' value='2'/>
<![CDATA[vrmlscript:
function sendOutAnimationFraction(curBodyPosition)
{
	curHeight = curBodyPosition[1];
	
	if (endHeight > startHeight) {
		if ( curHeight < startHeight )
			animationFraction = 0;
		else if ( curHeight > endHeight )
			animationFraction = 1;
		else {
			animationFraction = (curHeight - startHeight ) /
					    (endHeight - startHeight);
		}		
	}
	else {
		if ( curHeight < endHeight )
			animationFraction = 1;
		else if ( curHeight > startHeight )
			animationFraction = 0;
		else {
			animationFraction = (curHeight - startHeight ) /
					    (endHeight - startHeight);
		}
		
	}	
}

function bodyLocation(value,time)
{
	sendOutAnimationFraction(value);
}
]]> 
      </Script>
      <Transform DEF='VerticalDragger'>
        <PlaneSensor DEF='_7'
            maxPosition='0 -1'/>
        <Transform DEF='_8'>
          <Transform DEF='body'>
            <Shape>
              <Appearance>
                <Material
                    diffuseColor='0.387689 0.703545 0.8'/>
              </Appearance>
              <Cylinder/>
            </Shape>
          </Transform>
          <Transform DEF='leftArm_3'
              translation='-1.52073 0.760865 0.148512'
              rotation='0 0 -1 0.3'
              scale='1.35 0.5 0.25'
              center='0.502919 -3.09799e-14 1.13687e-13'>
            <Shape>
              <Appearance>
                <Material
                    diffuseColor='0.30451 0.280084 0.8'/>
              </Appearance>
              <Box
                  size='1 1 1'/>
            </Shape>
          </Transform>
          <Transform DEF='rightArm_3'
              translation='1.5 0.76 0.15'
              rotation='0 0 1 0.3'
              scale='1.35 0.5 0.25'
              center='-0.5 0 0'>
            <Shape>
              <Appearance>
                <Material
                    diffuseColor='0.30451 0.280084 0.8'/>
              </Appearance>
              <Box
                  size='1 1 1'/>
            </Shape>
          </Transform>
          <Transform DEF='leftLeg_3'
              translation='-0.955501 -1.02229 -0.000999436'
              rotation='0 0 1 0.2'
              scale='1.35 0.5 0.25'
              center='0.502919 -3.09799e-14 1.13687e-13'>
            <Shape>
              <Appearance>
                <Material
                    diffuseColor='0.30451 0.280084 0.8'/>
              </Appearance>
              <Box
                  size='1 1 1'/>
            </Shape>
          </Transform>
          <Transform DEF='rightLeg_3'
              translation='0.933208 -0.964036 -0.000999421'
              rotation='0 0 -1 0.2'
              scale='1.35 0.5 0.25'
              center='-0.5 0 0'>
            <Shape>
              <Appearance>
                <Material
                    diffuseColor='0.30451 0.280084 0.8'/>
              </Appearance>
              <Box
                  size='1 1 1'/>
            </Shape>
          </Transform>
          <Transform DEF='head'
              translation='0 2 0'>
            <Shape>
              <Appearance>
                <Material
                    ambientIntensity='0.188'
                    diffuseColor='0.851064 0.680905 0.0985876'
                    specularColor='0.265957 0.265957 0.265957'/>
              </Appearance>
              <Sphere/>
            </Shape>
          </Transform>
          <Transform DEF='arrow'
              translation='0.0742104 0.0336651 0.00615835'
              rotation='-3.59147e-07 -1 -3.39209e-06 0.231256'
              scale='0.999997 0.999997 1'
              scaleOrientation='-3.73797e-07 1 5.68814e-06 0.190253'>
            <Shape>
              <Appearance>
                <Material
                    ambientIntensity='0'
                    diffuseColor='0 0 0'
                    shininess='0.234043'/>
              </Appearance>
              <IndexedFaceSet
                  solid='false'
                  coordIndex='4, 6, 5, -1, 1, 0, 6, -1, 3, 2, 4, -1, 1, 6, 2, -1, 6, 4, 2, -1'>
                <Coordinate
                    point='0.0250123 0.786237 1.0347, 0.394682 0.793306 0.957494, 0.411184 -0.144155 0.950423, 0.76891 -0.0407165 0.841896, 0.244499 -0.856756 1.00672, -0.308227 -0.219205 0.983151, 0.0359881 -0.180304 1.03447'/>
              </IndexedFaceSet>
            </Shape>
          </Transform>
          <Transform DEF='face'
              translation='0.553396 0.0617985 -2.30075'
              rotation='-0.00145495 0.999998 0.00103245 3.18934'
              scale='0.999998 0.999995 0.999998'
              scaleOrientation='-0.00918643 -0.999869 -0.0133161 0.0498443'
              center='-0.0483298 1.95284 1.13396'>
            <Group>
              <Group DEF='OhFaceToSmileFace'>
                <TimeSensor DEF='Time_3'/>
              </Group>
              <CoordinateInterpolator DEF='facePointInterp_3'
                  key='0, 1'
                  keyValue='0.00696316 2.05176 1.0351, -0.178876 2.12069 1.0351, -0.356607 1.97541 1.0351, -0.322056 1.82403 1.0351, -0.163571 1.9123 1.0351, 0.00360595 1.92355 1.0351, 0.322808 1.7904 1.0351, 0.363551 1.9039 1.0351, 0.125878 2.03981 1.0351, 0.311704 2.10134 1.02756, 0.13609 2.34242 0.962978, 0.0482979 2.14194 1.05111, 0.611425 2.38072 0.878648, 0.985164 2.4419 0.800681, 0.476041 2.5993 0.816575, 0.693067 2.33588 0.883445, 0.222405 2.32438 0.957039, 0.494308 2.26589 0.938954, -0.350848 2.39639 0.906646, -0.471164 2.11235 0.993781, -0.239717 2.13933 1.02244, -0.262307 2.38352 0.926371, -0.481212 2.3239 0.912153, -0.598021 2.22715 0.929105, -0.742926 2.21976 0.907566, -0.395833 2.49202 0.862955, -0.907949 2.25852 0.865218, -0.736212 2.39071 0.844095, -0.683034 2.59006 0.777696, 0.028598 1.44657 1.17852, 0.11974 1.53469 1.23905, -0.023062 1.53464 1.15396, -0.0214953 1.39337 1.14491, -0.0523315 1.449 1.13047, -0.105284 1.37607 1.09377, -0.106997 1.5384 1.10422, -0.162667 1.44148 1.0642, -0.525854 1.35299 0.841579, -0.172807 1.47939 1.06084, -0.0966395 2.08846 1.0351, -0.236133 2.08994 1.0351, -0.356607 1.97541 1.0351, -0.322056 1.82403 1.0351, -0.163762 1.75987 1.0351, -0.0568571 1.79165 1.0351, 0.00246345 1.82801 1.0351, 0.0119336 1.90657 1.0351, -0.00581429 2.01321 1.0351, 0.179493 2.3021 0.971716, 0.102233 2.35907 0.961716, 0.0870387 2.30444 0.984446, 0.188983 2.43178 0.921672, 0.288013 2.34108 0.941127, 0.293757 2.4169 0.911835, 0.271438 2.31738 0.95244, 0.143183 2.41657 0.934118, 0.219298 2.28528 0.972162, -0.229125 2.3056 0.961388, -0.33573 2.25138 0.96398, -0.31044 2.25679 0.966186, -0.232128 2.27778 0.971397, -0.25324 2.37579 0.930815, -0.40611 2.26071 0.948639, -0.431576 2.31556 0.923636, -0.303116 2.42203 0.904969, -0.450641 2.35504 0.905515, -0.37132 2.4427 0.885708, -0.426406 2.42739 0.882239, 0.101715 1.63899 1.23567, 0.0211674 1.81344 1.20001, 0.024047 1.66333 1.19112, -0.0413768 1.44762 1.13691, -0.104361 1.74523 1.12039, -0.277268 1.45423 0.996834, -0.309852 1.74908 0.998232, -0.44534 1.65574 0.910929, -0.508044 1.58052 0.868258, -0.493113 1.79831 0.892537'/>
            </Group>
            <TouchSensor DEF='DefaultTouchSensor_3'/>
            <Shape>
              <Appearance>
                <Material
                    ambientIntensity='0.253968'
                    diffuseColor='1 0.854922 0'
                    specularColor='0.872449 0.247119 0.254214'
                    shininess='1'/>
              </Appearance>
              <IndexedFaceSet
                  solid='false'
                  colorPerVertex='false'
                  colorIndex='0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1'
                  coordIndex='7, 5, 6, -1, 5, 7, 0, -1, 0, 7, 8, -1, 3, 1, 2, -1, 1, 3, 4, -1, 1, 4, 0, -1, 0, 4, 5, -1, 9, 10, 11, -1, 12, 13, 14, -1, 13, 12, 15, -1, 10, 9, 16, -1, 16, 9, 17, -1, 15, 16, 17, -1, 15, 12, 16, -1, 18, 19, 20, -1, 18, 20, 21, -1, 22, 19, 18, -1, 19, 22, 23, -1, 22, 24, 23, -1, 24, 22, 25, -1, 24, 25, 26, -1, 26, 25, 27, -1, 26, 27, 28, -1, 29, 30, 31, -1, 32, 29, 31, -1, 32, 31, 33, -1, 34, 32, 33, -1, 34, 33, 35, -1, 34, 35, 36, -1, 37, 34, 36, -1, 36, 38, 37, -1'>
                <Color
                    color='0 1 0.260493, 1 0.0298318 0, 0 1 0.895766'/>
                <Coordinate DEF='_9'
                    point='-0.0448382 2.07011 1.0351, -0.207504 2.10532 1.0351, -0.356607 1.97541 1.0351, -0.322056 1.82403 1.0351, -0.163667 1.83609 1.0351, -0.0266256 1.8576 1.0351, 0.162636 1.80921 1.0351, 0.187742 1.90524 1.0351, 0.0600319 2.02651 1.0351, 0.245598 2.20172 0.999638, 0.119162 2.35075 0.962347, 0.0676683 2.22319 1.01778, 0.400204 2.40625 0.90016, 0.636589 2.39149 0.870904, 0.384899 2.5081 0.864205, 0.482253 2.32663 0.917943, 0.182794 2.37047 0.945578, 0.356803 2.27558 0.955558, -0.289986 2.351 0.934017, -0.403447 2.18186 0.978881, -0.275079 2.19806 0.994313, -0.247217 2.33065 0.948884, -0.367226 2.34984 0.921484, -0.502065 2.24393 0.938872, -0.587251 2.26766 0.915601, -0.349474 2.45703 0.883962, -0.679295 2.30678 0.885366, -0.553766 2.41671 0.864901, -0.55472 2.50873 0.829967, 0.0651565 1.54278 1.20709, 0.0704537 1.67406 1.21953, 0.0004925 1.59898 1.17254, -0.031436 1.4205 1.14091, -0.0783463 1.59712 1.12543, -0.191276 1.41515 1.0453, -0.208425 1.64374 1.05123, -0.304004 1.54861 0.987565, -0.516949 1.46676 0.854918, -0.33296 1.63885 0.976689'/>
              </IndexedFaceSet>
            </Shape>
          </Transform>
        </Transform>
      </Transform>
    </Transform>
    <Viewpoint DEF='VP1'
        description='viewpoint1'
        position='0.0721442 0.480607 14.8493'/>
    <NavigationInfo DEF='NavInfo1'
        type='"EXAMINE"'/>
    <Transform
        translation='-0.179769 0.110487 -8.87024'
        scale='1.73123 1.73123 1.73123'>
      <Shape>
        <Appearance>
          <Material/>
          <ImageTexture
              url='"swirl19.gif"'/>
        </Appearance>
        <IndexedFaceSet
            solid='false'
            coordIndex='13, 11, 12, -1, 11, 13, 14, -1, 11, 14, 17, -1, 17, 14, 16, -1, 16, 14, 15, -1, 5, 3, 4, -1, 3, 5, 6, -1, 3, 6, 2, -1, 2, 6, 24, -1, 24, 6, 23, -1, 23, 6, 22, -1, 22, 6, 7, -1, 22, 7, 21, -1, 21, 7, 8, -1, 21, 8, 20, -1, 20, 8, 19, -1, 17, 10, 11, -1, 10, 17, 18, -1, 10, 18, 19, -1, 10, 19, 9, -1, 9, 19, 8, -1, 24, 1, 2, -1, 1, 24, 0, -1'>
          <Coordinate
              point='-2.62824 5.63618 3.16445, -3.30131 5.65267 3.16445, -4.66507 5.64218 3.16445, -6.61191 5.61218 3.16445, -7.25986 2.44444 3.16445, -6.80389 -1.68322 3.16445, -2.91621 -4.99495 3.16445, 2.74732 -5.95487 3.16445, 7.93089 -2.47516 3.16445, 8.29086 2.46844 3.16445, 4.78715 4.58026 3.16445, 0.467506 4.74825 3.16445, -2.22027 2.15646 3.16445, -2.02829 -0.963281 3.16445, 1.47542 -3.84304 3.16445, 5.60308 -0.195344 3.16445, 1.7394 -0.459322 3.16445, 0.89947 1.91648 3.16445, 4.30719 2.68442 3.16445, 6.53901 0.908565 3.16445, 6.34702 -1.8992 3.16445, 2.89131 -4.75497 3.16445, -2.36426 -3.57907 3.16445, -3.30018 -0.891287 3.16445, -3.90013 2.20446 3.16445'/>
        </IndexedFaceSet>
      </Shape>
    </Transform>
    <ROUTE fromNode='WallClock' fromField='time' toNode='SpringMotionWhenLetGo_1' toField='timeIn'/>
    <ROUTE fromNode='_1' fromField='isActive' toNode='SpringMotionWhenLetGo_1' toField='draggerActiveIn'/>
    <ROUTE fromNode='_1' fromField='translation_changed' toNode='SpringMotionWhenLetGo_1' toField='draggerLocIn'/>
    <ROUTE fromNode='_1' fromField='offset_changed' toNode='SpringMotionWhenLetGo_1' toField='draggerLocIn'/>
    <ROUTE fromNode='_2' fromField='translation_changed' toNode='FlapArmsAndLegs_1' toField='bodyLocation'/>
    <ROUTE fromNode='_2' fromField='translation_changed' toNode='AnimateFace_1' toField='bodyLocation'/>
    <ROUTE fromNode='SpringMotionWhenLetGo_1' fromField='putDraggerHere' toNode='_1' toField='set_offset'/>
    <ROUTE fromNode='FlapArmsAndLegs_1' fromField='rightArmRotation' toNode='rightArm_1' toField='set_rotation'/>
    <ROUTE fromNode='FlapArmsAndLegs_1' fromField='leftArmRotation' toNode='leftArm_1' toField='set_rotation'/>
    <ROUTE fromNode='FlapArmsAndLegs_1' fromField='rightLegRotation' toNode='rightLeg_1' toField='set_rotation'/>
    <ROUTE fromNode='FlapArmsAndLegs_1' fromField='leftLegRotation' toNode='leftLeg_1' toField='set_rotation'/>
    <ROUTE fromNode='DefaultTouchSensor_1' fromField='touchTime' toNode='Time_1' toField='set_startTime'/>
    <ROUTE fromNode='Time_1' fromField='fraction_changed' toNode='facePointInterp_1' toField='set_fraction'/>
    <ROUTE fromNode='AnimateFace_1' fromField='animationFraction' toNode='facePointInterp_1' toField='set_fraction'/>
    <ROUTE fromNode='facePointInterp_1' fromField='value_changed' toNode='_3' toField='set_point'/>
    <ROUTE fromNode='_1' fromField='offset_changed' toNode='_2' toField='set_translation'/>
    <ROUTE fromNode='_1' fromField='translation_changed' toNode='_2' toField='set_translation'/>
    <ROUTE fromNode='WallClock' fromField='time' toNode='SpringMotionWhenLetGo_2' toField='timeIn'/>
    <ROUTE fromNode='_4' fromField='isActive' toNode='SpringMotionWhenLetGo_2' toField='draggerActiveIn'/>
    <ROUTE fromNode='_4' fromField='translation_changed' toNode='SpringMotionWhenLetGo_2' toField='draggerLocIn'/>
    <ROUTE fromNode='_4' fromField='offset_changed' toNode='SpringMotionWhenLetGo_2' toField='draggerLocIn'/>
    <ROUTE fromNode='_5' fromField='translation_changed' toNode='FlapArmsAndLegs_2' toField='bodyLocation'/>
    <ROUTE fromNode='_5' fromField='translation_changed' toNode='AnimateFace_2' toField='bodyLocation'/>
    <ROUTE fromNode='SpringMotionWhenLetGo_2' fromField='putDraggerHere' toNode='_4' toField='set_offset'/>
    <ROUTE fromNode='FlapArmsAndLegs_2' fromField='rightArmRotation' toNode='rightArm_2' toField='set_rotation'/>
    <ROUTE fromNode='FlapArmsAndLegs_2' fromField='leftArmRotation' toNode='leftArm_2' toField='set_rotation'/>
    <ROUTE fromNode='FlapArmsAndLegs_2' fromField='rightLegRotation' toNode='rightLeg_2' toField='set_rotation'/>
    <ROUTE fromNode='FlapArmsAndLegs_2' fromField='leftLegRotation' toNode='leftLeg_2' toField='set_rotation'/>
    <ROUTE fromNode='DefaultTouchSensor_2' fromField='touchTime' toNode='Time_2' toField='set_startTime'/>
    <ROUTE fromNode='Time_2' fromField='fraction_changed' toNode='facePointInterp_2' toField='set_fraction'/>
    <ROUTE fromNode='AnimateFace_2' fromField='animationFraction' toNode='facePointInterp_2' toField='set_fraction'/>
    <ROUTE fromNode='facePointInterp_2' fromField='value_changed' toNode='_6' toField='set_point'/>
    <ROUTE fromNode='_4' fromField='offset_changed' toNode='_5' toField='set_translation'/>
    <ROUTE fromNode='_4' fromField='translation_changed' toNode='_5' toField='set_translation'/>
    <ROUTE fromNode='WallClock' fromField='time' toNode='SpringMotionWhenLetGo_3' toField='timeIn'/>
    <ROUTE fromNode='_7' fromField='isActive' toNode='SpringMotionWhenLetGo_3' toField='draggerActiveIn'/>
    <ROUTE fromNode='_7' fromField='translation_changed' toNode='SpringMotionWhenLetGo_3' toField='draggerLocIn'/>
    <ROUTE fromNode='_7' fromField='offset_changed' toNode='SpringMotionWhenLetGo_3' toField='draggerLocIn'/>
    <ROUTE fromNode='_8' fromField='translation_changed' toNode='FlapArmsAndLegs_3' toField='bodyLocation'/>
    <ROUTE fromNode='_8' fromField='translation_changed' toNode='AnimateFace_3' toField='bodyLocation'/>
    <ROUTE fromNode='SpringMotionWhenLetGo_3' fromField='putDraggerHere' toNode='_7' toField='set_offset'/>
    <ROUTE fromNode='FlapArmsAndLegs_3' fromField='rightArmRotation' toNode='leftArm_3' toField='set_rotation'/>
    <ROUTE fromNode='FlapArmsAndLegs_3' fromField='leftArmRotation' toNode='rightArm_3' toField='set_rotation'/>
    <ROUTE fromNode='FlapArmsAndLegs_3' fromField='rightLegRotation' toNode='leftLeg_3' toField='set_rotation'/>
    <ROUTE fromNode='FlapArmsAndLegs_3' fromField='leftLegRotation' toNode='rightLeg_3' toField='set_rotation'/>
    <ROUTE fromNode='DefaultTouchSensor_3' fromField='touchTime' toNode='Time_3' toField='set_startTime'/>
    <ROUTE fromNode='Time_3' fromField='fraction_changed' toNode='facePointInterp_3' toField='set_fraction'/>
    <ROUTE fromNode='AnimateFace_3' fromField='animationFraction' toNode='facePointInterp_3' toField='set_fraction'/>
    <ROUTE fromNode='facePointInterp_3' fromField='value_changed' toNode='_9' toField='set_point'/>
    <ROUTE fromNode='_7' fromField='offset_changed' toNode='_8' toField='set_translation'/>
    <ROUTE fromNode='_7' fromField='translation_changed' toNode='_8' toField='set_translation'/>
  </Scene>
</X3D>
