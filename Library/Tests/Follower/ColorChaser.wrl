#X3D V3.3 utf8 Titania

PROTO ChromaticCircle [
  inputOutput SFFloat value 1
  inputOutput SFVec2f size 2 2
]
{
  Shape {
    geometry DEF Geometry TriangleFanSet {
      color Color { }
      coord Coordinate { }
    }
  }

  Script {
    inputOutput    SFFloat value IS value
    inputOutput    SFVec2f size IS size
    initializeOnly SFInt32 dimension 60
    initializeOnly SFNode  geometry USE Geometry

    url "vrmlscript:
function initialize ()
{
	eventsProcessed ();
}

function eventsProcessed ()
{
	var coordIndex = new MFInt32 ();
	var color      = geometry .color .color;
	var point      = geometry .coord .point;

	var vertex = new SFVec3f (1, 0, 0);
	var scale  = new SFMatrix4f (size .x / 2, 0, 0, 0,
	                                   0, size .y / 2, 0, 0,
	                                   0, 0, 0, 0,
	                                   0, 0, 0, 1);
	                               
	color [0] .setHSV (0, 0, value);
	point [0] = new SFVec3f (0, 0, 0);

	for (var i = 0; i < dimension; ++ i)
	{
		color [i + 1] .setHSV (2 * Math. PI * i / dimension, 1, value);
		point [i + 1] = scale .multMatrixVec (new SFRotation (0, 0, 1, 2 * Math. PI * i / dimension) .multVec (vertex));
	}

	color [color .length] = color [1];
	point [point .length] = point [1];

	geometry .fanCount = new MFInt32 (dimension + 2);
}
"
  }
}

NavigationInfo {
  type [ "NONE", "ANY" ]
}

Background {
  skyColor 0.2 0.2 0.2
}

Viewpoint {
  position 0 0 3
}

DEF Follower ColorChaser { }

DEF SphereButton Transform {
  translation 1.13732 0 0
  scale 0.0630925 0.0630925 0.0630925
  children Shape {
    appearance Appearance {
      material DEF SphereActive Material { }
    }
    geometry Sphere { }
  }
}

DEF ColorSphere Transform {
  scale 0.0446722 0.0446722 0.0446722
  children Shape {
    appearance Appearance {
      material DEF SphereMaterial Material { }
    }
    geometry Sphere { }
  }
}

DEF ChromaticCircleButton Transform {
  children [
    DEF Touch TouchSensor { }
    ChromaticCircle { }
  ]
}

DEF FollowerScript Script {
  inputOnly      SFTime  set_time
  inputOnly      SFBool  set_active
  inputOnly      SFColor set_color
  inputOutput    SFFloat value 1
  outputOnly     SFColor destination_changed
  outputOnly     SFColor color_changed
  outputOnly     SFVec3f translation_changed
  initializeOnly SFNode  touchSensor USE Touch

  url "vrmlscript:
function set_time ()
{
	var hue        = Math .atan2 (touchSensor .hitPoint_changed .y, touchSensor .hitPoint_changed .x) 
	var saturation = touchSensor .hitPoint_changed .length ();
	
	if (hue < 0)
		hue = 2 * Math .PI + hue;
	
	destination_changed .setHSV (hue, saturation, value);
}

function set_active (value)
{
	if (value)
		color_changed = new SFColor (0.8, 0, 0);
	
	else
		color_changed = new SFColor (0.8, 0.8, 0.8);
}

function set_color (value)
{
	var hsv = value .getHSV ();

	var x = Math .cos (hsv [0]) * hsv [1];
	var y = Math .sin (hsv [0]) * hsv [1];

	translation_changed	= new SFVec3f (x, y, 0);
}
"
}

ROUTE Touch.touchTime TO FollowerScript.set_time
ROUTE FollowerScript.destination_changed TO Follower.set_destination
ROUTE Follower.value_changed TO SphereMaterial.set_diffuseColor
ROUTE Follower.value_changed TO FollowerScript.set_color
ROUTE FollowerScript.translation_changed TO ColorSphere.set_translation
ROUTE FollowerScript.color_changed TO SphereActive.set_diffuseColor
ROUTE Follower.isActive TO FollowerScript.set_active
