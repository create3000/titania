#X3D V3.3 utf8 Titania V0.7.0

META "comment" "World of Titania"
META "created" "Sun, 01 Jun 2014 03:00:06 GMT"
META "creator" "Holger Seelig"
META "generator" "Titania V0.7.0, http://titania.create3000.de"
META "modified" "Sun, 01 Jun 2014 03:17:11 GMT"

Transform {
  children [
    DEF _1 TouchSensor {
      description "Script 1"
    }
    Transform {
      translation -1.64145 0.0135657 0
      children Shape {
        appearance Appearance {
          material Material { }
        }
        geometry Box { }
      }
    }
  ]
}

Transform {
  children [
    DEF _2 TouchSensor {
      description "Script 2"
    }
    Transform {
      translation 1.37013 0 0
      children Shape {
        appearance Appearance {
          material Material { }
        }
        geometry Box { }
      }
    }
  ]
}

DEF Script1 Script {
  inputOnly SFTime set_time

  url "v8:

function initialize ()
{
	global ();
	browser ();
	fields ();
}

function global ()
{
	delete NULL;
	delete TRUE;
	delete FALSE;

	NULL  = 0;
	TRUE  = 0;
	FALSE = 0;

	print ('NULL:  ', NULL  === null);
	print ('TRUE:  ', TRUE  === true);
	print ('FALSE: ', FALSE === false);
}

function browser ()
{
	delete Browser;
	Browser = 0;

	print ('Browser:            ', Browser);
	print ('Browser .prototype: ', Browser .prototype);
	print ('Browser .__proto__: ', Browser .__proto__);
	print ('Object .create:     ', Object .create (Browser));

	Browser .setDescription (Browser .name + ' V' + Browser .version);

	for (var p in Browser)
		print ('Browser: ', p, ' = ', Browser [p]);

	print ('getName:     ', Browser .getName ());

	var f = Browser .getVersion;
	print ('f: ', f .call ());
}

function fields ()
{
	var v;
	print ('SFVec4f:             ', SFVec4f);
	print ('SFVec4f .name:       ', SFVec4f .name);
	//print ('SFVec4f .prototype:  ', SFVec4f .prototype);
	//print ('SFVec4f .__proto__:  ', SFVec4f .__proto__);
	print ('SFVec4f .new:        ', v = new SFVec4f ());
	print ('SFVec4f .new:        ', v = new SFVec4f (1, 2, 3, 4));
	print ('SFVec4f .instanceof: ', v instanceof SFVec4f);
	//print ('SFVec4f .prototype:  ', v .prototype);
	//print ('SFVec4f .__proto__:  ', v .__proto__);
	delete v .w;
	print ('SFVec4f .x:          ', v .x);
	print ('SFVec4f .y:          ', v .y);
	print ('SFVec4f .z:          ', v .z);
	print ('SFVec4f .w:          ', v .w);
	print ('SFVec4f .x:          ', 'x' in v);
	print ('SFVec4f .y:          ', 'y' in v);
	print ('SFVec4f .z:          ', 'z' in v);
	print ('SFVec4f .w:          ', 'w' in v);
	print ('SFVec4f .v:          ', 'v' in v);
	print ('SFVec4f .0:          ', v [0]);
	print ('SFVec4f .1:          ', v [1]);
	print ('SFVec4f .2:          ', v [2]);
	print ('SFVec4f .3:          ', v [3]);
	print ('SFVec4f .0:          ', 0 in v);
	print ('SFVec4f .1:          ', 1 in v);
	print ('SFVec4f .2:          ', 2 in v);
	print ('SFVec4f .3:          ', 3 in v);
	print ('SFVec4f .4:          ', 4 in v);
	v .x = 5;
	v .y = 6;
	v .z = 7;
	v .w = 8;
	print ('SFVec4f .toString:   ', v);

	print ('Enumerate:');
	for (var i in v)
		print ('SFVec4f: ', i, ' = ', v [i]);

	//var f = v .toString;
	//f .call (Browser);
}


function set_time (value, time)
{
	print ('Script 2. value:   ', value);
	print ('Script 2. value:   ', time);
	print ('Script 2. SFVec4f: ', new SFVec4f ());
	
	var a = [ ];
	for (var i = 0; i < 1000; ++ i)
		a .push (new SFVec4f ());
}
"
  directOutput TRUE
}

DEF Script2 Script {
  inputOnly SFTime set_time

  url "v8:

function initialize ()
{
	var v = new SFVec4f ();
}

function set_time (value, time)
{
	print ('Script 2. value:   ', value);
	print ('Script 2. value:   ', time);
	print ('Script 2. SFVec4f: ', new SFVec4f ());
	
	var a = [ ];
	for (var i = 0; i < 1000; ++ i)
		a .push (new SFVec4f ());
}
"
  directOutput TRUE
}

ROUTE _2.touchTime TO Script2.set_time
ROUTE _1.touchTime TO Script1.set_time
