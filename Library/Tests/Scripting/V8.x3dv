#X3D V3.3 utf8 Titania V0.7.0

META "comment" "World of Titania"
META "created" "Sun, 01 Jun 2014 03:00:06 GMT"
META "creator" "Holger Seelig"
META "generator" "Titania V0.7.0, http://titania.create3000.de"
META "modified" "Sun, 01 Jun 2014 03:17:11 GMT"

Transform {
  children [
    DEF _1 TouchSensor {
      description "Script 1"
    }
    Transform {
      translation -1.64145 0.0135657 0
      children Shape {
        appearance Appearance {
          material Material { }
        }
        geometry Box { }
      }
    }
  ]
}

Transform {
  children [
    DEF _2 TouchSensor {
      description "Script 2"
    }
    Transform {
      translation 1.37013 0 0
      children Shape {
        appearance Appearance {
          material Material { }
        }
        geometry Box { }
      }
    }
  ]
}

DEF Script1 Script {
  inputOnly SFTime set_time

  url "v8:

global ();
browser ();
fields ();


function global ()
{
	delete NULL;
	delete TRUE;
	delete FALSE;

	NULL  = 0;
	TRUE  = 0;
	FALSE = 0;

	print ('NULL:  ', NULL  === null);
	print ('TRUE:  ', TRUE  === true);
	print ('FALSE: ', FALSE === false);
}

function browser ()
{
	delete Browser;
	Browser = 0;

	print ('Browser:            ', Browser);
	print ('Browser .prototype: ', Browser .prototype);
	print ('Browser .__proto__: ', Browser .__proto__);
	print ('Object .create:     ', Object .create (Browser));

	Browser .description = Browser .name + ' V' + Browser .version;

	for (var p in Browser)
		print ('Browser: ', p, ' = ', Browser [p]);

	print ('getName:     ', Browser .getName ());
}

function fields ()
{
	print ('SFVec4f:       ', SFVec4f);
	print ('SFVec4f .name: ', SFVec4f .name);
	print ('SFVec4f ():    ', SFVec4f ());
	print ('SFVec4f .new:  ', new SFVec4f ());
	print ('SFVec4f .new:  ', new SFVec4f (1, 2, 3, 4));
}

"
  directOutput TRUE
}

DEF Script2 Script {
  inputOnly SFTime set_time

  url "v8:
var test = 1234;

print ('Script 2: ', test);

"
  directOutput TRUE
}

ROUTE _2.touchTime TO Script2.set_time
ROUTE _1.touchTime TO Script1.set_time
