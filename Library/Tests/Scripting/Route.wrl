#VRML V2.0 utf8

Transform {
  translation -2 2 0
  children [
    DEF AddTouch TouchSensor { }
    Shape {
      appearance Appearance {
        material Material { }
      }
      geometry Text {
         string "Add Route"
         fontStyle FontStyle { }
      }
    }
  ]
}

Transform {
  translation -2 0 0
  children [
    DEF RemoveTouch TouchSensor { }
    Shape {
      appearance Appearance {
        material Material { }
      }
      geometry Text {
         string "Remove Route"
         fontStyle FontStyle { }
      }
    }
  ]
}

Transform {
  translation -2 -2 0
  children [
    DEF DeleteTouch TouchSensor { }
    Shape {
      appearance Appearance {
        material Material { }
      }
      geometry Text {
         string "Delete Node"
         fontStyle FontStyle { }
      }
    }
  ]
}

DEF Debug Script {
	eventIn SFTime set_add
	eventIn SFTime set_remove
	eventIn SFTime set_delete
	eventIn SFVec3f set_translation
	field SFNode transform NULL
	field SFNode self USE Debug

	url "vrmlscript:
// Global variable to store Route.
var route;

function set_add ()
{
	transform = Browser .currentScene .createNode ('Transform');
	route     = Browser .currentScene .addRoute (transform, 'translation', self, 'set_translation');
	
	print ('ROUTE ' + route .sourceNode + '.' + route .sourceField + ' TO ' + route .destinationNode + '.' + route .destinationField);
}

function set_remove ()
{
	Browser .currentScene .deleteRoute (route);

	try
	{
		print ('ROUTE ' + route .sourceNode + '.' + route .sourceField + ' TO ' + route .destinationNode + '.' + route .destinationField);
	}
	catch (error)
	{
		print ('Route is deleted!');
	}
	
	route = undefined;
}

function set_delete ()
{
	transform = null;

	try
	{
		print ('ROUTE ' + route .sourceNode + '.' + route .sourceField + ' TO ' + route .destinationNode + '.' + route .destinationField);
	}
	catch (error)
	{
		print ('Route is deleted!');
	}

	route = undefined;
}
"
}

# 0

ROUTE AddTouch.touchTime TO Debug.set_add
ROUTE RemoveTouch.touchTime TO Debug.set_remove
ROUTE DeleteTouch.touchTime TO Debug.set_delete
