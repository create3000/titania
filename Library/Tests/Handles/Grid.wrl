#VRML V2.0 utf8 Titania V3.0.3

EXTERNPROTO Torus [
  exposedField   SFFloat minorRadius
  exposedField   SFFloat majorRadius
  exposedField   SFInt32 minorDimension
  exposedField   SFInt32 majorDimension
  field          SFBool  solid
]
"Torus.json"

PROTO Grid [
  exposedField   SFInt32 xDimension 10
  exposedField   SFFloat xSpacing 1
  exposedField   SFInt32 zDimension 10
  exposedField   SFFloat zSpacing 1
  exposedField   SFColor color 0 0 0
  exposedField   SFFloat transparency 0.5
  field          SFBool  solid TRUE
]
{
  PROTO Fields [
    exposedField SFInt32 xDimension 10
    exposedField SFFloat xSpacing 1
    exposedField SFInt32 zDimension 10
    exposedField SFFloat zSpacing 1
    exposedField SFFloat transparency 0.66
  ]
  {
    Group { }
  }

  Transform {
    children [
      DEF Plane Transform {
        rotation 1 0 0 1.5708
        scale 10 10 1
        children Shape {
          appearance Appearance {
            material DEF Material2 Material {
              diffuseColor IS color
              transparency 0.5
            }
          }
          geometry Rectangle2D {
            size 1 1
            solid IS solid
          }
        }
      }
      Transform {
        children Shape {
          appearance Appearance {
            material DEF Material3 Material {
              emissiveColor IS color
              transparency 0.594604
            }
          }
          geometry DEF Axis IndexedLineSet {
            coordIndex [
              0,
              1,
              -1,
              2,
              3,
              -1
            ]
            coord Coordinate {
              point [
                -5.25 0 0,
                5.25 0 0,
                0 0 -5.25,
                0 0 5.25
              ]
            }
          }
        }
      }
      Transform {
        children Shape {
          appearance Appearance {
            material DEF Winter19 Material {
              ambientIntensity 0.212121
              diffuseColor 0.442456 0.506497 0.842424
              specularColor 0.405259 0.410811 0.410811
              emissiveColor IS color
              shininess 0.524324
              transparency 0.5
            }
          }
          geometry DEF Grid IndexedLineSet {
            coordIndex [
              0,
              1,
              -1,
              2,
              3,
              -1,
              4,
              5,
              -1,
              6,
              7,
              -1,
              8,
              9,
              -1,
              10,
              11,
              -1,
              12,
              13,
              -1,
              14,
              15,
              -1,
              16,
              17,
              -1,
              18,
              19,
              -1,
              20,
              21,
              -1,
              22,
              23,
              -1,
              24,
              25,
              -1,
              26,
              27,
              -1,
              28,
              29,
              -1,
              30,
              31,
              -1,
              32,
              33,
              -1,
              34,
              35,
              -1,
              36,
              37,
              -1,
              38,
              39,
              -1,
              40,
              41,
              -1,
              42,
              43,
              -1
            ]
            coord Coordinate {
              point [
                -5 0 -5,
                -5 0 5,
                -4 0 -5,
                -4 0 5,
                -3 0 -5,
                -3 0 5,
                -2 0 -5,
                -2 0 5,
                -1 0 -5,
                -1 0 5,
                0 0 -5,
                0 0 5,
                1 0 -5,
                1 0 5,
                2 0 -5,
                2 0 5,
                3 0 -5,
                3 0 5,
                4 0 -5,
                4 0 5,
                5 0 -5,
                5 0 5,
                -5 0 -5,
                5 0 -5,
                -5 0 -4,
                5 0 -4,
                -5 0 -3,
                5 0 -3,
                -5 0 -2,
                5 0 -2,
                -5 0 -1,
                5 0 -1,
                -5 0 0,
                5 0 0,
                -5 0 1,
                5 0 1,
                -5 0 2,
                5 0 2,
                -5 0 3,
                5 0 3,
                -5 0 4,
                5 0 4,
                -5 0 5,
                5 0 5
              ]
            }
          }
        }
      }
      DEF Sphere Transform {
        translation 5 6.14158 0
        children [
          DEF Animation Group {
            metadata DEF Animation_1 MetadataSet {
              name "Animation"
              reference "http://titania.create3000.de"
              value [
                DEF duration MetadataInteger {
                  name "duration"
                  reference "http://titania.create3000.de"
                  value 10
                }
                DEF framesPerSecond MetadataInteger {
                  name "framesPerSecond"
                  reference "http://titania.create3000.de"
                  value 10
                }
              ]
            }
            children [
              DEF AnimationTimer TimeSensor {
                loop TRUE
              }
              DEF SphereTranslationInterpolator PositionInterpolator {
                metadata DEF Interpolator MetadataSet {
                  name "Interpolator"
                  reference "http://titania.create3000.de"
                  value [
                    DEF key MetadataInteger {
                      name "key"
                      reference "http://titania.create3000.de"
                      value [
                        0,
                        10
                      ]
                    }
                    DEF keyValue MetadataDouble {
                      name "keyValue"
                      reference "http://titania.create3000.de"
                      value [
                        5,
                        1.17052340507507,
                        0,
                        5,
                        7.28926181793213,
                        0
                      ]
                    }
                    DEF keyType MetadataString {
                      name "keyType"
                      reference "http://titania.create3000.de"
                      value [
                        "SPLINE",
                        "SPLINE"
                      ]
                    }
                  ]
                }
                key [
                  0,
                  0.1,
                  0.2,
                  0.3,
                  0.4,
                  0.5,
                  0.6,
                  0.7,
                  0.8,
                  0.9,
                  1
                ]
                keyValue [
                  5 1.17052 0,
                  5 1.34185 0,
                  5 1.80687 0,
                  5 2.49217 0,
                  5 3.32432 0,
                  5 4.22989 0,
                  5 5.13547 0,
                  5 5.96761 0,
                  5 6.65291 0,
                  5 7.11794 0,
                  5 7.28926 0
                ]
              }
            ]
          }
          Shape {
            appearance Appearance {
              material DEF Winter28 Material {
                ambientIntensity 0.0761043
                diffuseColor 0.230477 0.106718 0.285207
                specularColor 0.551351 0 0.234225
                shininess 0.0540541
              }
            }
            geometry IndexedFaceSet {
              texCoordIndex [
                2,
                0,
                1,
                -1,
                12,
                0,
                2,
                -1,
                4,
                13,
                14,
                -1,
                5,
                0,
                15,
                -1,
                1,
                0,
                5,
                -1,
                6,
                16,
                2,
                -1,
                7,
                2,
                1,
                -1,
                17,
                1,
                5,
                -1,
                9,
                18,
                4,
                -1,
                10,
                4,
                19,
                -1,
                7,
                11,
                6,
                -1,
                20,
                11,
                7,
                -1,
                9,
                11,
                21,
                -1,
                10,
                11,
                9,
                -1,
                6,
                11,
                10,
                -1,
                2,
                7,
                6,
                -1,
                1,
                22,
                7,
                -1,
                5,
                23,
                24,
                -1,
                4,
                10,
                9,
                -1,
                25,
                6,
                10,
                -1
              ]
              coordIndex [
                2,
                0,
                1,
                -1,
                3,
                0,
                2,
                -1,
                4,
                0,
                3,
                -1,
                5,
                0,
                4,
                -1,
                1,
                0,
                5,
                -1,
                6,
                3,
                2,
                -1,
                7,
                2,
                1,
                -1,
                8,
                1,
                5,
                -1,
                9,
                5,
                4,
                -1,
                10,
                4,
                3,
                -1,
                7,
                11,
                6,
                -1,
                8,
                11,
                7,
                -1,
                9,
                11,
                8,
                -1,
                10,
                11,
                9,
                -1,
                6,
                11,
                10,
                -1,
                2,
                7,
                6,
                -1,
                1,
                8,
                7,
                -1,
                5,
                9,
                8,
                -1,
                4,
                10,
                9,
                -1,
                3,
                6,
                10,
                -1
              ]
              texCoord TextureCoordinate {
                point [
                  0.2 0.647584,
                  0.3 0.352416,
                  0.4 0.647584,
                  0.5 1,
                  1 0.647584,
                  0.1 0.352416,
                  0.6 0.647584,
                  0.5 0.352416,
                  1 0,
                  0.9 0.352416,
                  0.8 0.647584,
                  0.7 0.352416,
                  0.3 1,
                  1.2 0.647584,
                  1.1 1,
                  0 0.647584,
                  0.5 1,
                  0.2 0,
                  1.1 0.352416,
                  0.9 1,
                  0.6 0,
                  0.8 0,
                  0.4 0,
                  -0.1 0.352416,
                  -2.77556e-17 0,
                  0.7 1
                ]
              }
              coord Coordinate {
                point [
                  -0.850651 0.447214 -0.276393,
                  -0.850651 -0.447214 0.276393,
                  -0.525731 0.447214 0.723607,
                  0 1 2.77556e-17,
                  2.94903e-16 0.447214 -0.894427,
                  -0.525731 -0.447214 -0.723607,
                  0.525731 0.447214 0.723607,
                  -2.94903e-16 -0.447214 0.894427,
                  0 -1 -2.77556e-17,
                  0.525731 -0.447214 -0.723607,
                  0.850651 0.447214 -0.276393,
                  0.850651 -0.447214 0.276393
                ]
              }
            }
          }
        ]
      }
      DEF Torus Transform {
        translation 3.49933 0 0
        children Shape {
          appearance Appearance {
            material DEF Winter8 Material {
              ambientIntensity 0.253968
              diffuseColor 1 1 0.474361
              shininess 0.0378378
            }
          }
          geometry Torus {
            majorRadius 5
            solid FALSE
          }
        }
      }
    ]
  }

  DEF _Grid Script {
    field          SFNode plane USE Plane
    field          SFNode axis USE Axis
    field          SFNode grid USE Grid
    field          SFNode axisMaterial USE Material3
    field          SFNode fields DEF Fields Fields {
      xDimension IS xDimension
      xSpacing IS xSpacing
      zDimension IS zDimension
      zSpacing IS zSpacing
      transparency IS transparency
    }

    url "vrmlscript:
function set_dimension ()
{
}

function set_spacing ()
{
}

function initialize ()
{
	fields .transparency = fields .transparency;

	// Plane

	plane .scale = new SFVec3f (fields .xDimension * fields .xSpacing, fields .zDimension * fields .zSpacing, 1);
	
	// Axis

	axis .coord .point = new MFVec3f (new SFVec3f (-plane .scale .x / 2 - fields .xSpacing / 4, 0, 0),
	                                  new SFVec3f ( plane .scale .x / 2 + fields .xSpacing / 4, 0, 0),
	                                  new SFVec3f (0, 0, -plane .scale .y / 2 - fields .zSpacing / 4),
	                                  new SFVec3f (0, 0,  plane .scale .y / 2 + fields .zSpacing / 4));
  
	axisMaterial .transparency = Math .pow (fields .transparency, 3 / 4);

	// Grid

	var coordIndex     = new MFInt32 ();
	coordIndex .length = 3 * (fields .xDimension + fields .zDimension);
	
	var point     = grid .coord .point;
	point .length = 2 * (fields .xDimension + fields .zDimension);

	var i = 0;
	
	for (; i < fields .xDimension + 1; ++ i)
	{
		point [2 * i]          = new SFVec3f (-plane .scale .x / 2 + fields .xSpacing * i, 0, -plane .scale .y / 2);
		point [2 * i + 1]      = new SFVec3f (-plane .scale .x / 2 + fields .xSpacing * i, 0,  plane .scale .y / 2);
		coordIndex [3 * i]     = 2 * i;
		coordIndex [3 * i + 1] = 2 * i + 1;
		coordIndex [3 * i + 2] = -1;
	}
	
	for (; i < fields .zDimension + 1 + fields .xDimension + 1; ++ i)
	{
		point [2 * i]          = new SFVec3f (-plane .scale .x / 2, 0, -plane .scale .y / 2 + fields .zSpacing * (i - fields .xDimension - 1));
		point [2 * i + 1]      = new SFVec3f ( plane .scale .x / 2, 0, -plane .scale .y / 2 + fields .zSpacing * (i - fields .xDimension - 1));
		coordIndex [3 * i]     = 2 * i;
		coordIndex [3 * i + 1] = 2 * i + 1;
		coordIndex [3 * i + 2] = -1;
	}

	grid .set_coordIndex = coordIndex;
}
"
    directOutput TRUE
    mustEvaluate TRUE
  }

  ROUTE Fields.transparency_changed TO Winter19.set_transparency
  ROUTE Winter19.transparency_changed TO Material2.set_transparency
  ROUTE Winter19.diffuseColor_changed TO Material3.set_diffuseColor
  ROUTE AnimationTimer.fraction_changed TO SphereTranslationInterpolator.set_fraction
  ROUTE SphereTranslationInterpolator.value_changed TO Sphere.set_translation
}

PROTO AngleGrid [
  exposedField   SFVec3f    translation 0 0 0
  exposedField   SFRotation rotation 0 0 1 0
  exposedField   SFVec3f    scale 1 1 1
  exposedField   MFInt32    dimension [
    5,
    16,
    10
  ]
  exposedField   MFInt32    majorLineEvery [
    5,
    2,
    5
  ]
  exposedField   MFInt32    majorLineOffset [
    0,
    0,
    0
  ]
  exposedField   SFColor    color 0.5 0.5 0.5
  exposedField   SFFloat    transparency 0.8
  exposedField   SFColor    lineColor 1 0.7 0.7
  exposedField   SFFloat    lineTransparency 0.8
  exposedField   SFColor    majorLineColor 1 0.7 0.7
  exposedField   SFFloat    majorLineTransparency 0.6
  field          SFBool     solid TRUE
]
{
  Transform {
    translation IS translation
    rotation IS rotation
    scale IS scale
    children [
      DEF Disk Transform {
        rotation -5.2594820914624e-13 0.70710528118436 0.707108281185553 3.14159
        scale 5 5 1
        children Shape {
          appearance Appearance {
            material DEF Material2_1 Material {
              diffuseColor 0 0 0
              emissiveColor IS color
              transparency IS transparency
            }
          }
          geometry Disk2D {
            solid IS solid
          }
        }
      }
      DEF Rings Transform {
        rotation 0 0.70710528118436 0.707108281185553 3.14159
        children [
          Transform {
            children Shape {
              appearance DEF MinorAppearance Appearance {
                material DEF _1 Material {
                  emissiveColor IS lineColor
                  transparency IS lineTransparency
                }
              }
              geometry Circle2D { }
            }
          }
          Transform {
            scale 2 2 2
            children Shape {
              appearance USE MinorAppearance
              geometry Circle2D { }
            }
          }
          Transform {
            scale 3 3 3
            children Shape {
              appearance USE MinorAppearance
              geometry Circle2D { }
            }
          }
          Transform {
            scale 4 4 4
            children Shape {
              appearance USE MinorAppearance
              geometry Circle2D { }
            }
          }
          Transform {
            scale 5 5 5
            children Shape {
              appearance DEF MajorAppearance Appearance {
                material DEF MajorMaterial Material {
                  emissiveColor IS majorLineColor
                  transparency IS majorLineTransparency
                }
              }
              geometry Circle2D { }
            }
          }
        ]
      }
      DEF MinorLines Shape {
        appearance USE MinorAppearance
        geometry DEF MinorLines_1 IndexedLineSet {
          coordIndex [
            0,
            1,
            -1,
            0,
            2,
            -1,
            0,
            3,
            -1,
            0,
            4,
            -1,
            0,
            5,
            -1,
            0,
            6,
            -1,
            0,
            7,
            -1,
            0,
            8,
            -1
          ]
          coord Coordinate {
            point [
              0 0 0,
              1.91342 0 4.6194,
              4.6194 0 1.91342,
              4.6194 0 -1.91342,
              1.91342 0 -4.6194,
              -1.91342 0 -4.6194,
              -4.6194 0 -1.91342,
              -4.6194 0 1.91342,
              -1.91342 0 4.6194
            ]
          }
        }
      }
      DEF MajorLines Shape {
        appearance USE MajorAppearance
        geometry DEF MajorLines_1 IndexedLineSet {
          coordIndex [
            0,
            1,
            -1,
            0,
            2,
            -1,
            0,
            3,
            -1,
            0,
            4,
            -1,
            0,
            5,
            -1,
            0,
            6,
            -1,
            0,
            7,
            -1,
            0,
            8,
            -1
          ]
          coord Coordinate {
            point [
              0 0 0,
              0 0 5,
              3.53553 0 3.53553,
              5 0 3.06162e-16,
              3.53553 0 -3.53553,
              6.12323e-16 0 -5,
              -3.53553 0 -3.53553,
              -5 0 -9.18485e-16,
              -3.53553 0 3.53553
            ]
          }
        }
      }
      DEF MinorPoints Shape {
        appearance Appearance {
          lineProperties LineProperties {
            linewidthScaleFactor 4
          }
          material USE _1
        }
        geometry DEF MinorPoints_1 PointSet {
          coord Coordinate {
            point [
              0 -4 0,
              0 -3 0,
              0 -2 0,
              0 -1 0,
              0 1 0,
              0 2 0,
              0 3 0,
              0 4 0
            ]
          }
        }
      }
      DEF MajorPoints Shape {
        appearance Appearance {
          lineProperties LineProperties {
            linewidthScaleFactor 6
          }
          material USE MajorMaterial
        }
        geometry DEF MajorPoints_1 PointSet {
          coord Coordinate {
            point [
              0 -5 0,
              0 0 0,
              0 5 0
            ]
          }
        }
      }
    ]
  }

  DEF AngleGridScript Script {
    exposedField   MFInt32 dimension IS dimension
    exposedField   MFInt32 majorLineEvery IS majorLineEvery
    exposedField   MFInt32 majorLineOffset IS majorLineOffset
    field          SFNode  disk USE Disk
    field          SFNode  rings USE Rings
    field          SFNode  minorLines USE MinorLines_1
    field          SFNode  majorLines USE MajorLines_1
    field          SFNode  minorPoints USE MinorPoints_1
    field          SFNode  majorPoints USE MajorPoints_1
    field          SFNode  minorAppearance USE MinorAppearance
    field          SFNode  majorAppearance USE MajorAppearance

    url "javascript:

function initialize ()
{
	eventsProcessed ();
}

function eventsProcessed ()
{
	var radius = dimension [0];

	// Plane

	disk .scale = new SFVec3f (radius, radius, 1);

	// Radiuses

	generateRadiuses (true,  radius, majorLines);
	generateRadiuses (false, radius, minorLines);

	// Rings

	generateRings ();

	// Points

	generatePoints (true,  majorPoints .coord .point);
	generatePoints (false, minorPoints .coord .point);
}

function generateRadiuses (major, radius, grid)
{
	var angle      = 2 * Math .PI / dimension [1];
	var coordIndex = new MFInt32 ();
	var point      = grid .coord .point;
	var p          = 0;

	point [p ++] = new SFVec3f ();

	for (var i = 0, c = 0; i < dimension [1]; ++ i)
	{
		if (major - isMajorLine (i, 1))
			continue;
	
		var a = angle * i;

		point [p] = new SFVec3f (radius * Math .sin (a), 0, radius * Math .cos (a));

		coordIndex [c ++] = 0;
		coordIndex [c ++] = p;
		coordIndex [c ++] = -1;
		
		++ p;
	}

	point .length = p;

	grid .set_coordIndex = coordIndex;
}

function generateRings ()
{
	var scene = Browser .currentScene;
	var size  = Math .min (dimension [0], rings .children .length);

	for (var i = 0; i < size; ++ i)
	{
		var s         = i + 1;
		var transform = rings .children [i];
		var major     = isMajorLine (s, 0);

		transform .children [0] .appearance = major ? majorAppearance : minorAppearance;
		transform .scale                    = new SFVec3f (s, s, s);
	}

	for (var i = size; i < dimension [0]; ++ i)
	{
		var s         = i + 1;
		var circle    = scene .createNode (\"Circle2D\");
		var shape     = scene .createNode (\"Shape\");
		var transform = scene .createNode (\"Transform\");
		var major     = isMajorLine (s, 0);

		shape .appearance       = major ? majorAppearance : minorAppearance;
		shape .geometry         = circle;
		transform .children [0] = shape;
		transform .scale        = new SFVec3f (s, s, s);
		rings .children [i]     = transform;
	}

	rings .children .length = dimension [0];
}

function generatePoints (major, point)
{
	var scaleY1_2 = -dimension [2] / 2;
	var p         = 0;

	for (var i = 0, size = dimension [2] + 1; i < size; ++ i)
	{
		if (major - isMajorLineXYZ (i, 2))
			continue;

		point [p] = new SFVec3f (0, scaleY1_2 + i, 0);
		++ p;
	}

	point .length = p;
}

function isMajorLine (i, index)
{
	for (var d = index; d < majorLineEvery .length; d += 3)
	{
		if (isMajor (i, dimension [index], majorLineEvery [d], majorLineOffset [d]))
			return true;
	}

	return false;
}

function isMajor (i, dimension, majorLineEvery, majorLineOffset)
{
	if (majorLineEvery)
	{
		var index = Math .floor (i - majorLineOffset);

		return !(index % majorLineEvery);
	}

	return false;
}

function isMajorLineXYZ (i, index)
{
	for (var d = index; d < majorLineEvery .length; d += 3)
	{
		if (isMajorXYZ (i, dimension [index], majorLineEvery [d], majorLineOffset [d]))
			return true;
	}

	return false;
}

function isMajorXYZ (i, dimension, majorLineEvery, majorLineOffset)
{
	if (majorLineEvery)
	{
		var index = Math .floor (i - dimension / 2 - majorLineOffset);

		return !(index % majorLineEvery);
	}

	return false;
}
"
    directOutput TRUE
    mustEvaluate TRUE
  }
}

WorldInfo {
  metadata DEF Titania MetadataSet {
    name "Titania"
    reference "http://titania.create3000.de"
    value [
      DEF NavigationInfo MetadataSet {
        name "NavigationInfo"
        reference "http://titania.create3000.de"
        value DEF type MetadataString {
          name "type"
          reference "http://titania.create3000.de"
          value "EXAMINE"
        }
      }
      DEF Viewpoint MetadataSet {
        name "Viewpoint"
        reference "http://titania.create3000.de"
        value [
          DEF position MetadataDouble {
            name "position"
            reference "http://titania.create3000.de"
            value [
              -12.8654704807033,
              8.73385788745835,
              -28.9346544552643
            ]
          }
          DEF orientation MetadataDouble {
            name "orientation"
            reference "http://titania.create3000.de"
            value [
              -0.0488158223062779,
              -0.98722646861498,
              -0.151660526039431,
              2.52624580008531
            ]
          }
          DEF centerOfRotation MetadataDouble {
            name "centerOfRotation"
            reference "http://titania.create3000.de"
            value [
              3.32475432138156,
              7.31334313996967e-07,
              -6.39045443036042
            ]
          }
        ]
      }
      DEF Selection MetadataSet {
        name "Selection"
        reference "http://titania.create3000.de"
        value DEF nodes MetadataSet {
          name "nodes"
          reference "http://titania.create3000.de"
        }
      }
      DEF AngleGrid MetadataSet {
        name "AngleGrid"
        reference "http://titania.create3000.de"
        value DEF enabled MetadataBoolean {
          name "enabled"
          reference "http://titania.create3000.de"
          value FALSE
        }
      }
      DEF AxonometricGrid MetadataSet {
        name "AxonometricGrid"
        reference "http://titania.create3000.de"
        value DEF enabled_1 MetadataBoolean {
          name "enabled"
          reference "http://titania.create3000.de"
          value FALSE
        }
      }
      DEF Grid_1 MetadataSet {
        name "Grid"
        reference "http://titania.create3000.de"
        value [
          DEF enabled_2 MetadataBoolean {
            name "enabled"
            reference "http://titania.create3000.de"
            value FALSE
          }
          DEF dimension MetadataInteger {
            name "dimension"
            reference "http://titania.create3000.de"
            value [
              18,
              10,
              50
            ]
          }
        ]
      }
    ]
  }
  title "Grid"
}

Transform {
  translation 18.4389 0 0
  children Grid {
    xDimension 20
    color 1 0.5 0
    transparency 0
  }
}

Transform {
  translation -11.7894 0 0
  children Grid {
    zDimension 20
    color 1 0.5 0
    transparency 0
  }
}

Transform {
  translation 0 0 -13.0309
  center 0 0 -6.79532
  children AngleGrid { }
}

Inline {
  url "QuadSphere.x3dv"
}
