#VRML V2.0 utf8 Titania V1.4.9

PROTO LineRectangle2D [ ]
{
  IndexedLineSet {
    coordIndex [
      0,
      1,
      2,
      3,
      0,
      -1
    ]
    coord Coordinate {
      point [
        -0.5 -0.5 0,
        0.5 -0.5 0,
        0.5 0.5 0,
        -0.5 0.5 0
      ]
    }
  }
}

PROTO BBox2 [
  exposedField SFVec3f translation 0 0 0
  exposedField SFVec3f scale 1 1 1
  exposedField SFColor color 1 1 1
]
{
  Transform {
    translation IS translation
    scale IS scale
    children Transform {
      translation 0.5 -0.5 0
      children Shape {
        appearance Appearance {
          material Material {
            emissiveColor IS color
          }
        }
        geometry LineRectangle2D { }
      }
    }
  }
}

WorldInfo {
  metadata DEF Titania MetadataSet {
    name "Titania"
    reference "http://titania.create3000.de"
    value [
      DEF NavigationInfo MetadataSet {
        name "NavigationInfo"
        reference "http://titania.create3000.de"
        value DEF type MetadataString {
          name "type"
          reference "http://titania.create3000.de"
          value "EXAMINE"
        }
      }
      DEF Viewpoint MetadataSet {
        name "Viewpoint"
        reference "http://titania.create3000.de"
        value [
          DEF position MetadataDouble {
            name "position"
            reference "http://titania.create3000.de"
            value [
              0.177462155033162,
              -0.0250021200095893,
              6.93979866061725
            ]
          }
          DEF orientation MetadataDouble {
            name "orientation"
            reference "http://titania.create3000.de"
            value [
              0,
              0,
              1,
              0
            ]
          }
          DEF centerOfRotation MetadataDouble {
            name "centerOfRotation"
            reference "http://titania.create3000.de"
            value [
              0.177462393451741,
              -0.025002080670524,
              0
            ]
          }
        ]
      }
      DEF Selection MetadataSet {
        name "Selection"
        reference "http://titania.create3000.de"
        value [
          DEF children MetadataSet {
            name "children"
            reference "http://titania.create3000.de"
            value DEF Text Transform {
              children Shape {
                appearance Appearance {
                  material Material {
                    diffuseColor 1 0 0
                    emissiveColor 1 1 1
                  }
                  texture ImageTexture {
                    url [
                      "http://cdn.rawgit.com/create3000/Library/master/Textures/Miscellaneous/lena.jpg",
                      "https://cdn.rawgit.com/create3000/Library/master/Textures/Miscellaneous/lena.jpg",
                      "http://rawgit.com/create3000/Library/master/Textures/Miscellaneous/lena.jpg",
                      "https://rawgit.com/create3000/Library/master/Textures/Miscellaneous/lena.jpg"
                    ]
                  }
                }
                geometry DEF Text_1 Text {
                  metadata DEF Text_2 MetadataSet {
                    name "Text"
                    reference "http://titania.create3000.de"
                    value DEF string MetadataString {
                      name "string"
                      reference "http://titania.create3000.de"
                      value "Read a lot more good Text today! Read a lot more good Text today! Read a lot more good Text today!"
                    }
                  }
                  string [
                    "Read a lot more good Text today!",
                    "Read a lot more good Text today!",
                    "Read a lot more good Text today!",
                    "Über Häuser, außer Büsche."
                  ]
                  fontStyle DEF _1 FontStyle {
                    family [
                      "SANS",
                      "Ubuntu Mono"
                    ]
                    style "BOLDITALIC"
                    justify [
                      "BEGIN",
                      "FIRST"
                    ]
                  }
                }
              }
            }
          }
          DEF previous MetadataSet {
            name "previous"
            reference "http://titania.create3000.de"
          }
        ]
      }
      DEF AngleGrid MetadataSet {
        name "AngleGrid"
        reference "http://titania.create3000.de"
        value DEF enabled MetadataBoolean {
          name "enabled"
          reference "http://titania.create3000.de"
          value FALSE
        }
      }
      DEF Grid MetadataSet {
        name "Grid"
        reference "http://titania.create3000.de"
        value DEF enabled_1 MetadataBoolean {
          name "enabled"
          reference "http://titania.create3000.de"
          value TRUE
        }
      }
    ]
  }
  title "Text"
}

Background {
  skyColor 0.2 0.2 0.2
}

Viewpoint {
  description "Viewpoint"
  position 0.860131 -2.00347 11.226
  centerOfRotation 0.860131 -2.00347 -9.53674e-07
}

USE Text

DEF RedBox Transform {
  translation -0.5 0.5 0
  children Shape {
    appearance Appearance {
      material Material {
        diffuseColor 1 0 0
        transparency 0.5
      }
    }
    geometry Box {
      size 1 1 1
    }
  }
}

DEF GreenBox Transform {
  translation -0.5 -0.5 0
  children Shape {
    appearance Appearance {
      material Material {
        diffuseColor 0 1 0
        transparency 0.5
      }
    }
    geometry Box {
      size 1 1 1
    }
  }
}

DEF BlueBox Transform {
  translation -0.5 -1.5 0
  children Shape {
    appearance Appearance {
      material Material {
        diffuseColor 0 0 1
        transparency 0.5
      }
    }
    geometry Box {
      size 1 1 1
    }
  }
}

DEF YellowBox Transform {
  translation 6 1.5 0
  scale 12 1 1
  children Shape {
    appearance Appearance {
      material Material {
        diffuseColor 1 1 0
        transparency 0.49
      }
    }
    geometry Box {
      size 1 1 1
    }
  }
}

DEF LineBounds Transform {
  translation 0 0.759844 0
  children [
    BBox2 {
      scale 18.8945 0.995684 1
      color 1 0 0
    }
    BBox2 {
      translation 0 -0.995684 0
      scale 18.8945 1 1
      color 0 1 0
    }
    BBox2 {
      translation 0 -1.99568 0
      scale 18.8945 1 1
      color 0 0 1
    }
    BBox2 {
      translation 0 -2.99568 0
      scale 15.7019 1 1
      color 1 1 0
    }
  ]
}

DEF TextBounds Transform {
  translation 0 0.759844 0
  scale 18.8945 3.90188 1
  children BBox2 { }
}

DEF Bounds Script {
  eventIn  MFVec2f set_lineBounds
  eventIn  SFVec2f set_textBounds
  eventOut SFVec3f translation_changed
  eventOut SFVec3f scale_changed
  field    SFNode  lineBounds USE LineBounds
  field    MFColor color [
    1 0 0,
    0 1 0,
    0 0 1,
    1 1 0,
    0 1 1,
    1 0 1
  ]
  field    SFNode  text USE Text_1

  url "vrmlscript:

var
	BEGIN  = 0,
	FIRST  = 1,
	MIDDLE = 2,
	END    = 3;

function get_normalizedMajorAlignment (majorAlignment, normal)
{
	if (majorAlignment == 'END')
		return normal ? END : BEGIN;

	if (majorAlignment == 'MIDDLE')
		return MIDDLE;

	return normal ? BEGIN : END;

}

function get_majorAlignment (index)
{
	if (text .fontStyle .horizontal)
	{
		var major = get_normalizedMajorAlignment (text .fontStyle .justify [0], text .fontStyle .leftToRight);
	
		if (major == END)
			return text .textBounds .x - text .lineBounds [index] .x;

		if (major == MIDDLE)
			return (text .textBounds .x - text .lineBounds [index] .x) / 2;

		return 0;
	}

	var major = get_normalizedMajorAlignment (text .fontStyle .justify [0], text .fontStyle .topToBottom);
	
	if (major == END)
		return -text .textBounds .y + text .lineBounds [index] .y;

	if (major == MIDDLE)
		return (-text .textBounds .y + text .lineBounds [index] .y) / 2;

	return 0;
}

function set_lineBounds (value, time)
{
	var transforms = new MFNode ();
	
	var
		x = 0,
		y = 0;
		
	for (var i in value)
	{
		var transform = Browser .currentScene .createProto ('BBox2');
		
		if (text .fontStyle .horizontal)
		{
			transform .translation = new SFVec3f (get_majorAlignment (i),
			                                      text .fontStyle .topToBottom ? y : y - text .textBounds .y,
			                                      0);
		
			y += text .fontStyle .topToBottom ? -value [i] .y : value [i] .y;

			transform .scale = new SFVec3f (value [i] .x,
			                                text .fontStyle .topToBottom ? value [i] .y : -value [i] .y,
			                                1);
		}
		else
		{
			transform .translation = new SFVec3f (text .fontStyle .leftToRight ? x : x + text .textBounds .x,
			                                      get_majorAlignment (i),
			                                      0);
		
			x += text .fontStyle .leftToRight ? value [i] .x : -value [i] .x;

			transform .scale = new SFVec3f (text .fontStyle .leftToRight ? value [i] .x : -value [i] .x,
			                                value [i] .y,
			                                1);
		}

		transform .color = color [i % color .length];

		transforms [transforms .length] = transform;
	}

	lineBounds .children = transforms;
}

function set_textBounds (value, time)
{
	scale_changed = new SFVec3f (value .x, value .y, 1);
}
  "
}

ROUTE Text_1.origin TO LineBounds.set_translation
ROUTE Text_1.lineBounds TO Bounds.set_lineBounds
ROUTE Text_1.textBounds TO Bounds.set_textBounds
ROUTE Text_1.origin TO TextBounds.set_translation
ROUTE Bounds.scale_changed TO TextBounds.set_scale
