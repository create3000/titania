#VRML V2.0 utf8 Titania

META "title" "DiskSensor"

PROTO DiskSensor [
  exposedField SFString   description ""
  exposedField SFRotation axisRotation 0 0 1 0
  exposedField SFFloat    offset 0
  eventOut     SFRotation rotation_changed
  eventOut     SFFloat    value_changed
]
{
  DEF CylinderTouch CylinderSensor {
    description IS description
    axisRotation IS axisRotation
    offset IS offset
    rotation_changed IS rotation_changed
  }

  DEF Wheel Script {
    eventIn      SFRotation set_rotation
    exposedField SFRotation axisRotation IS axisRotation
    eventOut     SFFloat    value_changed IS value_changed
    field        SFVec3f    startVector 0 0 1

    url "vrmlscript:
function initialize ()
{
	startVector = axisRotation .multVec (new SFVec3f (0, 0, 1));
}

function set_rotation (value)
{
	var endVector     = value .multVec (new SFVec3f (0, 0, 1));
	var deltaRotation = new SFRotation (startVector, endVector);

	startVector = endVector;

	var axis  = axisRotation .multVec (new SFVec3f (0, 1, 0));
	var angle = axis .dot (deltaRotation .getAxis ());
	var sign  = angle < 0 ? 1 : -1;
	
	value_changed += sign * deltaRotation .angle;
}
"
  }

  ROUTE CylinderTouch.rotation_changed TO Wheel.set_rotation
}

Viewpoint {
  description "Top"
  position 0 8 0
  orientation -1 0 -0 1.5708
}

Viewpoint {
  description "Front"
  position 0 0 8
}

DEF Text_1 Transform {
  translation 0 0 -2
  rotation -1 0 0 1.5708
  children Shape {
    appearance Appearance {
      material Material { }
    }
    geometry DEF Text Text {
      string "0.00"
      fontStyle FontStyle {
        family "TYPEWRITER"
        justify [ "MIDDLE", "MIDDLE" ]
      }
    }
  }
}

DEF Debug Script {
  eventIn  SFFloat  set_value
  eventOut MFString string_changed

  url "vrmlscript:
function set_value (value)
{
	var count = 2;

	var factor = Math .pow (10, count);
	var string = String (Math .floor (value * factor) / factor);
	
	var point = string .indexOf ('.');
	
	if (point < 0)
	{
		string += '.';

		for (var i = 0; i < count; ++ i)
			string += '0';	
	}
	else
	{
		var size = count - (string .length - point - 1);
		
		print (size);

		for (var i = 0; i < size; ++ i)
			string += '0';
	}

	string_changed = new MFString (string);
}
"
}

DEF Wheel_1 Transform {
  children [
    DEF DiskSensor DiskSensor {
      description "Wheel"
      offset -0.0087619
    }
    DEF XForm Transform {
      rotation 0 -1 0 0.0087619
      children Shape {
        appearance Appearance {
          texture ImageTexture {
            url "../images/image.png"
          }
        }
        geometry Cylinder { }
      }
    }
  ]
}

ROUTE DiskSensor.value_changed TO Debug.set_value
ROUTE Debug.string_changed TO Text.set_string
ROUTE DiskSensor.rotation_changed TO XForm.set_rotation
