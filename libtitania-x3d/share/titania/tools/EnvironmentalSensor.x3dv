#X3D V3.3 utf8 Titania V2.0.0

META "comment" "World of Titania"
META "created" "Thu, 29 May 2014 16:43:52 GMT"
META "creator" "Holger Seelig"
META "generator" "Titania V2.0.0, http://titania.create3000.de"
META "identifier" "file:///home/holger/Projekte/Titania/libtitania-x3d/share/titania/tools/EnvironmentalSensor.x3dv"
META "modified" "Mon, 26 Sep 2016 00:54:17 GMT"

EXTERNPROTO BooleanSwitch [
  inputOutput    SFBool  whichChoice
  initializeOnly SFVec3f bboxSize
  initializeOnly SFVec3f bboxCenter
  inputOnly      MFNode  addChildren
  inputOnly      MFNode  removeChildren
  inputOutput    MFNode  children
]
"library/BooleanSwitch.x3dv"

PROTO EnvironmentalSensor [
  # required fields
  inputOutput SFBool     enabled TRUE
  inputOutput SFBool     selected TRUE
  inputOutput SFColor    color 0.35 1 0.7
  inputOutput SFVec3f    size 1 1 1
  inputOutput SFVec3f    center 0 0 0
  inputOutput SFMatrix4f cameraSpaceMatrix 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1
  inputOutput SFMatrix4f modelViewMatrix 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1
  outputOnly  SFBool     isActive
  inputOutput SFNode     node NULL
]
{
  Collision {
    enabled FALSE
    children DEF BoundingBox Transform {
      translation IS center
      children [
        BooleanSwitch {
          whichChoice IS selected
          children [
            DEF _1 Group { }
            DEF Lines Shape {
              appearance Appearance {
                lineProperties DEF LineProperties LineProperties {
                  linewidthScaleFactor 1
                }
                material Material {
                  emissiveColor 1 1 1
                  transparency 0.2
                }
              }
              geometry IndexedLineSet {
                coordIndex [
                  0,
                  1,
                  2,
                  3,
                  0,
                  -1,
                  4,
                  5,
                  6,
                  7,
                  4,
                  -1,
                  0,
                  4,
                  -1,
                  3,
                  7,
                  -1,
                  1,
                  5,
                  -1,
                  2,
                  6,
                  -1
                ]
                coord DEF BBox Coordinate {
                  point [
                    -0.5 0.5 0.5,
                    -0.5 -0.5 0.5,
                    0.5 -0.5 0.5,
                    0.5 0.5 0.5,
                    -0.5 0.5 -0.5,
                    -0.5 -0.5 -0.5,
                    0.5 -0.5 -0.5,
                    0.5 0.5 -0.5
                  ]
                }
              }
            }
          ]
        }
        DEF Front Transform {
          translation 0 0 0.5
          children Transform {
            children [
              DEF FrontSensor PlaneSensor {
                enabled FALSE
                autoOffset FALSE
              }
              DEF Plane Shape {
                appearance DEF Transparent Appearance {
                  material DEF BBoxMaterial Material {
                    ambientIntensity 0
                    diffuseColor 0.2 0.2 0.2
                    emissiveColor 0.35 1 0.7
                    shininess 0
                    transparency 0.5
                  }
                }
                geometry Rectangle2D {
                  size 1 1
                  solid FALSE
                }
              }
            ]
          }
        }
        DEF Right Transform {
          translation 0.5 0 0
          children Transform {
            rotation 0 1 0 1.5708
            children [
              DEF RightSensor PlaneSensor {
                enabled FALSE
                autoOffset FALSE
              }
              USE Plane
            ]
          }
        }
        DEF Back Transform {
          translation 0 0 -0.5
          children Transform {
            rotation 0 1 0 3.14159
            children [
              DEF BackSensor PlaneSensor {
                enabled FALSE
                autoOffset FALSE
              }
              USE Plane
            ]
          }
        }
        DEF Left Transform {
          translation -0.5 0 0
          children Transform {
            rotation 0 -1 0 1.5708
            children [
              DEF LeftSensor PlaneSensor {
                enabled FALSE
                autoOffset FALSE
              }
              USE Plane
            ]
          }
        }
        DEF Top Transform {
          translation 0 0.5 0
          children Transform {
            rotation -1 0 0 1.5708
            children [
              DEF TopSensor PlaneSensor {
                enabled FALSE
                autoOffset FALSE
              }
              USE Plane
            ]
          }
        }
        DEF Bottom Transform {
          translation 0 -0.5 0
          children Transform {
            rotation 1 0 0 1.5708
            children [
              DEF BottomSensor PlaneSensor {
                enabled FALSE
                autoOffset FALSE
              }
              USE Plane
            ]
          }
        }
      ]
    }
  }

  DEF BBoxScript Script {
    inputOutput    SFBool     enabled IS enabled
    inputOutput    SFColor    color IS color
    inputOutput    SFMatrix4f cameraSpaceMatrix IS cameraSpaceMatrix
    inputOutput    SFMatrix4f modelViewMatrix IS modelViewMatrix
    inputOutput    SFVec3f    bboxSize IS size
    initializeOnly SFFloat    offset 0
    initializeOnly SFNode     bbox USE BBox
    initializeOnly SFNode     front USE Front
    initializeOnly SFNode     right USE Right
    initializeOnly SFNode     back USE Back
    initializeOnly SFNode     left USE Left
    initializeOnly SFNode     top USE Top
    initializeOnly SFNode     bottom USE Bottom
    inputOutput    SFNode     node IS node
    initializeOnly SFNode     material USE BBoxMaterial

    url "peaseblossom:

function initialize ()
{
	set_color ();
}

function set_enabled ()
{
	set_color ();
}

function set_color ()
{
	if (enabled)
		material .emissiveColor = color;
	else
		material .emissiveColor = new SFColor (color .r / 2, color .g / 2, color .b / 2);
}

function eventsProcessed ()
{
	var bboxSize1_2 = bboxSize .divide (2);

	// BBox

	bbox .point = new MFVec3f (new SFVec3f (-bboxSize1_2 .x,  bboxSize1_2 .y,  bboxSize1_2 .z),
	                           new SFVec3f (-bboxSize1_2 .x, -bboxSize1_2 .y,  bboxSize1_2 .z), 
	                           new SFVec3f ( bboxSize1_2 .x, -bboxSize1_2 .y,  bboxSize1_2 .z), 
	                           new SFVec3f ( bboxSize1_2 .x,  bboxSize1_2 .y,  bboxSize1_2 .z), 
	                           new SFVec3f (-bboxSize1_2 .x,  bboxSize1_2 .y, -bboxSize1_2 .z), 
	                           new SFVec3f (-bboxSize1_2 .x, -bboxSize1_2 .y, -bboxSize1_2 .z), 
	                           new SFVec3f ( bboxSize1_2 .x, -bboxSize1_2 .y, -bboxSize1_2 .z), 
	                           new SFVec3f ( bboxSize1_2 .x,  bboxSize1_2 .y, -bboxSize1_2 .z));

	// Position and scale planes

	var scale = new SFVec3f ();
	var m     = modelViewMatrix .multRight (cameraSpaceMatrix); // m = transformationMatrix
	m .getTransform (null, null, scale);

	var x = offset / Math .abs (scale .x);
	var y = offset / Math .abs (scale .y);
	var z = offset / Math .abs (scale .z);

	front  .translation = new SFVec3f ( 0,  0,  z + bboxSize1_2 .z);
	right  .translation = new SFVec3f ( x + bboxSize1_2 .x,  0,  0);
	back   .translation = new SFVec3f ( 0,  0, -z - bboxSize1_2 .z);
	left   .translation = new SFVec3f (-x - bboxSize1_2 .x,  0,  0);
	top    .translation = new SFVec3f ( 0,  y + bboxSize1_2 .y,  0);
	bottom .translation = new SFVec3f ( 0, -y - bboxSize1_2 .y,  0);
	
	front  .scale = new SFVec3f (bboxSize .x, bboxSize .y, 1);
	right  .scale = new SFVec3f (1, bboxSize .y, bboxSize .z);
	back   .scale = new SFVec3f (bboxSize .x, bboxSize .y, 1);
	left   .scale = new SFVec3f (1, bboxSize .y, bboxSize .z);
	top    .scale = new SFVec3f (bboxSize .x, 1, bboxSize .z);
	bottom .scale = new SFVec3f (bboxSize .x, 1, bboxSize .z);

}
"
    directOutput TRUE
  }
}

WorldInfo {
  metadata DEF Titania MetadataSet {
    name "Titania"
    reference "http://titania.create3000.de"
    value [
      DEF Selection MetadataSet {
        name "Selection"
        reference "http://titania.create3000.de"
        value DEF previous MetadataSet {
          name "previous"
          reference "http://titania.create3000.de"
        }
      }
      DEF NavigationInfo MetadataSet {
        name "NavigationInfo"
        reference "http://titania.create3000.de"
        value DEF type MetadataString {
          name "type"
          reference "http://titania.create3000.de"
          value "EXAMINE"
        }
      }
      DEF Viewpoint MetadataSet {
        name "Viewpoint"
        reference "http://titania.create3000.de"
        value [
          DEF position MetadataDouble {
            name "position"
            reference "http://titania.create3000.de"
            value [
              0,
              0,
              10
            ]
          }
          DEF orientation MetadataDouble {
            name "orientation"
            reference "http://titania.create3000.de"
            value [
              0,
              0,
              1,
              0
            ]
          }
          DEF centerOfRotation MetadataDouble {
            name "centerOfRotation"
            reference "http://titania.create3000.de"
            value [
              0,
              0,
              0
            ]
          }
        ]
      }
    ]
  }
  title "EnvironmentalSensor"
}

DEF Tool EnvironmentalSensor {
  color 0.5 0 1
}

EXPORT Tool
