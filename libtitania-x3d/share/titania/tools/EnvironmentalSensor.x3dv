#X3D V3.3 utf8 Titania V0.6.7

META "generator" "Titania V0.6.7, http://titania.create3000.de"

PROTO Interface [
  # required fields
  inputOutput SFColor    color 0.35 1 0.7
  inputOutput SFVec3f    size 1 1 1
  inputOutput SFVec3f    center 0 0 0
  inputOutput SFMatrix4f cameraSpaceMatrix 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1
  inputOutput SFMatrix4f modelViewMatrix 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1
  inputOutput SFBool     isActive FALSE
  inputOutput SFNode     node NULL
]
{
  Group { }
}

DEF Tool Interface {
  color 0.5 0 1
}

Collision {
  enabled FALSE
  children DEF BoundingBox Transform {
    children [
      DEF Front Transform {
        translation 0 0 0.5
        children Transform {
          children [
            DEF FrontSensor PlaneSensor {
              enabled FALSE
              autoOffset FALSE
            }
            DEF Plane Shape {
              appearance DEF Transparent Appearance {
                material DEF BBoxMaterial Material {
                  ambientIntensity 0
                  diffuseColor 0.2 0.2 0.2
                  emissiveColor 0.5 0 1
                  shininess 0
                  transparency 0.5
                }
              }
              geometry Rectangle2D {
                size 1 1
                solid FALSE
              }
            }
          ]
        }
      }
      DEF Right Transform {
        translation 0.5 0 0
        children Transform {
          rotation 0 1 0 1.5708
          children [
            DEF RightSensor PlaneSensor {
              enabled FALSE
              autoOffset FALSE
            }
            USE Plane
          ]
        }
      }
      DEF Back Transform {
        translation 0 0 -0.5
        children Transform {
          rotation 0 1 0 3.14159
          children [
            DEF BackSensor PlaneSensor {
              enabled FALSE
              autoOffset FALSE
            }
            USE Plane
          ]
        }
      }
      DEF Left Transform {
        translation -0.5 0 0
        children Transform {
          rotation 0 -1 0 1.5708
          children [
            DEF LeftSensor PlaneSensor {
              enabled FALSE
              autoOffset FALSE
            }
            USE Plane
          ]
        }
      }
      DEF Top Transform {
        translation 0 0.5 0
        children Transform {
          rotation -1 0 0 1.5708
          children [
            DEF TopSensor PlaneSensor {
              enabled FALSE
              autoOffset FALSE
            }
            USE Plane
          ]
        }
      }
      DEF Bottom Transform {
        translation 0 -0.5 0
        children Transform {
          rotation 1 0 0 1.5708
          children [
            DEF BottomSensor PlaneSensor {
              enabled FALSE
              autoOffset FALSE
            }
            USE Plane
          ]
        }
      }
    ]
  }
}

DEF BBoxScript Script {
  inputOutput    SFMatrix4f cameraSpaceMatrix 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1
  inputOutput    SFMatrix4f modelViewMatrix 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1
  inputOutput    SFVec3f    size 1 1 1
  initializeOnly SFFloat    offset 0
  initializeOnly SFNode     front USE Front
  initializeOnly SFNode     right USE Right
  initializeOnly SFNode     back USE Back
  initializeOnly SFNode     left USE Left
  initializeOnly SFNode     top USE Top
  initializeOnly SFNode     bottom USE Bottom
  inputOutput    SFNode     node NULL

  url "vrmlscript:
function eventsProcessed ()
{
	var size1_2 = size .divide (2);

	// Position and scale planes

	var scale = new SFVec3f ();
	var m     = modelViewMatrix .multRight (cameraSpaceMatrix); // m = transformationMatrix
	m .getTransform (null, null, scale);

	var x = offset / Math .abs (scale .x);
	var y = offset / Math .abs (scale .y);
	var z = offset / Math .abs (scale .z);

	front  .translation = new SFVec3f ( 0,  0,  z + size1_2 .z);
	right  .translation = new SFVec3f ( x + size1_2 .x,  0,  0);
	back   .translation = new SFVec3f ( 0,  0, -z - size1_2 .z);
	left   .translation = new SFVec3f (-x - size1_2 .x,  0,  0);
	top    .translation = new SFVec3f ( 0,  y + size1_2 .y,  0);
	bottom .translation = new SFVec3f ( 0, -y - size1_2 .y,  0);
	
	front  .scale = new SFVec3f (size .x, size .y, 1);
	right  .scale = new SFVec3f (1, size .y, size .z);
	back   .scale = new SFVec3f (size .x, size .y, 1);
	left   .scale = new SFVec3f (1, size .y, size .z);
	top    .scale = new SFVec3f (size .x, 1, size .z);
	bottom .scale = new SFVec3f (size .x, 1, size .z);

}
"
  directOutput TRUE
}

ROUTE Tool.color_changed TO BBoxMaterial.set_emissiveColor
ROUTE Tool.center_changed TO BoundingBox.set_translation
ROUTE Tool.node_changed TO BBoxScript.set_node
ROUTE Tool.cameraSpaceMatrix_changed TO BBoxScript.set_cameraSpaceMatrix
ROUTE Tool.modelViewMatrix_changed TO BBoxScript.set_modelViewMatrix
ROUTE Tool.size_changed TO BBoxScript.set_size
