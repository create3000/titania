#X3D V3.3 utf8 Titania V3.0.4

PROFILE Full

META "comment" "World of Titania"
META "created" "Mon, 26 Oct 2015 05:51:17 GMT"
META "creator" "Holger Seelig"
META "generator" "Titania V3.0.4, http://titania.create3000.de"
META "identifier" "file:///home/holger/Projekte/Titania/libtitania-x3d/share/titania/tools/Notification.x3dv"
META "modified" "Wed, 10 May 2017 08:23:52 GMT"
META "titania-add-world-info" "true"

EXTERNPROTO RoundedRectangle2D [
  inputOutput    SFFloat cornerRadius
  inputOutput    SFVec2f size
  initializeOnly SFBool  solid
]
"library/RoundedRectangle2D.x3dv"

PROTO Interface [
  # Custom fields
  inputOutput SFTime   cycleInterval 3
  inputOutput SFFloat  cornerRadius 4
  inputOutput SFFloat  linewidthScaleFactor 1
  inputOutput SFVec2f  padding 18 8
  # Required fields
  inputOutput SFString string ""
  inputOutput SFBool   isActive FALSE
]
{
  Group { }
}

WorldInfo {
  metadata DEF Titania MetadataSet {
    name "Titania"
    reference "http://titania.create3000.de"
    value [
      DEF NavigationInfo MetadataSet {
        name "NavigationInfo"
        reference "http://titania.create3000.de"
        value DEF type MetadataString {
          name "type"
          reference "http://titania.create3000.de"
          value "EXAMINE"
        }
      }
      DEF Viewpoint MetadataSet {
        name "Viewpoint"
        reference "http://titania.create3000.de"
        value [
          DEF position MetadataDouble {
            name "position"
            reference "http://titania.create3000.de"
            value [
              0,
              0,
              10
            ]
          }
          DEF orientation MetadataDouble {
            name "orientation"
            reference "http://titania.create3000.de"
            value [
              0,
              0,
              1,
              0
            ]
          }
          DEF centerOfRotation MetadataDouble {
            name "centerOfRotation"
            reference "http://titania.create3000.de"
            value [
              0,
              0,
              0
            ]
          }
        ]
      }
      DEF Selection MetadataSet {
        name "Selection"
        reference "http://titania.create3000.de"
        value [
          DEF selectGeometry MetadataBoolean {
            name "selectGeometry"
            reference "http://titania.create3000.de"
            value FALSE
          }
          DEF nodes MetadataSet {
            name "nodes"
            reference "http://titania.create3000.de"
            value DEF _1 PolygonMode {
              children [
                DEF _2 Transform {
                  translation -14 -10 0
                  children [
                    Transform {
                      translation 0 0 -1
                      children Shape {
                        appearance Appearance {
                          material DEF BackgroundMaterial Material {
                            diffuseColor 1 1 1
                          }
                          texture ImageTexture {
                            url "library/gradient.png"
                          }
                          textureTransform DEF _3 TextureTransform {
                            scale 1 1.8
                          }
                        }
                        geometry DEF BackgroundGeometry RoundedRectangle2D {
                          cornerRadius 4
                          size 36 20
                        }
                      }
                    }
                    Transform {
                      children Shape {
                        appearance Appearance {
                          fillProperties FillProperties {
                            filled FALSE
                            hatched FALSE
                          }
                          lineProperties DEF LineProperties LineProperties {
                            linewidthScaleFactor 4
                          }
                          material DEF BorderMaterial Material {
                            diffuseColor 0.461 0.461 0.461
                          }
                        }
                        geometry USE BackgroundGeometry
                      }
                    }
                  ]
                }
                Transform {
                  translation -15 -10 0
                  children Shape {
                    appearance Appearance {
                      material DEF TextMaterial Material {
                        diffuseColor 1 1 1
                      }
                    }
                    geometry DEF Text Text {
                      string ""
                      fontStyle ScreenFontStyle {
                        family "SANS"
                        pointSize 9
                        spacing 1.6
                        justify [
                          "END",
                          "BEGIN"
                        ]
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      }
      DEF LayerSet MetadataSet {
        name "LayerSet"
        reference "http://titania.create3000.de"
        value DEF activeLayer MetadataInteger {
          name "activeLayer"
          reference "http://titania.create3000.de"
          value -1
        }
      }
    ]
  }
  title "Notification"
}

LayerSet {
  order 1
  layers DEF Layer LayoutLayer {
    layout Layout {
      align [
        "RIGHT",
        "TOP"
      ]
      offsetUnits [
        "PIXEL",
        "PIXEL"
      ]
      offset [
        100,
        -40
      ]
      sizeUnits [
        "PIXEL",
        "PIXEL"
      ]
      size [
        200,
        26
      ]
      scaleMode [
        "PIXEL",
        "PIXEL"
      ]
    }
    children [
      DEF Notification Interface {
        cycleInterval 5
        linewidthScaleFactor 4
        padding 18 10
        isActive TRUE
      }
      USE _1
      DEF NotificationScript Script {
        inputOnly      SFString set_string
        inputOnly      SFVec2f  set_textBounds
        inputOnly      SFBool   set_start
        inputOnly      SFBool   set_end
        inputOutput    SFTime   cycleInterval 5
        inputOutput    SFFloat  linewidthScaleFactor 4
        inputOutput    SFVec2f  padding 18 10
        outputOnly     SFBool   isActive
        outputOnly     SFVec3f  translation_changed
        outputOnly     SFVec2f  scale_changed
        initializeOnly SFNode   background USE BackgroundGeometry
        initializeOnly SFNode   text USE Text
        initializeOnly SFNode   startTimer DEF StartTimer TimeSensor { }
        initializeOnly SFNode   endTimer DEF EndTimer TimeSensor {
          cycleInterval 2
        }

        url "javascript:

var cornerRadius = 4;

function set_string (value, time)
{
	var array = value .split (\"\\n\");

	for (var i = 0; i < array .length; ++ i)
		text .string [i] = array [i];

	text .string .length = array .length;

	if (!isActive || endTimer .isActive)
		startTimer .startTime = time;

	endTimer .stopTime  = time;
	endTimer .startTime = time + startTimer .cycleInterval + cycleInterval;
}

function set_textBounds (value, time)
{
	background .size = value .add (padding .multiply (2));
	
	// Align background line geometry on whole pixel
	
	if (is_odd (linewidthScaleFactor))
	{
		if (is_even (background .size .x))
			++ background .size .x;
		
		if (is_even (background .size .y))
			++ background .size .y;
	}
	
	translation_changed = new SFVec3f (Math .floor (value .x / -2) - padding .x + cornerRadius, 
	                                   -background .size .y / 2,
	                                   0);
	                                   
	scale_changed .x = 1;
	scale_changed .y = background .size .x / background .size .y;
}

function set_start (value, time)
{
	if (value)
		isActive = true;
}

function set_end (value, time)
{
	if (!value && !startTimer .isActive)
		isActive = false;
}

function is_even (value)
{
	return ! is_odd (value);
}

function is_odd (value)
{
	return value & 1;
}
"
        directOutput TRUE
      }
      DEF FadeIn ScalarInterpolator {
        key [
          0,
          1
        ]
        keyValue [
          1,
          0
        ]
      }
    ]
  }
}

ROUTE Notification.cornerRadius_changed TO BackgroundGeometry.set_cornerRadius
ROUTE Notification.linewidthScaleFactor_changed TO LineProperties.set_linewidthScaleFactor
ROUTE Notification.string_changed TO NotificationScript.set_string
ROUTE Notification.cycleInterval_changed TO NotificationScript.set_cycleInterval
ROUTE Notification.linewidthScaleFactor_changed TO NotificationScript.set_linewidthScaleFactor

# String

ROUTE Text.textBounds TO NotificationScript.set_textBounds
ROUTE StartTimer.isActive TO NotificationScript.set_start
ROUTE EndTimer.isActive TO NotificationScript.set_end

# FadeIn

ROUTE StartTimer.fraction_changed TO FadeIn.set_fraction
ROUTE FadeIn.value_changed TO BackgroundMaterial.set_transparency
ROUTE FadeIn.value_changed TO BorderMaterial.set_transparency
ROUTE NotificationScript.isActive TO Notification.set_isActive
ROUTE EndTimer.fraction_changed TO BorderMaterial.set_transparency
ROUTE EndTimer.fraction_changed TO BackgroundMaterial.set_transparency
ROUTE NotificationScript.translation_changed TO _2.set_translation
ROUTE Notification.padding_changed TO NotificationScript.set_padding
ROUTE NotificationScript.scale_changed TO _3.set_scale
ROUTE EndTimer.fraction_changed TO TextMaterial.set_transparency
ROUTE FadeIn.value_changed TO TextMaterial.set_transparency

EXPORT Notification
