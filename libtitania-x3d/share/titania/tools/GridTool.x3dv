#X3D V3.3 utf8 Titania V0.7.4

META "comment" "World of Titania"
META "created" "Tue, 05 Aug 2014 20:06:52 GMT"
META "creator" "Holger Seelig"
META "generator" "Titania V0.7.4, http://titania.create3000.de"
META "modified" "Tue, 23 Sep 2014 22:30:01 GMT"

EXTERNPROTO ToolShader [
  inputOutput SFFloat ambientIntensity
  inputOutput SFColor diffuseColor
  inputOutput SFColor specularColor
  inputOutput SFColor emissiveColor
  inputOutput SFFloat shininess
  inputOutput SFFloat transparency
]
"library/ToolShader.x3dv"

PROTO Grid [
  inputOutput    MFInt32 dimension [
    10,
    10,
    10
  ]
  inputOutput    MFFloat spacing [
    1,
    1,
    1
  ]
  inputOutput    MFInt32 majorLinesEvery [
    5,
    5,
    5
  ]
  inputOutput    SFColor color 0.5 0.5 0.5
  inputOutput    SFFloat transparency 0.61803
  inputOutput    SFColor lineColor 1 0.7 0.7
  inputOutput    SFFloat lineTransparency 0.8
  inputOutput    SFColor majorLineColor 1 0.7 0.7
  inputOutput    SFFloat majorLineTransparency 0.6
  initializeOnly SFBool  solid TRUE
]
{
  Transform {
    children [
      DEF Plane Transform {
        rotation -3.09087e-08 0.707105 0.707108 3.14159
        scale 10 10 1
        children Shape {
          appearance Appearance {
            material DEF Material2 Material {
              diffuseColor 0 0 0
              emissiveColor IS color
              transparency IS transparency
            }
          }
          geometry Rectangle2D {
            size 1 1
            solid IS solid
          }
        }
      }
      Transform {
        children Shape {
          appearance Appearance {
            material DEF MajorMaterial Material {
              emissiveColor IS majorLineColor
              transparency IS majorLineTransparency
            }
          }
          geometry DEF MajorGrid IndexedLineSet {
            coordIndex [
              0,
              1,
              -1,
              2,
              3,
              -1,
              4,
              5,
              -1,
              6,
              7,
              -1,
              8,
              9,
              -1,
              10,
              11,
              -1
            ]
            coord Coordinate {
              point [
                -5 0 -5.25,
                -5 0 5.25,
                0 0 -5.25,
                0 0 5.25,
                5 0 -5.25,
                5 0 5.25,
                -5.25 0 -5,
                5.25 0 -5,
                -5.25 0 0,
                5.25 0 0,
                -5.25 0 5,
                5.25 0 5
              ]
            }
          }
        }
      }
      Transform {
        children Shape {
          appearance Appearance {
            material DEF MinorMaterial Material {
              emissiveColor IS lineColor
              transparency IS lineTransparency
            }
          }
          geometry DEF Grid IndexedLineSet {
            coordIndex [
              0,
              1,
              -1,
              2,
              3,
              -1,
              4,
              5,
              -1,
              6,
              7,
              -1,
              8,
              9,
              -1,
              10,
              11,
              -1,
              12,
              13,
              -1,
              14,
              15,
              -1,
              16,
              17,
              -1,
              18,
              19,
              -1,
              20,
              21,
              -1,
              22,
              23,
              -1,
              24,
              25,
              -1,
              26,
              27,
              -1,
              28,
              29,
              -1,
              30,
              31,
              -1
            ]
            coord Coordinate {
              point [
                -4 0 -5,
                -4 0 5,
                -3 0 -5,
                -3 0 5,
                -2 0 -5,
                -2 0 5,
                -1 0 -5,
                -1 0 5,
                1 0 -5,
                1 0 5,
                2 0 -5,
                2 0 5,
                3 0 -5,
                3 0 5,
                4 0 -5,
                4 0 5,
                -5 0 -4,
                5 0 -4,
                -5 0 -3,
                5 0 -3,
                -5 0 -2,
                5 0 -2,
                -5 0 -1,
                5 0 -1,
                -5 0 1,
                5 0 1,
                -5 0 2,
                5 0 2,
                -5 0 3,
                5 0 3,
                -5 0 4,
                5 0 4
              ]
            }
          }
        }
      }
      Transform {
        children Shape {
          appearance Appearance {
            lineProperties DEF _1 LineProperties {
              linewidthScaleFactor 3
            }
            material USE MajorMaterial
          }
          geometry DEF MajorPoints PointSet {
            coord Coordinate {
              point [
                0 5 0,
                0 0 0,
                0 -5 0
              ]
            }
          }
        }
      }
      Transform {
        children Shape {
          appearance Appearance {
            lineProperties USE _1
            material USE MinorMaterial
          }
          geometry DEF Points PointSet {
            coord Coordinate {
              point [
                0 4 0,
                0 3 0,
                0 2 0,
                0 1 0,
                0 -1 0,
                0 -2 0,
                0 -3 0,
                0 -4 0
              ]
            }
          }
        }
      }
    ]
  }

  DEF GridScript Script {
    inputOutput    MFInt32 dimension IS dimension
    inputOutput    MFFloat spacing IS spacing
    inputOutput    MFInt32 majorLinesEvery IS majorLinesEvery
    initializeOnly SFNode  plane USE Plane
    initializeOnly SFNode  majorGrid USE MajorGrid
    initializeOnly SFNode  grid USE Grid
    initializeOnly SFNode  majorPoints USE MajorPoints
    initializeOnly SFNode  points USE Points

    url "vrmlscript:

function initialize ()
{
	eventsProcessed ();
}

function eventsProcessed ()
{
	// Plane

	plane .scale = new SFVec3f (dimension [0] * spacing [0], dimension [2] * spacing [2], 1);

	var scaleX1_2 = plane .scale .x / 2;
	var scaleZ1_2 = plane .scale .y / 2;

	// Axis

	majorGrid .set_coordIndex = generateGrid (true, majorGrid .coord .point);

	// Grid

	grid .set_coordIndex = generateGrid (false, grid .coord .point);

	// Points

	generatePoints (true,  majorPoints .coord .point);
	generatePoints (false, points .coord .point);
}

function generateGrid (major, point)
{
	var coordIndex  = new MFInt32 ();
	var scaleX1_2   = dimension [0] * spacing [0] / 2;
	var scaleZ1_2   = dimension [2] * spacing [2] / 2;
	var XSpacing1_4 = spacing [0] / 4 * major;
	var ZSpacing1_4 = spacing [2] / 4 * major;
	var p           = 0;

	for (var i = 0, size = dimension [0] + 1; i < size; ++ i)
	{
		if (major - isMajor (i, dimension [0], majorLinesEvery [0]))
			continue;

		point [p]     = new SFVec3f (-scaleX1_2 + spacing [0] * i, 0, -scaleZ1_2 - XSpacing1_4);
		point [p + 1] = new SFVec3f (-scaleX1_2 + spacing [0] * i, 0,  scaleZ1_2 + XSpacing1_4);
		coordIndex [coordIndex .length] = p;
		coordIndex [coordIndex .length] = p + 1;
		coordIndex [coordIndex .length] = -1;
			
		p += 2;
	}

	for (var i = 0, size = dimension [2] + 1; i < size; ++ i)
	{
		if (major - isMajor (i, dimension [2], majorLinesEvery [2]))
			continue;

		point [p]     = new SFVec3f (-scaleX1_2 - ZSpacing1_4, 0, -scaleZ1_2 + spacing [2] * i);
		point [p + 1] = new SFVec3f ( scaleX1_2 + ZSpacing1_4, 0, -scaleZ1_2 + spacing [2] * i);
		coordIndex [coordIndex .length] = p;
		coordIndex [coordIndex .length] = p + 1;
		coordIndex [coordIndex .length] = -1;
		
		p += 2;
	}

	point .length = p;

	return coordIndex;
}

function generatePoints (major, point)
{
	var offset = dimension [1] * spacing [1] / 2;
	var p      = 0;
	
	for (var i = 0, size = dimension [1] + 1; i < size; ++ i)
	{
		if (major - isMajor (i, dimension [1], majorLinesEvery [1]))
			continue;

		point [p] = new SFVec3f (0, offset - i * spacing [1], 0);
		++ p;
	}

	point .length = p;
}

function isMajor (i, dimension, majorLinesEvery)
{
	return round (i - dimension / 2) % majorLinesEvery == 0;
}

function round (value)
{
	return value > 0 ? Math .floor (value) : Math .ceil (value);
}
"
    directOutput TRUE
    mustEvaluate TRUE
  }
}

DEF GridTool Transform {
  children [
    DEF Grid_1 PickableGroup {
      pickable FALSE
      children DEF Grid_2 Transform {
        children DEF _2 Grid {
          transparency 0.8
        }
      }
    }
    DEF Edge_1 Transform {
      children [
        DEF _3 PlaneSensor {
          axisRotation 1 0 0 1.5708
          autoOffset FALSE
          offset 5 0 5
        }
        DEF Edge Transform {
          translation 5 0 5
          children ScreenGroup {
            children [
              DEF Box Transform {
                translation -9 0 0
                scale 12 3 3
                children DEF _4 Shape {
                  appearance DEF _5 Appearance {
                    shaders DEF _6 ToolShader {
                      diffuseColor 0.5 0.5 0.5
                    }
                  }
                  geometry Box { }
                }
              }
              DEF Box_1 Transform {
                translation -0 0 -9
                rotation 0 -1 0 1.5708
                scale 12 3 3
                children USE _4
              }
            ]
          }
        }
      ]
    }
    DEF Center Transform {
      children [
        DEF _7 PlaneSensor {
          axisRotation 1 0 0 1.5708
          autoOffset FALSE
          offset 0.16405 -9.48725e-07 0.261744
        }
        DEF _8 Transform {
          children ScreenGroup {
            children DEF Sphere Transform {
              scale 6 6 6
              children Shape {
                appearance USE _5
                geometry Sphere { }
              }
            }
          }
        }
      ]
    }
  ]
}

DEF ScaleScript Script {
  inputOutput MFInt32 dimension [
    10,
    10,
    10
  ]
  inputOutput MFFloat spacing [
    1,
    1,
    1
  ]
  inputOnly   SFVec3f set_translation
  outputOnly  SFVec3f translation_changed

  url "javascript:
function initialize ()
{
	eventsProcessed ();
}

function set_translation (value)
{
	dimension [0] = Math .round (value .x / spacing [0]);
	dimension [2] = Math .round (value .z / spacing [2]);
	
	dimension [0] = Math .max (dimension [0], 1);
	dimension [2] = Math .max (dimension [2], 1);

	dimension [0] *= 2;
	dimension [2] *= 2;
}

function eventsProcessed ()
{
	translation_changed = new SFVec3f (dimension [0] / 2 * spacing [0],
	                                   0,
	                                   dimension [2] / 2 * spacing [2]);
}
"
}

DEF MoveScript Script {
  inputOutput MFFloat    spacing [
    1,
    1,
    1
  ]
  inputOnly   SFVec3f    set_translation
  inputOutput SFRotation rotation 0 0 1 0
  outputOnly  SFVec3f    translation_changed
  outputOnly  SFRotation axisOfRotation_changed

  url "javascript:

function set_translation (value)
{
	var translation = rotation .inverse () .multVec (value); 

	if (spacing [0])
		translation .x = Math .round (translation .x / spacing [0]) * spacing [0];

	if (spacing [1])
		translation .y = Math .round (translation .y / spacing [1]) * spacing [1];

	if (spacing [2])
		translation .z = Math .round (translation .z / spacing [2]) * spacing [2];

	translation_changed = rotation .multVec (translation);
}

function set_rotation (value)
{
	axisOfRotation_changed = new SFRotation (1, 0, 0, Math .PI / 2) .multiply (value);
}"
}

DEF Tool Script {
  inputOutput SFVec3f    translation 0 0 0
  inputOutput SFRotation rotation 0 0 1 0
  inputOutput MFInt32    dimension [
    10,
    10,
    10
  ]
  inputOutput MFFloat    spacing [
    1,
    1,
    1
  ]
  inputOutput MFInt32    majorLinesEvery [
    5,
    5,
    5
  ]
  inputOutput SFColor    color 0.5 0.5 0.5
  inputOutput SFFloat    transparency 0.8
  inputOutput SFColor    lineColor 1 0.7 0.7
  inputOutput SFFloat    lineTransparency 0.8
  inputOutput SFColor    majorLineColor 1 0.7 0.7
  inputOutput SFFloat    majorLineTransparency 0.6

}

ROUTE ScaleScript.translation_changed TO Edge.set_translation
ROUTE _3.translation_changed TO ScaleScript.set_translation
ROUTE ScaleScript.translation_changed TO _3.set_offset
ROUTE _7.translation_changed TO MoveScript.set_translation
ROUTE Tool.translation_changed TO _7.set_offset
ROUTE Tool.translation_changed TO Grid_2.set_translation
ROUTE MoveScript.translation_changed TO Tool.set_translation
ROUTE Tool.transparency_changed TO _2.set_transparency
ROUTE Tool.color_changed TO _2.set_color
ROUTE Tool.color_changed TO _6.set_diffuseColor
ROUTE Tool.rotation_changed TO Grid_2.set_rotation
ROUTE Tool.rotation_changed TO Edge_1.set_rotation
ROUTE Tool.translation_changed TO Edge_1.set_translation
ROUTE Tool.rotation_changed TO _8.set_rotation
ROUTE Tool.translation_changed TO _8.set_translation
ROUTE MoveScript.axisOfRotation_changed TO _7.set_axisRotation
ROUTE Tool.rotation_changed TO MoveScript.set_rotation
ROUTE Tool.spacing_changed TO MoveScript.set_spacing
ROUTE Tool.spacing_changed TO ScaleScript.set_spacing
ROUTE Tool.dimension_changed TO ScaleScript.set_dimension
ROUTE ScaleScript.dimension_changed TO Tool.set_dimension
ROUTE Tool.dimension_changed TO _2.set_dimension
ROUTE Tool.spacing_changed TO _2.set_spacing
ROUTE Tool.majorLinesEvery_changed TO _2.set_majorLinesEvery
ROUTE Tool.lineColor_changed TO _2.set_lineColor
ROUTE Tool.lineTransparency_changed TO _2.set_lineTransparency
ROUTE Tool.majorLineColor_changed TO _2.set_majorLineColor
ROUTE Tool.majorLineTransparency_changed TO _2.set_majorLineTransparency

EXPORT Tool
