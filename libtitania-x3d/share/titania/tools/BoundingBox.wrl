#VRML V2.0 utf8 Titania V0.6.7

PROTO HandleShader [ ]
{
  # This is a phong shader where the light position is in the center of the object
  ComposedShader {
    language "GLSL"
    parts [
      ShaderPart {
        url "data:text/plain,
#version 120

varying vec3 N;
varying vec3 v;

void main(void)  
{     
	v = vec3 (gl_ModelViewMatrix * gl_Vertex);
	N = normalize (gl_NormalMatrix * gl_Normal);

	gl_Position = ftransform ();
}
"
      }
      ShaderPart {
        type "FRAGMENT"
        url "data:text/plain,
#version 120

varying vec3 N;
varying vec3 v;

int MAX_LIGHTS = 1;

void main (void)
{
	vec4 finalColor = vec4 (0, 0, 0, 0);

	for (int i = 0; i < MAX_LIGHTS; ++ i)
	{
		vec3 L = normalize (-v);
		vec3 E = normalize (-v);                                      /* we are in Eye Coordinates, so EyePos is (0, 0, 0) */
		vec3 R = normalize (-reflect (L, N));

		/* Calculate Ambient Term: */
		vec4 Iamb = gl_FrontLightProduct [i] .ambient;

		/* Calculate Diffuse Term: */
		vec4 Idiff = gl_FrontLightProduct [i] .diffuse * max (dot (N, L), 0);
		Idiff = clamp (Idiff, 0, 1);

		/* Calculate Specular Term: */
		vec4 Ispec = gl_FrontLightProduct[i] .specular * pow (max (dot (R, E), 0), 0.3 * gl_FrontMaterial .shininess);
		Ispec = clamp (Ispec, 0, 1);

		/* Write Total Color: */
		finalColor += Iamb + Idiff + Ispec;
	}
	
	gl_FragColor = gl_FrontLightModelProduct .sceneColor + finalColor;
}
"
      }
    ]
  }
}

PROTO BoundingBox [
  # required fields
  exposedField SFVec3f bboxSize 0 0 0
  exposedField SFVec3f bboxCenter 0 0 0
]
{
  Collision {
    collide FALSE
    children [
      Transform {
        translation IS bboxCenter
        children [
          DEF BoundingBox Shape {
            appearance Appearance {
              lineProperties LineProperties {
                linetype 3
              }
              material Material {
                emissiveColor 0.35 1 0.7
              }
            }
            geometry IndexedLineSet {
              coordIndex [ 0, 1, 2, 3, 0, -1, 4, 5, 6, 7, 4, -1, 0, 4, -1, 3, 7, -1, 1, 5, -1, 2, 6, -1 ]
              coord DEF BBox Coordinate {
                point [ -0.5 0.5 0.5, -0.5 -0.5 0.5, 0.5 -0.5 0.5, 0.5 0.5 0.5, -0.5 0.5 -0.5, -0.5 -0.5 -0.5, 0.5 -0.5 -0.5, 0.5 0.5 -0.5 ]
              }
            }
          }
          Shape {
            geometry IndexedLineSet {
              colorPerVertex FALSE
              coordIndex [ 0, 1, -1, 0, 2, -1, 0, 3, -1 ]
              color Color {
                color [ 1 0 0, 0 1 0, 0 0 1 ]
              }
              coord DEF Axes Coordinate {
                point [ 0 0 0, 0.5 0 0, 0 0.5 0, 0 0 0.5, 0 0 0 ]
              }
            }
          }
        ]
      }
      DEF AdjustmentHandles Transform {
        translation IS bboxCenter
        children [
          DEF XHandle Transform {
            children ScreenGroup {
              children Transform {
                translation 10.5 0 0
                rotation 0 0 -1 1.5708
                children Shape {
                  appearance DEF Red Appearance {
                    material Material {
                      diffuseColor 1 0 0
                    }
                    shaders DEF HandleShader HandleShader { }
                  }
                  geometry DEF Arrow Cone {
                    height 21
                    bottomRadius 7
                  }
                }
              }
            }
          }
          DEF YHandle Transform {
            children ScreenGroup {
              children Transform {
                translation 0 10.5 0
                children Shape {
                  appearance DEF Green Appearance {
                    material Material {
                      diffuseColor 0 1 0
                    }
                    shaders USE HandleShader
                  }
                  geometry USE Arrow
                }
              }
            }
          }
          DEF ZHandle Transform {
            children ScreenGroup {
              children Transform {
                translation 0 0 10.5
                rotation 1 0 0 1.5708
                children Shape {
                  appearance DEF Blue Appearance {
                    material Material {
                      diffuseColor 0 0 1
                    }
                    shaders USE HandleShader
                  }
                  geometry USE Arrow
                }
              }
            }
          }
        ]
      }
    ]
  }

  DEF BBoxScript Script {
    exposedField SFVec3f bboxSize IS bboxSize
    field        SFNode  bbox USE BBox
    field        SFNode  axes USE Axes

    url "vrmlscript:
function eventsProcessed ()
{
	var bboxSize1_2 = bboxSize .divide (2);

	// Axes
	
	axes .point = new MFVec3f (new SFVec3f (0, 0, 0),
	                           new SFVec3f (bboxSize1_2 .x, 0, 0),
	                           new SFVec3f (0, bboxSize1_2 .y, 0), 
	                           new SFVec3f (0, 0, bboxSize1_2 .z), 
	                           new SFVec3f (0, 0, 0));


	// BBox

	bbox .point = new MFVec3f (new SFVec3f (-bboxSize1_2 .x,  bboxSize1_2 .y,  bboxSize1_2 .z),
	                           new SFVec3f (-bboxSize1_2 .x, -bboxSize1_2 .y,  bboxSize1_2 .z), 
	                           new SFVec3f ( bboxSize1_2 .x, -bboxSize1_2 .y,  bboxSize1_2 .z), 
	                           new SFVec3f ( bboxSize1_2 .x,  bboxSize1_2 .y,  bboxSize1_2 .z), 
	                           new SFVec3f (-bboxSize1_2 .x,  bboxSize1_2 .y, -bboxSize1_2 .z), 
	                           new SFVec3f (-bboxSize1_2 .x, -bboxSize1_2 .y, -bboxSize1_2 .z), 
	                           new SFVec3f ( bboxSize1_2 .x, -bboxSize1_2 .y, -bboxSize1_2 .z), 
	                           new SFVec3f ( bboxSize1_2 .x,  bboxSize1_2 .y, -bboxSize1_2 .z));
}
"
    directOutput TRUE
  }

  DEF ArrowsScript Script {
    exposedField SFVec3f bboxSize IS bboxSize
    field        SFNode  x USE XHandle
    field        SFNode  y USE YHandle
    field        SFNode  z USE ZHandle

    url "vrmlscript:
function eventsProcessed ()
{
	// Position arrows
	
	var bboxSize1_2 = bboxSize .divide (2);

	x .translation = new SFVec3f (bboxSize1_2 .x, 0, 0);
	y .translation = new SFVec3f (0, bboxSize1_2 .y, 0);
	z .translation = new SFVec3f (0, 0, bboxSize1_2 .z);
}
"
    directOutput TRUE
  }
}

DEF Handle BoundingBox { }
