#X3D V3.3 utf8 Titania V4.3.3

PROFILE Full

UNIT angle degree 0.0174532925199433

META "comment" "World of Titania"
META "created" "Tue, 20 May 2014 19:16:28 GMT"
META "creator" "Holger Seelig"
META "generator" "Titania V4.3.3, http://titania.create3000.de"
META "identifier" "file:///home/holger/Projekte/Titania/libtitania-x3d/share/titania/tools/TransformTool.x3dv"
META "modified" "Thu, 18 Oct 2018 12:27:47 GMT"

EXTERNPROTO ToolShader [ ]
"library/ToolShader.x3dv"

EXTERNPROTO BooleanSwitch [
  inputOutput    SFBool  whichChoice
  initializeOnly SFVec3f bboxSize
  initializeOnly SFVec3f bboxCenter
  inputOnly      MFNode  addChildren
  inputOnly      MFNode  removeChildren
  inputOutput    MFNode  children
]
"library/BooleanSwitch.x3dv"

PROTO DoubleClick [
  inputOnly   SFTime set_time
  inputOutput SFTime doubleClickInterval 0.5
  outputOnly  SFTime doubleClickTime
]
{
  DEF DoubleClick Script {
    inputOnly   SFTime set_time IS set_time
    inputOutput SFTime doubleClickInterval IS doubleClickInterval
    outputOnly  SFTime doubleClickTime IS doubleClickTime

    url "peaseblossom:

var firstTime = 0;

function set_time (value, time)
{
	if (firstTime == 0)
		firstTime = time;
	
	else if (time - firstTime < doubleClickInterval)
	{
		firstTime = 0;
		doubleClickTime = time;
	}
	else
		firstTime = time;
}
"
  }
}

WorldInfo {
  metadata DEF Titania MetadataSet {
    name "Titania"
    reference "http://titania.create3000.de"
    value [
      DEF NavigationInfo MetadataSet {
        name "NavigationInfo"
        reference "http://titania.create3000.de"
        value DEF type MetadataString {
          name "type"
          reference "http://titania.create3000.de"
          value "EXAMINE"
        }
      }
      DEF Viewpoint MetadataSet {
        name "Viewpoint"
        reference "http://titania.create3000.de"
        value [
          DEF position MetadataDouble {
            name "position"
            reference "http://titania.create3000.de"
            value [
              0.3571363025814,
              1.42698711319305,
              1.77057355404304
            ]
          }
          DEF orientation MetadataDouble {
            name "orientation"
            reference "http://titania.create3000.de"
            value [
              0.956687020097155,
              -0.275000510168266,
              -0.0955231123070134,
              5.58662217770632
            ]
          }
          DEF centerOfRotation MetadataDouble {
            name "centerOfRotation"
            reference "http://titania.create3000.de"
            value [
              0,
              0,
              0
            ]
          }
        ]
      }
      DEF Selection MetadataSet {
        name "Selection"
        reference "http://titania.create3000.de"
        value [
          DEF nodes MetadataSet {
            name "nodes"
            reference "http://titania.create3000.de"
            value DEF BBoxScript Script {
              inputOutput    SFMatrix4f cameraSpaceMatrix 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1
              inputOutput    SFMatrix4f modelViewMatrix 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1
              inputOutput    SFVec3f    bboxSize 0 0 0
              outputOnly     SFDouble   handlesDepthOffset_changed
              outputOnly     SFDouble   rotationHandlesDepthOffset_changed
              outputOnly     SFInt32    scaleToolWhichChoice_changed
              initializeOnly SFVec3f    xAxis 1 0 0
              initializeOnly SFVec3f    yAxis 0 1 0
              initializeOnly SFVec3f    zAxis 0 0 1
              initializeOnly SFNode     bbox DEF BBox Coordinate {
                point [
                  -0 0 0,
                  -0 -0 0,
                  0 -0 0,
                  0 0 0,
                  -0 0 -0,
                  -0 -0 -0,
                  0 -0 -0,
                  0 0 -0
                ]
              }
              initializeOnly SFNode     axes DEF Axes Coordinate {
                point [
                  -0.5 0 0,
                  0.5 0 0,
                  0 0.5 0,
                  0 -0.5 0,
                  0 0 -0.5,
                  0 0 0.5
                ]
              }
              initializeOnly SFNode     front DEF Front Transform {
                scale 0 0 1
                children Transform {
                  children [
                    DEF FrontSensor PlaneSensor {
                      autoOffset FALSE
                    }
                    DEF Plane Shape {
                      appearance DEF Transparent Appearance {
                        material Material {
                          transparency 1
                        }
                      }
                      geometry Rectangle2D {
                        size 1 1
                      }
                    }
                  ]
                }
              }
              initializeOnly SFNode     right DEF Right Transform {
                scale 1 0 0
                children Transform {
                  rotation 0 1 0 90.0002104591497
                  children [
                    DEF RightSensor PlaneSensor {
                      autoOffset FALSE
                    }
                    USE Plane
                  ]
                }
              }
              initializeOnly SFNode     back DEF Back Transform {
                scale 0 0 1
                children Transform {
                  rotation 0 1 0 179.999847960504
                  children [
                    DEF BackSensor PlaneSensor {
                      autoOffset FALSE
                    }
                    USE Plane
                  ]
                }
              }
              initializeOnly SFNode     left DEF Left Transform {
                scale 1 0 0
                children Transform {
                  rotation 0 -1 0 90.0002104591497
                  children [
                    DEF LeftSensor PlaneSensor {
                      autoOffset FALSE
                    }
                    USE Plane
                  ]
                }
              }
              initializeOnly SFNode     top DEF Top Transform {
                scale 0 1 0
                children Transform {
                  rotation -1 0 0 90.0002104591497
                  children [
                    DEF TopSensor PlaneSensor {
                      autoOffset FALSE
                    }
                    USE Plane
                  ]
                }
              }
              initializeOnly SFNode     bottom DEF Bottom Transform {
                scale 0 1 0
                children Transform {
                  rotation 1 0 0 90.0002104591497
                  children [
                    DEF BottomSensor PlaneSensor {
                      autoOffset FALSE
                    }
                    USE Plane
                  ]
                }
              }
              initializeOnly SFNode     xHandle DEF XHandle Transform {
                translation 0.5 0 0
                children ScreenGroup {
                  children DEF XSwitch Switch {
                    whichChoice 0
                    children [
                      Transform {
                        translation 10.5 0 0
                        rotation 0 0 -1 90.0002104591497
                        children DEF _1 Shape {
                          appearance DEF Red Appearance {
                            material Material {
                              ambientIntensity 0
                              diffuseColor 1 0 0
                              shininess 0
                            }
                            shaders ToolShader { }
                          }
                          geometry DEF Arrow Cone {
                            height 21
                            bottomRadius 7
                          }
                        }
                      }
                      Transform {
                        translation 8 0 0
                        children DEF _2 Shape {
                          appearance USE Red
                          geometry DEF Sphere Sphere {
                            radius 8
                          }
                        }
                      }
                      DEF _3 BooleanSwitch {
                        whichChoice TRUE
                        children [
                          DEF _4 Transform {
                            translation 6 0 0
                            rotation 0 0 -1 90.0002104591497
                            children DEF _5 Shape {
                              appearance USE Red
                              geometry DEF _6 Cone {
                                height 12
                                bottomRadius 4
                              }
                            }
                          }
                          DEF _7 Transform {
                            translation 6 0 0
                            rotation 0.999364381620497 0 0.0356487411879094 1.70754729250319e-06
                            scaleOrientation -0.357406744336593 0.862856209461017 -0.357406744336593 258.947302582207
                            children DEF _8 Shape {
                              appearance USE Red
                              geometry DEF Box Box {
                                size 12 12 12
                              }
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              }
              initializeOnly SFNode     yHandle DEF YHandle Transform {
                translation 0 0.5 0
                children ScreenGroup {
                  children DEF YSwitch Switch {
                    whichChoice 0
                    children [
                      Transform {
                        translation 0 10.5 0
                        children DEF _9 Shape {
                          appearance DEF Green Appearance {
                            material Material {
                              ambientIntensity 0
                              diffuseColor 0 1 0
                              shininess 0
                            }
                            shaders ToolShader { }
                          }
                          geometry USE Arrow
                        }
                      }
                      Transform {
                        translation 0 8 0
                        children DEF _10 Shape {
                          appearance USE Green
                          geometry USE Sphere
                        }
                      }
                      DEF _11 BooleanSwitch {
                        children [
                          DEF _12 Transform {
                            translation 0 6 0
                            children DEF _13 Shape {
                              appearance USE Green
                              geometry USE _6
                            }
                          }
                          DEF _14 Transform {
                            translation 0 6 0
                            children DEF _15 Shape {
                              appearance USE Green
                              geometry USE Box
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              }
              initializeOnly SFNode     zHandle DEF ZHandle Transform {
                translation 0 0 0.5
                children ScreenGroup {
                  children DEF ZSwitch Switch {
                    whichChoice 0
                    children [
                      Transform {
                        translation 0 0 10.5
                        rotation 1 0 0 90.0002104591497
                        children DEF _16 Shape {
                          appearance DEF Blue Appearance {
                            material Material {
                              ambientIntensity 0
                              diffuseColor 0 0 1
                              shininess 0
                            }
                            shaders ToolShader { }
                          }
                          geometry USE Arrow
                        }
                      }
                      Transform {
                        translation 0 0 8
                        children DEF _17 Shape {
                          appearance USE Blue
                          geometry USE Sphere
                        }
                      }
                      DEF _18 BooleanSwitch {
                        children [
                          DEF _19 Transform {
                            translation 0 0 6
                            rotation 1 0 0 90.0002104591497
                            children DEF _20 Shape {
                              appearance USE Blue
                              geometry USE _6
                            }
                          }
                          DEF _21 Transform {
                            translation 0 0 6
                            children DEF _22 Shape {
                              appearance USE Blue
                              geometry USE Box
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              }
              initializeOnly SFNode     xBack DEF XBack Transform {
                translation -0.5 0 0
                children ScreenGroup {
                  children DEF _23 Switch {
                    whichChoice 0
                    children [
                      DEF _24 Transform {
                        translation -3.5 0 0
                        rotation 0 0 -1 90.0002104591497
                        children DEF _25 Shape {
                          appearance USE Red
                          geometry DEF _26 Cylinder {
                            height 8
                            radius 7
                          }
                        }
                      }
                      USE _24
                      DEF _27 BooleanSwitch {
                        whichChoice TRUE
                        children [
                          DEF _28 Transform {
                            translation -2.5 0 0
                            rotation 0 0 -1 90.0002104591497
                            children DEF _29 Shape {
                              appearance USE Red
                              geometry DEF _30 Cylinder {
                                height 5
                                radius 4
                              }
                            }
                          }
                          DEF _31 Transform {
                            translation -4 0 0
                            scale 0.666667 1 1
                            children USE _8
                          }
                        ]
                      }
                    ]
                  }
                }
              }
              initializeOnly SFNode     yBack DEF YBack Transform {
                translation 0 -0.5 0
                children ScreenGroup {
                  children DEF _32 Switch {
                    whichChoice 0
                    children [
                      DEF _33 Transform {
                        translation 0 -3.5 0
                        children DEF _34 Shape {
                          appearance USE Green
                          geometry USE _26
                        }
                      }
                      USE _33
                      DEF _35 BooleanSwitch {
                        whichChoice TRUE
                        children [
                          DEF _36 Transform {
                            translation 0 -2.5 0
                            children DEF _37 Shape {
                              appearance USE Green
                              geometry USE _30
                            }
                          }
                          DEF _38 Transform {
                            translation 0 -4 0
                            scale 1 0.666667 1
                            children USE _15
                          }
                        ]
                      }
                    ]
                  }
                }
              }
              initializeOnly SFNode     zBack DEF ZBack Transform {
                translation 0 0 -0.5
                children ScreenGroup {
                  children DEF _39 Switch {
                    whichChoice 0
                    children [
                      DEF _40 Transform {
                        translation 0 0 -3.5
                        rotation 1 0 0 90.0002104591497
                        children DEF _41 Shape {
                          appearance USE Blue
                          geometry USE _26
                        }
                      }
                      USE _40
                      DEF _42 BooleanSwitch {
                        whichChoice TRUE
                        children [
                          DEF _43 Transform {
                            translation 0 0 -2.5
                            rotation 1 0 0 90.0002104591497
                            children DEF _44 Shape {
                              appearance USE Blue
                              geometry USE _30
                            }
                          }
                          DEF _45 Transform {
                            translation 0 0 -4
                            scale 1 1 0.666667
                            children USE _22
                          }
                        ]
                      }
                    ]
                  }
                }
              }
              inputOutput    SFNode     transform NULL

              url "peaseblossom:

function initialize ()
{
	eventsProcessed ();
}

function eventsProcessed ()
{
	var bboxSize1_2 = bboxSize .divide (2);
	var offset      = bboxSize1_2 .divide (20);

	// BBox

	bbox .point = new MFVec3f (new SFVec3f (-bboxSize1_2 .x,  bboxSize1_2 .y,  bboxSize1_2 .z),
	                           new SFVec3f (-bboxSize1_2 .x, -bboxSize1_2 .y,  bboxSize1_2 .z), 
	                           new SFVec3f ( bboxSize1_2 .x, -bboxSize1_2 .y,  bboxSize1_2 .z), 
	                           new SFVec3f ( bboxSize1_2 .x,  bboxSize1_2 .y,  bboxSize1_2 .z), 
	                           new SFVec3f (-bboxSize1_2 .x,  bboxSize1_2 .y, -bboxSize1_2 .z), 
	                           new SFVec3f (-bboxSize1_2 .x, -bboxSize1_2 .y, -bboxSize1_2 .z), 
	                           new SFVec3f ( bboxSize1_2 .x, -bboxSize1_2 .y, -bboxSize1_2 .z), 
	                           new SFVec3f ( bboxSize1_2 .x,  bboxSize1_2 .y, -bboxSize1_2 .z));

	// Position and scale planes

	var x = offset .x;
	var y = offset .y;
	var z = offset .z;

	front  .translation = new SFVec3f ( 0,  0,  z + bboxSize1_2 .z);
	right  .translation = new SFVec3f ( x + bboxSize1_2 .x,  0,  0);
	back   .translation = new SFVec3f ( 0,  0, -z - bboxSize1_2 .z);
	left   .translation = new SFVec3f (-x - bboxSize1_2 .x,  0,  0);
	top    .translation = new SFVec3f ( 0,  y + bboxSize1_2 .y,  0);
	bottom .translation = new SFVec3f ( 0, -y - bboxSize1_2 .y,  0);
	
	front  .scale = new SFVec3f (bboxSize .x, bboxSize .y, 1);
	right  .scale = new SFVec3f (1, bboxSize .y, bboxSize .z);
	back   .scale = new SFVec3f (bboxSize .x, bboxSize .y, 1);
	left   .scale = new SFVec3f (1, bboxSize .y, bboxSize .z);
	top    .scale = new SFVec3f (bboxSize .x, 1, bboxSize .z);
	bottom .scale = new SFVec3f (bboxSize .x, 1, bboxSize .z);

	// Axes

	for (var i = 0; i < 3; ++ i)
		if (bboxSize1_2 [i] < 1e-5)
			bboxSize1_2 [i] = 0.5;

	axes .point = new MFVec3f (new SFVec3f (-bboxSize1_2 .x, 0, 0),
	                           new SFVec3f ( bboxSize1_2 .x, 0, 0),
	                           new SFVec3f (0,  bboxSize1_2 .y, 0), 
	                           new SFVec3f (0, -bboxSize1_2 .y, 0), 
	                           new SFVec3f (0, 0, -bboxSize1_2 .z),
	                           new SFVec3f (0, 0,  bboxSize1_2 .z));

	// Axes handles
	
	xHandle .translation = new SFVec3f (bboxSize1_2 .x, 0, 0);
	yHandle .translation = new SFVec3f (0, bboxSize1_2 .y, 0);
	zHandle .translation = new SFVec3f (0, 0, bboxSize1_2 .z);

	xBack .translation = new SFVec3f (-bboxSize1_2 .x, 0, 0);
	yBack .translation = new SFVec3f (0, -bboxSize1_2 .y, 0);
	zBack .translation = new SFVec3f (0, 0, -bboxSize1_2 .z);
	
	// Depth offsets

	handlesDepthOffset_changed         = 2000 * bboxSize .length () + 1.e9;
	rotationHandlesDepthOffset_changed = 1000 * bboxSize .length () + 1.e9;

	// White scale handles

	scaleToolWhichChoice_changed = (bboxSize .x > 0) + (bboxSize .y > 0) + (bboxSize .z > 0) > 1;
}"
              directOutput TRUE
            }
          }
          DEF selectGeometry MetadataBoolean {
            name "selectGeometry"
            reference "http://titania.create3000.de"
            value FALSE
          }
        ]
      }
      DEF Page MetadataSet {
        name "Page"
        reference "http://titania.create3000.de"
        value [
          DEF activeView MetadataInteger {
            name "activeView"
            reference "http://titania.create3000.de"
            value 1
          }
          DEF multiView MetadataInteger {
            name "multiView"
            reference "http://titania.create3000.de"
            value 0
          }
        ]
      }
    ]
  }
  title "TransformTool"
}

Collision {
  enabled FALSE
  children [
    DepthBuffer {
      enabled FALSE
      depthOffset 1000000000
      children DEF _46 Transform {
        children [
          DEF ToolModeSwitch Switch {
            whichChoice 0
            children [
              DEF XYZ Shape {
                geometry IndexedLineSet {
                  colorPerVertex FALSE
                  coordIndex [
                    0,
                    1,
                    -1,
                    2,
                    3,
                    -1,
                    4,
                    5,
                    -1
                  ]
                  color Color {
                    color [
                      1 0 0,
                      0 1 0,
                      0 0 1
                    ]
                  }
                  coord USE Axes
                }
              }
              ScreenGroup {
                children DEF XYZ_47 Shape {
                  geometry IndexedLineSet {
                    colorPerVertex FALSE
                    coordIndex [
                      0,
                      1,
                      -1,
                      2,
                      3,
                      -1,
                      4,
                      5,
                      -1
                    ]
                    color Color {
                      color [
                        1 0 0,
                        0 1 0,
                        0 0 1
                      ]
                    }
                    coord DEF Axes_48 Coordinate {
                      point [
                        -50 0 0,
                        50 0 0,
                        0 50 0,
                        0 -50 0,
                        0 0 -50,
                        0 0 50
                      ]
                    }
                  }
                }
              }
            ]
          }
          DEF BoundingBox Shape {
            appearance Appearance {
              lineProperties DEF LineProperties LineProperties {
                linewidthScaleFactor 1
              }
              material DEF _49 Material {
                emissiveColor 0.35 1 0.7
              }
            }
            geometry IndexedLineSet {
              coordIndex [
                0,
                1,
                2,
                3,
                0,
                -1,
                4,
                5,
                6,
                7,
                4,
                -1,
                0,
                4,
                -1,
                3,
                7,
                -1,
                1,
                5,
                -1,
                2,
                6,
                -1
              ]
              coord USE BBox
            }
          }
          DEF _50 BooleanSwitch {
            whichChoice TRUE
            bboxSize 0 0 0
            children [
              DEF _51 Group { }
              DEF _52 Group {
                children [
                  USE Front
                  USE Right
                  USE Back
                  USE Left
                  USE Top
                  USE Bottom
                ]
              }
            ]
          }
        ]
      }
    }
    DEF _53 DepthBuffer {
      enabled FALSE
      depthOffset 1000000000
      children DEF AdjustmentHandles Transform {
        children [
          DEF ToolModeSwitch_54 Switch {
            whichChoice 0
            children [
              Group {
                children [
                  DEF X Group {
                    children [
                      DEF Front_55 Group {
                        children [
                          USE XHandle
                          DEF ModeTouch TouchSensor { }
                          DEF XTranslationSensor PlaneSensor {
                            description "x-Axis"
                            autoOffset FALSE
                            maxPosition -1 0
                          }
                          DEF XScaleSensor PlaneSensor {
                            enabled FALSE
                            description "x-Axis"
                            autoOffset FALSE
                            maxPosition -1 0
                          }
                        ]
                      }
                      DEF Back_56 Group {
                        children [
                          USE XBack
                          USE ModeTouch
                          USE XTranslationSensor
                          DEF XScaleBackSensor PlaneSensor {
                            enabled FALSE
                            description "x-Axis"
                            autoOffset FALSE
                            maxPosition -1 0
                          }
                        ]
                      }
                    ]
                  }
                  DEF Y Group {
                    children [
                      DEF Front_57 Group {
                        children [
                          USE YHandle
                          USE ModeTouch
                          DEF YTranslationSensor PlaneSensor {
                            description "y-Axis"
                            autoOffset FALSE
                            maxPosition 0 -1
                          }
                          DEF YScaleSensor PlaneSensor {
                            enabled FALSE
                            description "y-Axis"
                            autoOffset FALSE
                            maxPosition 0 -1
                          }
                        ]
                      }
                      DEF Back_58 Group {
                        children [
                          USE YBack
                          USE ModeTouch
                          USE YTranslationSensor
                          DEF YScaleBackSensor PlaneSensor {
                            enabled FALSE
                            description "y-Axis"
                            autoOffset FALSE
                            maxPosition 0 -1
                          }
                        ]
                      }
                    ]
                  }
                  DEF Z Group {
                    children [
                      DEF Front_59 Group {
                        children [
                          USE ZHandle
                          USE ModeTouch
                          DEF ZTranslationSensor PlaneSensor {
                            description "z-Axis"
                            axisRotation 0 -1 0 90.0002104591497
                            autoOffset FALSE
                            maxPosition -1 0
                          }
                          DEF ZScaleSensor PlaneSensor {
                            enabled FALSE
                            description "z-Axis"
                            axisRotation 0 -1 0 90.0002104591497
                            autoOffset FALSE
                            maxPosition -1 0
                          }
                        ]
                      }
                      DEF Back_60 Group {
                        children [
                          USE ZBack
                          USE ModeTouch
                          USE ZTranslationSensor
                          DEF ZScaleBackSensor PlaneSensor {
                            enabled FALSE
                            description "z-Axis"
                            axisRotation 0 -1 0 90.0002104591497
                            autoOffset FALSE
                            maxPosition -1 0
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
              Group {
                children [
                  DEF XFront Group {
                    children [
                      ScreenGroup {
                        children DEF XSwitch_61 Switch {
                          whichChoice 0
                          children [
                            Transform {
                              translation 60.5 0 0
                              rotation 0 0 -1 90.0002104591497
                              children USE _1
                            }
                            Transform {
                              translation 58 0 0
                              children USE _2
                            }
                            DEF _62 BooleanSwitch {
                              whichChoice TRUE
                              children [
                                DEF _63 Transform {
                                  translation 56 0 0
                                  rotation 0 0 -1 90.0002104591497
                                  children USE _5
                                }
                                DEF _64 Transform {
                                  translation 56 0 0
                                  children USE _8
                                }
                              ]
                            }
                          ]
                        }
                      }
                      USE ModeTouch
                      USE XTranslationSensor
                      USE XScaleSensor
                    ]
                  }
                  DEF XBack_65 Group {
                    children [
                      ScreenGroup {
                        children DEF _66 Switch {
                          whichChoice 0
                          children [
                            DEF _67 Transform {
                              translation -53.5 0 0
                              rotation 0 0 -1 90.0002104591497
                              children USE _25
                            }
                            USE _67
                            DEF _68 BooleanSwitch {
                              whichChoice TRUE
                              children [
                                DEF _69 Transform {
                                  translation -52.5 0 0
                                  rotation 0 0 -1 90.0002104591497
                                  children USE _29
                                }
                                DEF _70 Transform {
                                  translation -54 0 0
                                  scale 0.666667 1 1
                                  children USE _8
                                }
                              ]
                            }
                          ]
                        }
                      }
                      USE ModeTouch
                      USE XTranslationSensor
                      USE XScaleBackSensor
                    ]
                  }
                  DEF YFront Group {
                    children [
                      ScreenGroup {
                        children DEF YSwitch_71 Switch {
                          whichChoice 0
                          children [
                            Transform {
                              translation 0 60.5 0
                              children USE _9
                            }
                            Transform {
                              translation 0 58 0
                              children USE _10
                            }
                            DEF _72 BooleanSwitch {
                              whichChoice TRUE
                              children [
                                DEF _73 Transform {
                                  translation 0 56 0
                                  children USE _13
                                }
                                DEF _74 Transform {
                                  translation 0 56 0
                                  children USE _15
                                }
                              ]
                            }
                          ]
                        }
                      }
                      USE ModeTouch
                      USE YTranslationSensor
                      USE YScaleSensor
                    ]
                  }
                  DEF YBack_75 Group {
                    children [
                      ScreenGroup {
                        children DEF _76 Switch {
                          whichChoice 0
                          children [
                            DEF _77 Transform {
                              translation 0 -53.5 0
                              children USE _34
                            }
                            USE _77
                            DEF _78 BooleanSwitch {
                              whichChoice TRUE
                              children [
                                DEF _79 Transform {
                                  translation 0 -52.5 0
                                  children USE _37
                                }
                                DEF _80 Transform {
                                  translation 0 -54 0
                                  scale 1 0.666667 1
                                  children USE _15
                                }
                              ]
                            }
                          ]
                        }
                      }
                      USE ModeTouch
                      USE YTranslationSensor
                      USE YScaleBackSensor
                    ]
                  }
                  DEF ZFront Group {
                    children [
                      ScreenGroup {
                        children DEF ZSwitch_81 Switch {
                          whichChoice 0
                          children [
                            Transform {
                              translation 0 0 60.5
                              rotation 1 0 0 90.0002104591497
                              children USE _16
                            }
                            Transform {
                              translation 0 0 58
                              children USE _17
                            }
                            DEF _82 BooleanSwitch {
                              whichChoice TRUE
                              children [
                                DEF _83 Transform {
                                  translation 0 0 56
                                  rotation 1 0 0 90.0002104591497
                                  children USE _20
                                }
                                DEF _84 Transform {
                                  translation 0 0 56
                                  children USE _22
                                }
                              ]
                            }
                          ]
                        }
                      }
                      USE ModeTouch
                      USE ZTranslationSensor
                      USE ZScaleSensor
                    ]
                  }
                  DEF ZBack_85 Group {
                    children [
                      ScreenGroup {
                        children DEF _86 Switch {
                          whichChoice 0
                          children [
                            DEF _87 Transform {
                              translation 0 0 -53.5
                              rotation 1 0 0 90.0002104591497
                              children USE _41
                            }
                            USE _87
                            DEF _88 BooleanSwitch {
                              whichChoice TRUE
                              children [
                                DEF _89 Transform {
                                  translation 0 0 -52.5
                                  rotation 1 0 0 90.0002104591497
                                  children USE _44
                                }
                                DEF _90 Transform {
                                  translation 0 0 -54
                                  scale 1 1 0.666667
                                  children USE _22
                                }
                              ]
                            }
                          ]
                        }
                      }
                      USE ModeTouch
                      USE ZTranslationSensor
                      USE ZScaleBackSensor
                    ]
                  }
                ]
              }
            ]
          }
          DEF ScaleTool Switch {
            whichChoice 0
            children [
              Group { }
              Group { }
              DEF _91 BooleanSwitch {
                children [
                  DEF _92 Group { }
                  DEF ScaleHandlesSwitch Switch {
                    whichChoice 0
                    children [
                      Group { }
                      Group {
                        children [
                          DEF ScaleHandle1 Transform {
                            children [
                              DEF ScaleSensor1 PlaneSensor {
                                axisRotation 0 0 1 180
                                autoOffset FALSE
                                maxPosition -1 0
                              }
                              DEF ScaleHandle ScreenGroup {
                                children Transform {
                                  children Shape {
                                    appearance DEF White Appearance {
                                      material Material {
                                        ambientIntensity 0
                                        diffuseColor 1 1 1
                                        shininess 0
                                      }
                                      shaders ToolShader { }
                                    }
                                    geometry USE Box
                                  }
                                }
                              }
                            ]
                          }
                          DEF ScaleHandle2 Transform {
                            children [
                              DEF ScaleSensor2 PlaneSensor {
                                axisRotation 0 0 1 180
                                autoOffset FALSE
                                maxPosition -1 0
                              }
                              USE ScaleHandle
                            ]
                          }
                          DEF ScaleHandle3 Transform {
                            children [
                              DEF ScaleSensor3 PlaneSensor {
                                axisRotation 0 0 1 180
                                autoOffset FALSE
                                maxPosition -1 0
                              }
                              USE ScaleHandle
                            ]
                          }
                          DEF ScaleHandle4 Transform {
                            children [
                              DEF ScaleSensor4 PlaneSensor {
                                axisRotation 0 0 1 180
                                autoOffset FALSE
                                maxPosition -1 0
                              }
                              USE ScaleHandle
                            ]
                          }
                          DEF ScaleHandle5 Transform {
                            children [
                              DEF ScaleSensor5 PlaneSensor {
                                axisRotation 0 0 1 180
                                autoOffset FALSE
                                maxPosition -1 0
                              }
                              USE ScaleHandle
                            ]
                          }
                          DEF ScaleHandle6 Transform {
                            children [
                              DEF ScaleSensor6 PlaneSensor {
                                axisRotation 0 0 1 180
                                autoOffset FALSE
                                maxPosition -1 0
                              }
                              USE ScaleHandle
                            ]
                          }
                          DEF ScaleHandle7 Transform {
                            children [
                              DEF ScaleSensor7 PlaneSensor {
                                axisRotation 0 0 1 180
                                autoOffset FALSE
                                maxPosition -1 0
                              }
                              USE ScaleHandle
                            ]
                          }
                          DEF ScaleHandle8 Transform {
                            children [
                              DEF ScaleSensor8 PlaneSensor {
                                axisRotation 0 0 1 180
                                autoOffset FALSE
                                maxPosition -1 0
                              }
                              USE ScaleHandle
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    }
    DEF _93 DepthBuffer {
      enabled FALSE
      depthOffset 1000000000
      children [
        DEF CenterPoint Transform {
          children [
            DEF _94 TouchSensor { }
            DEF _95 BooleanSwitch {
              children [
                DEF _96 Group { }
                DEF _97 ScreenGroup {
                  children DEF _98 BooleanSwitch {
                    bboxSize 0 0 0
                    children [
                      DEF _99 Shape {
                        appearance Appearance {
                          material Material {
                            ambientIntensity 0
                            diffuseColor 1 1 0
                            shininess 0
                          }
                          shaders ToolShader { }
                        }
                        geometry DEF _100 Sphere {
                          radius 5
                        }
                      }
                      DEF _101 Shape {
                        appearance USE Red
                        geometry USE _100
                      }
                    ]
                  }
                }
              ]
            }
            DEF RotationHandlesSwitch Switch {
              whichChoice 0
              children [
                Group { }
                DEF RotationHandles Transform {
                  children [
                    Group {
                      children [
                        DEF XRotationSensor CylinderSensor {
                          axisRotation 0 0 1 90.0002104591497
                          diskAngle 74.4845
                          autoOffset FALSE
                        }
                        DEF XRotationHandle Transform {
                          rotation 0 1 0 90.0002104591497
                          children [
                            DEF Cylinder Transform {
                              rotation 1 0 0 90.0002104591497
                              children Shape {
                                appearance USE Transparent
                                geometry Cylinder {
                                  height 0.02
                                }
                              }
                            }
                            Shape {
                              appearance Appearance {
                                material Material {
                                  emissiveColor 1 0 0
                                }
                              }
                              geometry DEF Circle Circle2D { }
                            }
                            DEF XCircleSwitch Switch {
                              whichChoice 0
                              children Shape {
                                appearance Appearance {
                                  material DEF XCircleMaterial Material {
                                    emissiveColor 1 0 0
                                    transparency 1
                                  }
                                }
                                geometry DEF Disk Disk2D { }
                              }
                            }
                          ]
                        }
                      ]
                    }
                    Group {
                      children [
                        DEF YRotationSensor CylinderSensor {
                          diskAngle 74.4845
                          autoOffset FALSE
                        }
                        DEF YRotationHandle Transform {
                          rotation 1 0 0 90.0002104591497
                          children [
                            USE Cylinder
                            Shape {
                              appearance Appearance {
                                material Material {
                                  emissiveColor 0 1 0
                                }
                              }
                              geometry USE Circle
                            }
                            DEF YCircleSwitch Switch {
                              whichChoice 0
                              children Shape {
                                appearance Appearance {
                                  material DEF YCircleMaterial Material {
                                    emissiveColor 0 1 0
                                    transparency 1
                                  }
                                }
                                geometry USE Disk
                              }
                            }
                          ]
                        }
                      ]
                    }
                    Group {
                      children [
                        DEF ZRotationSensor CylinderSensor {
                          axisRotation 1 0 0 90.0002104591497
                          diskAngle 74.4845
                          autoOffset FALSE
                        }
                        DEF ZRotationHandle Transform {
                          children [
                            USE Cylinder
                            Shape {
                              appearance Appearance {
                                material Material {
                                  emissiveColor 0 0 1
                                }
                              }
                              geometry USE Circle
                            }
                            DEF ZCircleSwitch Switch {
                              whichChoice 0
                              children Shape {
                                appearance Appearance {
                                  material DEF ZCircleMaterial Material {
                                    emissiveColor 0 0 1
                                    transparency 1
                                  }
                                }
                                geometry USE Disk
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
                Group { }
              ]
            }
          ]
        }
        DEF _102 BooleanSwitch {
          children [
            DEF _103 Group { }
            DEF CenterLine Shape {
              appearance Appearance {
                lineProperties LineProperties {
                  linetype 3
                  linewidthScaleFactor 1
                }
                material DEF Yellow Material {
                  diffuseColor 1 1 0
                }
              }
              geometry DEF CenterIndexedLineSet IndexedLineSet {
                coordIndex [
                  0,
                  1,
                  -1
                ]
                color Color {
                  color [
                    1 1 0,
                    1 1 0
                  ]
                }
                coord DEF CenterLineCoord Coordinate { }
              }
            }
          ]
        }
      ]
    }
    Switch {
      children DEF PPoint Transform {
        children Shape {
          appearance Appearance {
            lineProperties LineProperties {
              linewidthScaleFactor 5
            }
            material Material {
              emissiveColor 0 1 1
            }
          }
          geometry PointSet {
            coord Coordinate {
              point 0 0 0
            }
          }
        }
      }
    }
  ]
}

DEF _104 BooleanFilter { }

DEF _105 TimeTrigger { }

DEF ModeDoubleClick DoubleClick { }

DEF CenterDoubleClick DoubleClick { }

DEF ModeScript Script {
  inputOnly      SFBool   set_active
  inputOnly      SFTime   set_time
  inputOutput    MFString tools [
    "TRANSLATE",
    "ROTATE",
    "SCALE"
  ]
  inputOutput    SFBool   scaleXAxis FALSE
  inputOutput    SFBool   scaleYAxis FALSE
  inputOutput    SFBool   scaleZAxis FALSE
  inputOutput    SFBool   scaleXBackAxis TRUE
  inputOutput    SFBool   scaleYBackAxis TRUE
  inputOutput    SFBool   scaleZBackAxis TRUE
  inputOutput    SFBool   scaleUniform FALSE
  inputOutput    SFVec3f  bboxSize 0 0 0
  outputOnly     SFTime   touchTime
  outputOnly     SFBool   move
  outputOnly     SFBool   rotate
  outputOnly     SFBool   scale
  outputOnly     SFBool   scaleX
  outputOnly     SFBool   scaleY
  outputOnly     SFBool   scaleZ
  outputOnly     SFBool   scaleXBack
  outputOnly     SFBool   scaleYBack
  outputOnly     SFBool   scaleZBack
  outputOnly     SFInt32  whichChoice_changed
  initializeOnly SFInt32  tool 0

  url "peaseblossom:

function initialize ()
{
	set_tools ()
}

function set_tools ()
{
	set_tool (0);
}

function set_scaleXAxis ()
{
	set_tool (tool)
}

function set_scaleYAxis ()
{
	set_tool (tool)
}

function set_scaleZAxis ()
{
	set_tool (tool)
}

function set_scaleXBackAxis ()
{
	set_tool (tool)
}

function set_scaleYBackAxis ()
{
	set_tool (tool)
}

function set_scaleZBackAxis ()
{
	set_tool (tool)
}

function set_scaleUniform ()
{
	set_tool (tool)
}

function set_active (value, time)
{
	if (! value)
		touchTime = time;
}

function set_time (value, time)
{
	if (bboxSize .length ())
		set_tool ((tool + 1) % tools .length);
	else
		set_tool (0);
}

function set_tool (value)
{
	tool       = value;
	move       = false;
	rotate     = false;
	scale      = false;
	scaleX     = false;
	scaleY     = false;
	scaleZ     = false;
	scaleXBack = false;
	scaleYBack = false;
	scaleZBack = false;

	switch (tools [value])
	{
		case \"TRANSLATE\":
			move                = true;
			whichChoice_changed = 0;
			break;
		case \"ROTATE\":
			move                = true;
			rotate              = true;
			whichChoice_changed = 1;
			break;
		case \"SCALE\":
			scale               = scaleUniform;
			scaleX              = scaleXAxis;
			scaleY              = scaleYAxis;
			scaleZ              = scaleZAxis;
			scaleXBack          = scaleXBackAxis;
			scaleYBack          = scaleYBackAxis;
			scaleZBack          = scaleZBackAxis;
			whichChoice_changed = 2;
			break;
	}
}
"
}

USE BBoxScript

DEF MoveScript Script {
  inputOnly      SFBool  set_active
  inputOnly      SFVec3f set_frontTranslation
  inputOnly      SFVec3f set_rightTranslation
  inputOnly      SFVec3f set_backTranslation
  inputOnly      SFVec3f set_leftTranslation
  inputOnly      SFVec3f set_topTranslation
  inputOnly      SFVec3f set_bottomTranslation
  inputOnly      SFVec3f set_xTranslation
  inputOnly      SFVec3f set_yTranslation
  inputOnly      SFVec3f set_zTranslation
  inputOutput    SFBool  keepCenter FALSE
  inputOutput    SFBool  constrainMotion FALSE
  inputOutput    SFVec3f bboxSize 0 0 0
  inputOutput    SFNode  transform NULL
  outputOnly     SFInt32 activeTool_changed
  initializeOnly SFVec3f translation 0 0 0
  inputOutput    SFVec3f center 0 0 0
  initializeOnly SFVec3f size 0 0 0
  initializeOnly SFInt32 events 4

  url "peaseblossom:

function set_active (value)
{
	if (value)
	{
		activeTool_changed = 1;

		translation = transform .translation;
		center      = transform .center;
		size        = bboxSize;
	}
	else
		activeTool_changed = 0;

	events = 4;
}

function constrainValue (value, xScale, yScale)
{
	if (constrainMotion)
	{
		if (Math .abs (value .x * xScale) > Math .abs (value .y * yScale))
			value .y = 0;
		else
			value .x = 0;
	}
}

function set_frontTranslation (value)
{
	constrainValue (value, transform .scale .x, transform .scale .y);
	translate_with_bbox (new SFVec3f (value .x, value .y, 0));
}

function set_rightTranslation (value)
{
	constrainValue (value, transform .scale .z, transform .scale .y);
	translate_with_bbox (new SFVec3f (0, value .y, -value .x));
}

function set_backTranslation (value)
{
	constrainValue (value, transform .scale .x, transform .scale .y);
	translate_with_bbox (new SFVec3f (-value .x, value .y, 0));
}

function set_leftTranslation (value)
{
	constrainValue (value, transform .scale .z, transform .scale .y);
	translate_with_bbox (new SFVec3f (0, value .y, value .x));
}

function set_topTranslation (value)
{
	constrainValue (value, transform .scale .x, transform .scale .z);
	translate_with_bbox (new SFVec3f (value .x, 0, -value .y));
}

function set_bottomTranslation (value)
{
	constrainValue (value, transform .scale .x, transform .scale .y);
	translate_with_bbox (new SFVec3f (value .x, 0, value .y));
}

function set_xTranslation (value)
{
	translate (new SFVec3f (value .x, 0, 0));
}

function set_yTranslation (value)
{
	translate (new SFVec3f (0, value .y, 0));
}

function set_zTranslation (value)
{
	translate (new SFVec3f (0, 0, value .z));
}

function translate_with_bbox (value)
{
	translate (value .multVec (size));
}

function translate (value)
{
	if (events)
	{
		// Prevent accidentially move.
		-- events;
		return;
	}

	if (keepCenter)
	{
		transform .translation = translation .add (value);
		transform .center      = center .subtract (value);
	}
	else
	{
		var matrix = new SFMatrix4f ();
		matrix .setTransform (transform .translation,
		                      transform .rotation,
		                      transform .scale,
		                      transform .scaleOrientation,
		                      transform .center);

		var offset = matrix .multDirMatrix (value);
		transform .translation = translation .add (offset);
	}
}
"
  directOutput TRUE
}

DEF CenterScript Script {
  inputOnly      SFVec3f set_center
  inputOnly      SFTime  set_doubleClickTime
  inputOutput    SFVec3f bboxSize 0 0 0
  inputOutput    SFVec3f bboxCenter 0 0 0
  inputOutput    SFNode  transform NULL
  outputOnly     SFBool  keepCenter_changed
  initializeOnly SFNode  point USE CenterPoint
  initializeOnly SFNode  coord USE CenterLineCoord
  initializeOnly SFNode  self USE CenterScript

  url "peaseblossom:
function set_doubleClickTime ()
{
  keepCenter_changed = ! keepCenter_changed;
}

function set_transform ()
{
  Browser .addRoute (transform, 'center', self, 'set_center');
}

function eventsProcessed ()
{
	point .translation = transform .center;
	coord .point       = new MFVec3f (transform .center, bboxCenter);
}
"
  directOutput TRUE
}

DEF RotationHandleScript Script {
  inputOnly      SFVec3f    set_center
  inputOutput    SFMatrix4f cameraSpaceMatrix 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1
  inputOutput    SFMatrix4f modelViewMatrix 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1
  inputOutput    SFNode     transform NULL
  inputOutput    SFVec3f    bboxSize 0 0 0
  inputOutput    SFVec3f    bboxCenter 0 0 0
  initializeOnly SFNode     handles USE RotationHandles
  initializeOnly SFNode     xHandle USE XRotationHandle
  initializeOnly SFNode     yHandle USE YRotationHandle
  initializeOnly SFNode     zHandle USE ZRotationHandle
  initializeOnly SFNode     self USE RotationHandleScript

  url "vrmlscript:
function set_transform ()
{
  Browser .addRoute (transform, 'center', self, 'set_center');
}    

function eventsProcessed ()
{
	try
	{
		var translation = new SFVec3f ();
		var rotation    = new SFRotation ();
		var scale       = new SFVec3f ();
		var matrix      = new SFMatrix4f ();

		modelViewMatrix .getTransform (translation, rotation, scale);
		matrix .setTransform (translation, rotation);

		// Reset scale and scaleOrientation

		var inverseModelViewMatrix = modelViewMatrix .inverse () .multLeft (matrix);

		inverseModelViewMatrix .getTransform (handles .translation,
		                                      handles .rotation,
		                                      handles .scale,
		                                      handles .scaleOrientation);
		
		// Uniform scale circles

		var bboxOuterRadius  = bboxSize .multVec (scale) .length () / 2;
		var distanceToCenter = transform .center .subtract (bboxCenter) .multVec (scale) .length ();

		var radius = Math .max (bboxOuterRadius, distanceToCenter);
		var scale  = new SFVec3f (radius, radius, radius);

		xHandle .scale = scale;
		yHandle .scale = scale;
		zHandle .scale = scale;
	}
	catch (error)
	{
		// Catch error from matrix inverse.
	}
}
"
  directOutput TRUE
}

DEF DiskScript Script {
  inputOnly      SFBool  set_x
  inputOnly      SFBool  set_y
  inputOnly      SFBool  set_z
  outputOnly     SFFloat x_changed
  outputOnly     SFFloat y_changed
  outputOnly     SFFloat z_changed
  initializeOnly SFFloat transparency 0.9
  initializeOnly SFNode  xSensor USE XRotationSensor
  initializeOnly SFNode  ySensor USE YRotationSensor
  initializeOnly SFNode  zSensor USE ZRotationSensor

  url "peaseblossom:
function initialize ()
{
	x_changed = 1;
	y_changed = 1;
	z_changed = 1;
}

function set_x (value)
{
	x_changed = isActive (xSensor, ySensor, zSensor) ? transparency : 1;
}

function set_y (value)
{
	y_changed = isActive (ySensor, xSensor, zSensor) ? transparency : 1;
}

function set_z (value)
{
	z_changed = isActive (zSensor, xSensor, ySensor) ? transparency : 1;
}

function isActive (sensorA, sensorB, sensorC)
{
	return (sensorA .isOver || sensorA .isActive) && !(sensorB .isActive || sensorC .isActive);
}
"
}

DEF RotateScript Script {
  inputOnly      SFBool     set_active
  inputOnly      SFRotation set_rotation
  inputOnly      SFRotation set_xRotation
  inputOnly      SFRotation set_yRotation
  inputOnly      SFRotation set_zRotation
  inputOutput    SFDouble   snapAngle 0.19634954
  inputOutput    SFBool     controlKey FALSE
  inputOutput    SFBool     shiftKey FALSE
  outputOnly     SFInt32    activeTool_changed
  initializeOnly SFRotation rotation 0 0 1 0
  initializeOnly SFVec3f    scale 1 1 1
  initializeOnly SFRotation scaleOrientation 0 0 1 0
  initializeOnly SFInt32    events 0
  inputOutput    SFNode     transform NULL

  url "peaseblossom:
function set_active (value)
{
	if (value)
	{
		activeTool_changed = 2;

		// Normalize scale rotation matrix.

		var scaleRotation = new SFMatrix4f ();
		scaleRotation .setTransform (new SFVec3f (),
		                             transform. rotation,
		                             transform .scale,
		                             transform .scaleOrientation);

		scaleRotation .getTransform (null, rotation, scale, scaleOrientation);

		transform .rotation         = rotation;
		transform .scale            = scale;
		transform .scaleOrientation = scaleOrientation;

		events = 4;
	}
	else
		activeTool_changed = 0;
}

function set_xRotation (value)
{
	rotate (value);
}

function set_yRotation (value)
{
	rotate (value);
}

function set_zRotation (value)
{
	rotate (value);
}

function rotate (value)
{
	if (events)
	{
		// Prevent accidentially move.
		-- events;
		return;
	}

	if (controlKey && ! shiftKey)
	{
		var angle = Math .round (value .angle / snapAngle) * snapAngle;
		value = new SFRotation (value .getAxis (), angle);
	}

	transform .rotation = value .multiply (rotation);
}
"
  directOutput TRUE
}

DEF ScaleHandlesScript Script {
  inputOutput    SFVec3f bboxSize 0 0 0
  initializeOnly MFNode  handle [
    USE ScaleHandle1
    USE ScaleHandle2
    USE ScaleHandle3
    USE ScaleHandle4
    USE ScaleHandle5
    USE ScaleHandle6
    USE ScaleHandle7
    USE ScaleHandle8
  ]
  initializeOnly MFNode  sensor [
    USE ScaleSensor1
    USE ScaleSensor2
    USE ScaleSensor3
    USE ScaleSensor4
    USE ScaleSensor5
    USE ScaleSensor6
    USE ScaleSensor7
    USE ScaleSensor8
  ]

  url "peaseblossom:

function initialize ()
{
	eventsProcessed ();
}

function eventsProcessed ()
{
	var bboxSize1_2 = bboxSize .divide (2);

	handle [0] .translation = new SFVec3f ( bboxSize1_2 .x,  bboxSize1_2 .y,  bboxSize1_2 .z);
	handle [1] .translation = new SFVec3f (-bboxSize1_2 .x,  bboxSize1_2 .y,  bboxSize1_2 .z);
	handle [2] .translation = new SFVec3f (-bboxSize1_2 .x, -bboxSize1_2 .y,  bboxSize1_2 .z);
	handle [3] .translation = new SFVec3f ( bboxSize1_2 .x, -bboxSize1_2 .y,  bboxSize1_2 .z);

	handle [4] .translation = new SFVec3f ( bboxSize1_2 .x,  bboxSize1_2 .y, -bboxSize1_2 .z);
	handle [5] .translation = new SFVec3f (-bboxSize1_2 .x,  bboxSize1_2 .y, -bboxSize1_2 .z);
	handle [6] .translation = new SFVec3f (-bboxSize1_2 .x, -bboxSize1_2 .y, -bboxSize1_2 .z);
	handle [7] .translation = new SFVec3f ( bboxSize1_2 .x, -bboxSize1_2 .y, -bboxSize1_2 .z);

	var xAxis = new SFVec3f (1, 0, 0);

	sensor [0] .axisRotation = new SFRotation (xAxis, handle [0] .translation);
	sensor [1] .axisRotation = new SFRotation (xAxis, handle [1] .translation);
	sensor [2] .axisRotation = new SFRotation (xAxis, handle [2] .translation);
	sensor [3] .axisRotation = new SFRotation (xAxis, handle [3] .translation);

	sensor [4] .axisRotation = new SFRotation (xAxis, handle [4] .translation);
	sensor [5] .axisRotation = new SFRotation (xAxis, handle [5] .translation);
	sensor [6] .axisRotation = new SFRotation (xAxis, handle [6] .translation);
	sensor [7] .axisRotation = new SFRotation (xAxis, handle [7] .translation);
}
"
  directOutput TRUE
}

DEF ScaleScript Script {
  inputOnly      SFBool     set_active
  inputOnly      SFVec3f    set_xScale
  inputOnly      SFVec3f    set_yScale
  inputOnly      SFVec3f    set_zScale
  inputOnly      SFVec3f    set_xScaleBack
  inputOnly      SFVec3f    set_yScaleBack
  inputOnly      SFVec3f    set_zScaleBack
  inputOnly      SFVec3f    set_scale1
  inputOnly      SFVec3f    set_scale2
  inputOnly      SFVec3f    set_scale3
  inputOnly      SFVec3f    set_scale4
  inputOnly      SFVec3f    set_scale5
  inputOnly      SFVec3f    set_scale6
  inputOnly      SFVec3f    set_scale7
  inputOnly      SFVec3f    set_scale8
  inputOnly      SFVec3f    set_linetype
  inputOutput    SFBool     keepCenter FALSE
  inputOutput    SFBool     scaleFromEdge TRUE
  inputOutput    SFBool     scaleFromCenter TRUE
  inputOutput    MFString   connectedAxes [ ]
  inputOutput    SFBool     controlKey FALSE
  inputOutput    SFBool     altKey FALSE
  inputOutput    SFVec3f    bboxSize 0 0 0
  inputOutput    SFVec3f    bboxCenter 0 0 0
  inputOutput    SFNode     transform NULL
  outputOnly     SFInt32    activeTool_changed
  initializeOnly SFVec3f    translation 0 0 0
  initializeOnly SFVec3f    scaleFactor 0 0 0
  initializeOnly SFVec3f    center 0 0 0
  initializeOnly SFVec3f    distanceFromCenter 0 0 0
  initializeOnly SFMatrix4f matrix 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
  initializeOnly SFBool     active FALSE
  initializeOnly SFInt32    events 0
  # Sensors below are not used anymore
  initializeOnly MFNode     sensors [
    USE XScaleSensor
    USE YScaleSensor
    USE ZScaleSensor
    USE XScaleBackSensor
    USE YScaleBackSensor
    USE ZScaleBackSensor
    USE ScaleSensor1
    USE ScaleSensor2
    USE ScaleSensor3
    USE ScaleSensor4
    USE ScaleSensor5
    USE ScaleSensor6
    USE ScaleSensor7
    USE ScaleSensor8
  ]
  # Sensors above are not used anymore
  initializeOnly SFNode     lineProperties USE LineProperties
  initializeOnly SFNode     self USE ScaleScript

  url "ecmascript:

function set_transform ()
{
	Browser .addRoute (transform, 'scale', self, 'set_linetype');

	set_linetype (transform .scale);
}

function set_linetype (scale)
{
	var matrix = new SFMatrix4f ();
	matrix .setTransform (transform .translation,
	                      transform .rotation,
	                      transform .scale,
	                      transform .scaleOrientation,
	                      transform .center);

	var x = new SFVec3f (matrix [0], matrix [1], matrix [2]);
	var y = new SFVec3f (matrix [4], matrix [5], matrix [6]);
	var z = new SFVec3f (matrix [8], matrix [9], matrix [10]);

	if (x .cross (y) .dot (z) >= 0)
		lineProperties .linetype = 1; // SOLID
	else
		lineProperties .linetype = 2;
}

function set_scaleFromCenter ()
{
   var fun = [
      set_xScale,
		set_yScale,
		set_zScale,
		set_xScaleBack,
		set_yScaleBack,
		set_zScaleBack,
		set_scale1,
		set_scale2,
		set_scale3,
		set_scale4,
		set_scale5,
		set_scale6,
		set_scale7,
		set_scale8,
   ];

	for (var i in sensors)
	{
		if (sensors [i] .isActive)
		{
			fun [i] (sensors [i] .translation_changed);
		}
	}
}

function set_active (value)
{
	active = value;

	if (active)
	{
		for (var i in sensors)
		{
			if (sensors [i] .isActive)
			{
				activeTool_changed = 3 + parseInt (i);
			}
		}

		translation = transform .translation;
		scaleFactor = transform .scale;
		center      = transform .center;

		matrix .setTransform (transform .translation,
		                      transform .rotation,
		                      transform .scale,
		                      transform .scaleOrientation,
		                      transform .center);

		distanceFromCenter = bboxCenter .subtract (transform .center);
	}
	else
		activeTool_changed = 0;
}

// isActive

function set_xScale (value)
{
	if (bboxSize .x)
		set_axisScale (\"x\", value, 1);
}

function set_yScale (value)
{
	if (bboxSize .y)
		set_axisScale (\"y\", value, 1);
}

function set_zScale (value)
{
	if (bboxSize .z)
		set_axisScale (\"z\", value, 1);
}

function set_xScaleBack (value)
{		       
	if (bboxSize .x)
		set_axisScale (\"x\", value, -1);
}

function set_yScaleBack (value)
{
	if (bboxSize .y)
		set_axisScale (\"y\", value, -1);
}

function set_zScaleBack (value)
{
	if (bboxSize .z)
		set_axisScale (\"z\", value, -1);
}

function set_axisScale (axis, value, sgn)
{
	value = value [axis];

	if ((scaleFromEdge && controlKey) || (scaleFromEdge && ! scaleFromCenter))
	{
		var
			vector = new SFVec3f (1, 1, 1),
			offset = new SFVec3f ();
	
		vector [axis] = 1 + sgn * value / bboxSize [axis];
		offset [axis] = -sgn * bboxSize [axis] / 2;

		connect (axis, vector, offset);

		scale (vector, offset);
	}
	else if (scaleFromCenter)
	{
		var
			vector = new SFVec3f (1, 1, 1),
			offset = new SFVec3f ();
	
		vector [axis] = 1 + 2 * sgn * value / bboxSize [axis];

		connect (axis, vector, offset);

		scale (vector, offset);
	}
}

function connect (axis, vector, offset)
{
	for (var i = 0, length = connectedAxes .length; i < length; ++ i)
	{
		var
			lhs = connectedAxes [i] [0] .toLowerCase (),
			rhs = connectedAxes [i] [1] .toLowerCase ();
	
		if (rhs == axis)
		{
			vector [lhs] = vector [rhs];
			offset [lhs] = offset [rhs];
		}
	}
}

function set_scale1 (value)
{
	set_scale (value,
	           sgn (value .x),
	           new SFVec3f (-1, -1, -1));
}

function set_scale2 (value)
{
	set_scale (value,
	           sgn (-value .x),
	           new SFVec3f (1, -1, -1));
}

function set_scale3 (value)
{
	set_scale (value,
	           sgn (-value .x),
	           new SFVec3f (1, 1, -1));
}

function set_scale4 (value)
{
	set_scale (value,
	           sgn (value .x),
	           new SFVec3f (-1, 1, -1));
}

function set_scale5 (value)
{
	set_scale (value,
	           sgn (value .x),
	           new SFVec3f (-1, -1, 1));
}

function set_scale6 (value)
{
	set_scale (value,
	           sgn (-value .x),
	           new SFVec3f (1, -1, 1));
}

function set_scale7 (value)
{
	set_scale (value,
	           sgn (-value .x),
	           new SFVec3f (1, 1, 1));
}

function set_scale8 (value)
{
	set_scale (value,
	           sgn (value .x),
	           new SFVec3f (-1, 1, 1));
}

function set_scale (value, sgn, centerOffset)
{
	if ((scaleFromEdge && controlKey) || (scaleFromEdge && ! scaleFromCenter))
	{
		centerOffset = centerOffset .multVec (bboxSize .divide (2));

		var s = 1 + sgn * value .length () / bboxSize .length ();

		scale (new SFVec3f (s, s, s), centerOffset);
	}
	else if (scaleFromCenter)
	{
		var s = 1 + 2 * sgn * value .length () / bboxSize .length ();

		scale (new SFVec3f (s, s, s), new SFVec3f ());
	}
}

function scale (value, centerOffset)
{
	if (events)
	{
		// Prevent accidentially move.
		-- events;
		return;
	}

	var scale = new SFMatrix4f ();
	scale .setTransform (new SFVec3f (), new SFRotation (), value);

	var scaledMatrix = matrix .multLeft (scale);
	var t            = new SFVec3f ();
	var r            = new SFRotation ();
	var s            = new SFVec3f ();
	var so           = new SFRotation ();

	scaledMatrix .getTransform (t, r, s, so, center);

	if (s .x && s .y && s .z)
	{
		transform .translation      = t;
		transform .rotation         = r;
		transform .scale            = s;
		transform .scaleOrientation = so;

		if (keepCenter)
			translateKeepCenter (scaledMatrix, distanceFromCenter .add (centerOffset));
		else
			translate (scaledMatrix, distanceFromCenter .add (centerOffset));
	}
}

function translate (scaledMatrix, distanceFromCenter)
{
	var centerOffset = scaledMatrix .multDirMatrix (distanceFromCenter) .subtract (matrix .multDirMatrix (distanceFromCenter));

	transform .translation = translation .subtract (centerOffset);
}

function translateKeepCenter (scaledMatrix, distanceFromCenter)
{
	try
	{
		var centerOffset = scaledMatrix .inverse () .multDirMatrix (scaledMatrix .multDirMatrix (distanceFromCenter) .subtract (matrix .multDirMatrix (distanceFromCenter)));
	
		transform .translation = translation .subtract (centerOffset);
		transform .center      = center .add (centerOffset);
	}
	catch (error)
	{ }
}

function sgn (value)
{
	return value < 0 ? -1 : value > 0 ? 1 : 0;
}
"
  directOutput TRUE
}

DEF Tool Script {
  inputOutput MFString   tools [
    "TRANSLATE",
    "ROTATE",
    "SCALE"
  ]
  inputOutput SFInt32    toolMode 0
  inputOutput SFBool     scaleXAxis TRUE
  inputOutput SFBool     scaleYAxis TRUE
  inputOutput SFBool     scaleZAxis TRUE
  inputOutput SFBool     scaleXBackAxis TRUE
  inputOutput SFBool     scaleYBackAxis TRUE
  inputOutput SFBool     scaleZBackAxis TRUE
  inputOutput SFBool     scaleUniform TRUE
  inputOutput SFBool     scaleFromEdge TRUE
  inputOutput SFBool     scaleFromCenter TRUE
  inputOutput MFString   connectedAxes [ ]
  inputOutput SFColor    color 0.35 1 0.7
  inputOutput SFDouble   snapAngle 0.196349540849362
  inputOutput SFBool     displayBBox TRUE
  inputOutput SFBool     displayCenter TRUE
  inputOutput SFBool     controlKey FALSE
  inputOutput SFBool     shiftKey FALSE
  inputOutput SFBool     altKey FALSE
  inputOutput SFMatrix4f cameraSpaceMatrix 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1
  inputOutput SFMatrix4f modelViewMatrix 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1
  inputOutput SFVec3f    bboxSize 0 0 0
  inputOutput SFVec3f    bboxCenter 0 0 0
  inputOutput SFBool     isActive FALSE
  inputOutput SFTime     touchTime 0
  inputOutput SFBool     keepCenter_changed FALSE
  inputOutput SFInt32    activeTool_changed 0
  inputOutput SFNode     transform NULL

  url "ecmascript:
"
}


# Debug

ROUTE XRotationSensor.trackPoint_changed TO PPoint.set_translation
ROUTE YRotationSensor.trackPoint_changed TO PPoint.set_translation
ROUTE ZRotationSensor.trackPoint_changed TO PPoint.set_translation

# Mode translate, rotate or scale

ROUTE FrontSensor.isActive TO ModeScript.set_active
ROUTE RightSensor.isActive TO ModeScript.set_active
ROUTE BackSensor.isActive TO ModeScript.set_active
ROUTE LeftSensor.isActive TO ModeScript.set_active
ROUTE TopSensor.isActive TO ModeScript.set_active
ROUTE BottomSensor.isActive TO ModeScript.set_active
ROUTE ModeTouch.touchTime TO ModeDoubleClick.set_time
ROUTE ModeScript.touchTime TO ModeDoubleClick.set_time
ROUTE ModeDoubleClick.doubleClickTime TO ModeScript.set_time

# Mode Switch

ROUTE ModeScript.move TO XTranslationSensor.set_enabled
ROUTE ModeScript.move TO YTranslationSensor.set_enabled
ROUTE ModeScript.move TO ZTranslationSensor.set_enabled
ROUTE ModeScript.whichChoice_changed TO XSwitch_61.set_whichChoice
ROUTE ModeScript.whichChoice_changed TO YSwitch_71.set_whichChoice
ROUTE ModeScript.whichChoice_changed TO RotationHandlesSwitch.set_whichChoice

# Move Tool

ROUTE FrontSensor.isActive TO MoveScript.set_active
ROUTE RightSensor.isActive TO MoveScript.set_active
ROUTE BackSensor.isActive TO MoveScript.set_active
ROUTE LeftSensor.isActive TO MoveScript.set_active
ROUTE TopSensor.isActive TO MoveScript.set_active
ROUTE BottomSensor.isActive TO MoveScript.set_active
ROUTE XTranslationSensor.isActive TO MoveScript.set_active
ROUTE YTranslationSensor.isActive TO MoveScript.set_active
ROUTE ZTranslationSensor.isActive TO MoveScript.set_active

#

ROUTE XTranslationSensor.translation_changed TO MoveScript.set_xTranslation
ROUTE YTranslationSensor.translation_changed TO MoveScript.set_yTranslation
ROUTE ZTranslationSensor.translation_changed TO MoveScript.set_zTranslation
ROUTE FrontSensor.translation_changed TO MoveScript.set_frontTranslation
ROUTE RightSensor.translation_changed TO MoveScript.set_rightTranslation
ROUTE BackSensor.translation_changed TO MoveScript.set_backTranslation
ROUTE LeftSensor.translation_changed TO MoveScript.set_leftTranslation
ROUTE TopSensor.translation_changed TO MoveScript.set_topTranslation
ROUTE BottomSensor.translation_changed TO MoveScript.set_bottomTranslation

# Rotate Tool

ROUTE XRotationSensor.isOver TO DiskScript.set_x
ROUTE YRotationSensor.isOver TO DiskScript.set_y
ROUTE ZRotationSensor.isOver TO DiskScript.set_z
ROUTE XRotationSensor.isActive TO DiskScript.set_x
ROUTE YRotationSensor.isActive TO DiskScript.set_y
ROUTE ZRotationSensor.isActive TO DiskScript.set_z
ROUTE DiskScript.x_changed TO XCircleMaterial.set_transparency
ROUTE DiskScript.y_changed TO YCircleMaterial.set_transparency
ROUTE DiskScript.z_changed TO ZCircleMaterial.set_transparency

#

ROUTE XRotationSensor.isActive TO RotateScript.set_active
ROUTE YRotationSensor.isActive TO RotateScript.set_active
ROUTE ZRotationSensor.isActive TO RotateScript.set_active

#

ROUTE XRotationSensor.rotation_changed TO RotateScript.set_xRotation
ROUTE YRotationSensor.rotation_changed TO RotateScript.set_yRotation
ROUTE ZRotationSensor.rotation_changed TO RotateScript.set_zRotation

# Scale Tool

ROUTE ModeScript.whichChoice_changed TO ScaleTool.set_whichChoice

#

ROUTE XScaleSensor.isActive TO ScaleScript.set_active
ROUTE YScaleSensor.isActive TO ScaleScript.set_active
ROUTE ZScaleSensor.isActive TO ScaleScript.set_active
ROUTE ScaleSensor1.isActive TO ScaleScript.set_active
ROUTE ScaleSensor2.isActive TO ScaleScript.set_active
ROUTE ScaleSensor3.isActive TO ScaleScript.set_active
ROUTE ScaleSensor4.isActive TO ScaleScript.set_active
ROUTE ScaleSensor5.isActive TO ScaleScript.set_active
ROUTE ScaleSensor6.isActive TO ScaleScript.set_active
ROUTE ScaleSensor7.isActive TO ScaleScript.set_active
ROUTE ScaleSensor8.isActive TO ScaleScript.set_active

#

ROUTE XScaleSensor.translation_changed TO ScaleScript.set_xScale
ROUTE YScaleSensor.translation_changed TO ScaleScript.set_yScale
ROUTE ZScaleSensor.translation_changed TO ScaleScript.set_zScale
ROUTE ScaleSensor1.translation_changed TO ScaleScript.set_scale1
ROUTE ScaleSensor2.translation_changed TO ScaleScript.set_scale2
ROUTE ScaleSensor3.translation_changed TO ScaleScript.set_scale3
ROUTE ScaleSensor4.translation_changed TO ScaleScript.set_scale4
ROUTE ScaleSensor5.translation_changed TO ScaleScript.set_scale5
ROUTE ScaleSensor6.translation_changed TO ScaleScript.set_scale6
ROUTE ScaleSensor7.translation_changed TO ScaleScript.set_scale7
ROUTE ScaleSensor8.translation_changed TO ScaleScript.set_scale8
ROUTE _94.touchTime TO CenterDoubleClick.set_time
ROUTE CenterDoubleClick.doubleClickTime TO CenterScript.set_doubleClickTime
ROUTE CenterScript.keepCenter_changed TO ScaleScript.set_keepCenter
ROUTE CenterScript.keepCenter_changed TO _98.set_whichChoice
ROUTE CenterScript.keepCenter_changed TO MoveScript.set_keepCenter
ROUTE _105.triggerTime TO ModeDoubleClick.set_time
ROUTE XRotationSensor.isActive TO _104.set_boolean
ROUTE YRotationSensor.isActive TO _104.set_boolean
ROUTE ZRotationSensor.isActive TO _104.set_boolean
ROUTE _104.inputFalse TO _105.set_boolean
ROUTE ScaleSensor1.isActive TO _104.set_boolean
ROUTE ScaleSensor2.isActive TO _104.set_boolean
ROUTE ScaleSensor3.isActive TO _104.set_boolean
ROUTE ScaleSensor4.isActive TO _104.set_boolean
ROUTE ScaleSensor5.isActive TO _104.set_boolean
ROUTE ScaleSensor6.isActive TO _104.set_boolean
ROUTE ScaleSensor7.isActive TO _104.set_boolean
ROUTE ScaleSensor8.isActive TO _104.set_boolean
ROUTE XScaleBackSensor.translation_changed TO ScaleScript.set_xScaleBack
ROUTE YScaleBackSensor.translation_changed TO ScaleScript.set_yScaleBack
ROUTE ZScaleBackSensor.translation_changed TO ScaleScript.set_zScaleBack
ROUTE ZScaleBackSensor.isActive TO ScaleScript.set_active
ROUTE YScaleBackSensor.isActive TO ScaleScript.set_active
ROUTE XScaleBackSensor.isActive TO ScaleScript.set_active
ROUTE XSwitch_61.whichChoice_changed TO _66.set_whichChoice
ROUTE YSwitch_71.whichChoice_changed TO _76.set_whichChoice
ROUTE BBoxScript.rotationHandlesDepthOffset_changed TO _93.set_depthOffset
ROUTE BBoxScript.handlesDepthOffset_changed TO _53.set_depthOffset
ROUTE BBoxScript.scaleToolWhichChoice_changed TO ScaleHandlesSwitch.set_whichChoice
ROUTE Tool.bboxCenter_changed TO _46.set_translation
ROUTE FrontSensor.isActive TO Tool.set_isActive
ROUTE RightSensor.isActive TO Tool.set_isActive
ROUTE BackSensor.isActive TO Tool.set_isActive
ROUTE LeftSensor.isActive TO Tool.set_isActive
ROUTE TopSensor.isActive TO Tool.set_isActive
ROUTE BottomSensor.isActive TO Tool.set_isActive
ROUTE Tool.bboxCenter_changed TO AdjustmentHandles.set_translation
ROUTE ModeTouch.touchTime TO Tool.set_touchTime
ROUTE XTranslationSensor.isActive TO Tool.set_isActive
ROUTE XScaleSensor.isActive TO Tool.set_isActive
ROUTE XScaleBackSensor.isActive TO Tool.set_isActive
ROUTE YTranslationSensor.isActive TO Tool.set_isActive
ROUTE YScaleSensor.isActive TO Tool.set_isActive
ROUTE YScaleBackSensor.isActive TO Tool.set_isActive
ROUTE ZTranslationSensor.isActive TO Tool.set_isActive
ROUTE ZScaleSensor.isActive TO Tool.set_isActive
ROUTE ZScaleBackSensor.isActive TO Tool.set_isActive
ROUTE ScaleSensor1.isActive TO Tool.set_isActive
ROUTE ScaleSensor2.isActive TO Tool.set_isActive
ROUTE ScaleSensor3.isActive TO Tool.set_isActive
ROUTE ScaleSensor4.isActive TO Tool.set_isActive
ROUTE ScaleSensor5.isActive TO Tool.set_isActive
ROUTE ScaleSensor6.isActive TO Tool.set_isActive
ROUTE ScaleSensor7.isActive TO Tool.set_isActive
ROUTE ScaleSensor8.isActive TO Tool.set_isActive
ROUTE _94.touchTime TO Tool.set_touchTime
ROUTE XRotationSensor.isActive TO Tool.set_isActive
ROUTE YRotationSensor.isActive TO Tool.set_isActive
ROUTE ZRotationSensor.isActive TO Tool.set_isActive
ROUTE Tool.bboxSize_changed TO ModeScript.set_bboxSize
ROUTE Tool.cameraSpaceMatrix_changed TO BBoxScript.set_cameraSpaceMatrix
ROUTE Tool.modelViewMatrix_changed TO BBoxScript.set_modelViewMatrix
ROUTE Tool.bboxSize_changed TO BBoxScript.set_bboxSize
ROUTE Tool.transform_changed TO BBoxScript.set_transform
ROUTE Tool.controlKey_changed TO MoveScript.set_constrainMotion
ROUTE Tool.bboxSize_changed TO MoveScript.set_bboxSize
ROUTE Tool.transform_changed TO MoveScript.set_transform
ROUTE MoveScript.activeTool_changed TO Tool.set_activeTool_changed
ROUTE Tool.bboxSize_changed TO CenterScript.set_bboxSize
ROUTE Tool.bboxCenter_changed TO CenterScript.set_bboxCenter
ROUTE Tool.transform_changed TO CenterScript.set_transform
ROUTE CenterScript.keepCenter_changed TO Tool.set_keepCenter_changed
ROUTE Tool.cameraSpaceMatrix_changed TO RotationHandleScript.set_cameraSpaceMatrix
ROUTE Tool.modelViewMatrix_changed TO RotationHandleScript.set_modelViewMatrix
ROUTE Tool.transform_changed TO RotationHandleScript.set_transform
ROUTE Tool.bboxSize_changed TO RotationHandleScript.set_bboxSize
ROUTE Tool.bboxCenter_changed TO RotationHandleScript.set_bboxCenter
ROUTE Tool.snapAngle_changed TO RotateScript.set_snapAngle
ROUTE Tool.controlKey_changed TO RotateScript.set_controlKey
ROUTE Tool.shiftKey_changed TO RotateScript.set_shiftKey
ROUTE RotateScript.activeTool_changed TO Tool.set_activeTool_changed
ROUTE Tool.transform_changed TO RotateScript.set_transform
ROUTE Tool.bboxSize_changed TO ScaleHandlesScript.set_bboxSize
ROUTE Tool.altKey_changed TO ScaleScript.set_altKey
ROUTE Tool.bboxSize_changed TO ScaleScript.set_bboxSize
ROUTE Tool.bboxCenter_changed TO ScaleScript.set_bboxCenter
ROUTE Tool.transform_changed TO ScaleScript.set_transform
ROUTE ScaleScript.activeTool_changed TO Tool.set_activeTool_changed
ROUTE ModeScript.whichChoice_changed TO ZSwitch_81.set_whichChoice
ROUTE ZSwitch_81.whichChoice_changed TO _86.set_whichChoice
ROUTE ZSwitch.whichChoice_changed TO _39.set_whichChoice
ROUTE YSwitch.whichChoice_changed TO _32.set_whichChoice
ROUTE XSwitch.whichChoice_changed TO _23.set_whichChoice
ROUTE XSwitch_61.whichChoice_changed TO XSwitch.set_whichChoice
ROUTE YSwitch_71.whichChoice_changed TO YSwitch.set_whichChoice
ROUTE ZSwitch_81.whichChoice_changed TO ZSwitch.set_whichChoice
ROUTE Tool.toolMode_changed TO ToolModeSwitch.set_whichChoice
ROUTE Tool.toolMode_changed TO ToolModeSwitch_54.set_whichChoice
ROUTE Tool.tools_changed TO ModeScript.set_tools
ROUTE Tool.displayBBox_changed TO _50.set_whichChoice
ROUTE Tool.displayCenter_changed TO _102.set_whichChoice
ROUTE Tool.displayCenter_changed TO _95.set_whichChoice
ROUTE Tool.color_changed TO _49.set_emissiveColor
ROUTE Tool.controlKey_changed TO ScaleScript.set_controlKey
ROUTE Tool.scaleFromEdge_changed TO ScaleScript.set_scaleFromEdge
ROUTE Tool.scaleXAxis_changed TO _62.set_whichChoice
ROUTE Tool.scaleYAxis_changed TO _72.set_whichChoice
ROUTE Tool.scaleZAxis_changed TO _82.set_whichChoice
ROUTE Tool.scaleXAxis_changed TO ModeScript.set_scaleXAxis
ROUTE Tool.scaleYAxis_changed TO ModeScript.set_scaleYAxis
ROUTE Tool.scaleZAxis_changed TO ModeScript.set_scaleZAxis
ROUTE Tool.scaleZAxis_changed TO _18.set_whichChoice
ROUTE Tool.scaleYAxis_changed TO _11.set_whichChoice
ROUTE Tool.scaleXAxis_changed TO _3.set_whichChoice
ROUTE ModeScript.scaleZ TO ZScaleSensor.set_enabled
ROUTE ModeScript.scaleY TO YScaleSensor.set_enabled
ROUTE ModeScript.scaleX TO XScaleSensor.set_enabled
ROUTE ModeScript.scale TO _91.set_whichChoice
ROUTE Tool.scaleUniform_changed TO ModeScript.set_scaleUniform
ROUTE Tool.connectedAxes_changed TO ScaleScript.set_connectedAxes
ROUTE Tool.scaleXBackAxis_changed TO ModeScript.set_scaleXBackAxis
ROUTE Tool.scaleYBackAxis_changed TO ModeScript.set_scaleYBackAxis
ROUTE Tool.scaleZBackAxis_changed TO ModeScript.set_scaleZBackAxis
ROUTE ModeScript.scaleXBack TO XScaleBackSensor.set_enabled
ROUTE ModeScript.scaleYBack TO YScaleBackSensor.set_enabled
ROUTE ModeScript.scaleZBack TO ZScaleBackSensor.set_enabled
ROUTE Tool.scaleXBackAxis_changed TO _68.set_whichChoice
ROUTE Tool.scaleXBackAxis_changed TO _27.set_whichChoice
ROUTE Tool.scaleYBackAxis_changed TO _78.set_whichChoice
ROUTE Tool.scaleYBackAxis_changed TO _35.set_whichChoice
ROUTE Tool.scaleZBackAxis_changed TO _88.set_whichChoice
ROUTE Tool.scaleZBackAxis_changed TO _42.set_whichChoice
ROUTE Tool.scaleFromCenter_changed TO ScaleScript.set_scaleFromCenter

EXPORT Tool
