#X3D V3.3 utf8 Titania V3.0.4

PROFILE Full

COMPONENT Titania : 1

META "comment" "World of Titania"
META "created" "Tue, 05 Aug 2014 20:06:52 GMT"
META "creator" "Holger Seelig"
META "generator" "Titania V3.0.4, http://titania.create3000.de"
META "identifier" "file:///home/holger/Projekte/Titania/libtitania-x3d/share/titania/tools/library/Grid.x3dv"
META "modified" "Tue, 20 Jun 2017 04:56:52 GMT"

PROTO Grid [
  inputOutput    SFVec3f    translation 0 0 0
  inputOutput    SFRotation rotation 0 0 1 0
  inputOutput    SFVec3f    scale 1 1 1
  inputOutput    MFInt32    dimension [
    10,
    10,
    10
  ]
  inputOutput    MFInt32    majorLineEvery [
    5,
    5,
    5
  ]
  inputOutput    MFInt32    majorLineOffset [
    0,
    0,
    0
  ]
  inputOutput    SFColor    color 0.5 0.5 0.5
  inputOutput    SFFloat    transparency 0.61803
  inputOutput    SFColor    lineColor 1 0.7 0.7
  inputOutput    SFFloat    lineTransparency 0.8
  inputOutput    SFColor    majorLineColor 1 0.7 0.7
  inputOutput    SFFloat    majorLineTransparency 0.6
  initializeOnly SFBool     solid TRUE
]
{
  Transform {
    rotation IS rotation
    children Transform {
      translation IS translation
      scale IS scale
      children [
        DEF Plane Transform {
          rotation -3.09087122910219e-08 0.70710528118436 0.707108281185553 3.14159
          scale 10 10 1
          children Shape {
            appearance Appearance {
              material DEF Material2 Material {
                diffuseColor 0 0 0
                emissiveColor IS color
                transparency IS transparency
              }
            }
            geometry Rectangle2D {
              size 1 1
              solid IS solid
            }
          }
        }
        DEF MajorGrid Shape {
          appearance Appearance {
            material DEF MajorMaterial Material {
              emissiveColor IS majorLineColor
              transparency IS majorLineTransparency
            }
          }
          geometry DEF MajorGrid_1 IndexedLineSet {
            coordIndex [
              0,
              1,
              -1,
              2,
              3,
              -1,
              4,
              5,
              -1,
              6,
              7,
              -1,
              8,
              9,
              -1,
              10,
              11,
              -1
            ]
            coord Coordinate {
              point [
                -5 0 -5.25,
                -5 0 5.25,
                0 0 -5.25,
                0 0 5.25,
                5 0 -5.25,
                5 0 5.25,
                -5.25 0 -5,
                5.25 0 -5,
                -5.25 0 0,
                5.25 0 0,
                -5.25 0 5,
                5.25 0 5
              ]
            }
          }
        }
        DEF MinorGrid Shape {
          appearance Appearance {
            material DEF MinorMaterial Material {
              emissiveColor IS lineColor
              transparency IS lineTransparency
            }
          }
          geometry DEF MinorGrid_1 IndexedLineSet {
            coordIndex [
              0,
              1,
              -1,
              2,
              3,
              -1,
              4,
              5,
              -1,
              6,
              7,
              -1,
              8,
              9,
              -1,
              10,
              11,
              -1,
              12,
              13,
              -1,
              14,
              15,
              -1,
              16,
              17,
              -1,
              18,
              19,
              -1,
              20,
              21,
              -1,
              22,
              23,
              -1,
              24,
              25,
              -1,
              26,
              27,
              -1,
              28,
              29,
              -1,
              30,
              31,
              -1
            ]
            coord Coordinate {
              point [
                -4 0 -5,
                -4 0 5,
                -3 0 -5,
                -3 0 5,
                -2 0 -5,
                -2 0 5,
                -1 0 -5,
                -1 0 5,
                1 0 -5,
                1 0 5,
                2 0 -5,
                2 0 5,
                3 0 -5,
                3 0 5,
                4 0 -5,
                4 0 5,
                -5 0 -4,
                5 0 -4,
                -5 0 -3,
                5 0 -3,
                -5 0 -2,
                5 0 -2,
                -5 0 -1,
                5 0 -1,
                -5 0 1,
                5 0 1,
                -5 0 2,
                5 0 2,
                -5 0 3,
                5 0 3,
                -5 0 4,
                5 0 4
              ]
            }
          }
        }
        DEF MajorPoints Shape {
          appearance Appearance {
            lineProperties LineProperties {
              linewidthScaleFactor 6
            }
            material USE MajorMaterial
          }
          geometry DEF MajorPoints_1 PointSet {
            coord Coordinate {
              point [
                0 -5 0,
                0 0 0,
                0 5 0
              ]
            }
          }
        }
        DEF MinorPoints Shape {
          appearance Appearance {
            lineProperties LineProperties {
              linewidthScaleFactor 4
            }
            material USE MinorMaterial
          }
          geometry DEF MinorPoints_1 PointSet {
            coord Coordinate {
              point [
                0 -4 0,
                0 -3 0,
                0 -2 0,
                0 -1 0,
                0 1 0,
                0 2 0,
                0 3 0,
                0 4 0
              ]
            }
          }
        }
      ]
    }
  }

  DEF GridScript Script {
    inputOutput    MFInt32 dimension IS dimension
    inputOutput    MFInt32 majorLineEvery IS majorLineEvery
    inputOutput    MFInt32 majorLineOffset IS majorLineOffset
    initializeOnly SFNode  plane USE Plane
    initializeOnly SFNode  majorGrid USE MajorGrid_1
    initializeOnly SFNode  minorGrid USE MinorGrid_1
    initializeOnly SFNode  majorPoints USE MajorPoints_1
    initializeOnly SFNode  minorPoints USE MinorPoints_1

    url "ecmascript:

function initialize ()
{
	eventsProcessed ();
}

function eventsProcessed ()
{
	// Plane

	plane .scale = new SFVec3f (dimension [0], dimension [2], 1);

	// Grid

	generateGrid (true, majorGrid);
	generateGrid (false, minorGrid);

	// Points

	generatePoints (true,  majorPoints .coord .point);
	generatePoints (false, minorPoints .coord .point);
}

function generateGrid (major, grid)
{
	var point       = grid .coord .point;
	var coordIndex  = new MFInt32 ();
	var scaleX1_2   = dimension [0] / 2;
	var scaleZ1_2   = dimension [2] / 2;
	var majorAdd    = major / 4;
	var p           = 0;

	for (var i = 0, size = dimension [0] + 1; i < size; ++ i)
	{
		if (major - isMajorLine (i, 0))
			continue;

		var x = -scaleX1_2 + i;

		point [p]     = new SFVec3f (x, 0, -scaleZ1_2 - majorAdd);
		point [p + 1] = new SFVec3f (x, 0,  scaleZ1_2 + majorAdd);
		coordIndex [coordIndex .length] = p;
		coordIndex [coordIndex .length] = p + 1;
		coordIndex [coordIndex .length] = -1;
			
		p += 2;
	}

	for (var i = 0, size = dimension [2] + 1; i < size; ++ i)
	{
		if (major - isMajorLine (i, 2))
			continue;

		var z = -scaleZ1_2 + i;

		point [p]     = new SFVec3f (-scaleX1_2 - majorAdd, 0, z);
		point [p + 1] = new SFVec3f ( scaleX1_2 + majorAdd, 0, z);
		coordIndex [coordIndex .length] = p;
		coordIndex [coordIndex .length] = p + 1;
		coordIndex [coordIndex .length] = -1;
		
		p += 2;
	}

	point .length = p;

	grid .set_coordIndex = coordIndex;
}

function generatePoints (major, point)
{
	var scaleY1_2 = -dimension [1] / 2;
	var p         = 0;

	for (var i = 0, size = dimension [1] + 1; i < size; ++ i)
	{
		if (major - isMajorLine (i, 1))
			continue;

		point [p] = new SFVec3f (0, scaleY1_2 + i, 0);
		++ p;
	}

	point .length = p;
}

function isMajorLine (i, index)
{
	for (var d = index; d < majorLineEvery .length; d += 3)
	{
		if (isMajor (i, dimension [index], majorLineEvery [d], majorLineOffset [d]))
			return true;
	}

	return false;
}

function isMajor (i, dimension, majorLineEvery, majorLineOffset)
{
	if (majorLineEvery)
	{
		var index = Math .floor (i - dimension / 2 - majorLineOffset);

		return !(index % majorLineEvery);
	}

	return false;
}
"
    directOutput TRUE
    mustEvaluate TRUE
  }
}

WorldInfo {
  metadata DEF Titania MetadataSet {
    name "Titania"
    reference "http://titania.create3000.de"
    value [
      DEF Selection MetadataSet {
        name "Selection"
        reference "http://titania.create3000.de"
        value [
          DEF previous MetadataSet {
            name "previous"
            reference "http://titania.create3000.de"
          }
          DEF children MetadataSet {
            name "children"
            reference "http://titania.create3000.de"
          }
          DEF selectGeometry MetadataBoolean {
            name "selectGeometry"
            reference "http://titania.create3000.de"
            value FALSE
          }
        ]
      }
      DEF NavigationInfo MetadataSet {
        name "NavigationInfo"
        reference "http://titania.create3000.de"
        value DEF type MetadataString {
          name "type"
          reference "http://titania.create3000.de"
          value "EXAMINE"
        }
      }
      DEF Viewpoint MetadataSet {
        name "Viewpoint"
        reference "http://titania.create3000.de"
        value [
          DEF position MetadataDouble {
            name "position"
            reference "http://titania.create3000.de"
            value [
              0.195047289133072,
              4.12723350524902,
              9.10649490356445
            ]
          }
          DEF orientation MetadataDouble {
            name "orientation"
            reference "http://titania.create3000.de"
            value [
              -0.998934301163994,
              0.04484227921785,
              -0.010928492693443,
              0.425972342491147
            ]
          }
          DEF centerOfRotation MetadataDouble {
            name "centerOfRotation"
            reference "http://titania.create3000.de"
            value [
              0,
              0,
              0
            ]
          }
        ]
      }
      DEF Page MetadataSet {
        name "Page"
        reference "http://titania.create3000.de"
        value [
          DEF activeView MetadataInteger {
            name "activeView"
            reference "http://titania.create3000.de"
            value 1
          }
          DEF multiView MetadataInteger {
            name "multiView"
            reference "http://titania.create3000.de"
            value 0
          }
        ]
      }
    ]
  }
  title "Grid"
}
