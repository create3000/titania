#X3D V3.3 utf8 Titania V3.0.4

PROFILE Full

COMPONENT Titania : 1

UNIT angle degree 0.0174532925199432958

META "comment" "World of Titania"
META "created" "Tue, 05 Aug 2014 20:06:52 GMT"
META "creator" "Holger Seelig"
META "generator" "Titania V3.0.4, http://titania.create3000.de"
META "identifier" "file:///home/holger/Projekte/Titania/libtitania-x3d/share/titania/tools/library/AxonometricGrid.x3dv"
META "modified" "Tue, 20 Jun 2017 04:57:37 GMT"

PROTO AxonometricGrid [
  inputOutput    SFVec3f    translation 0 0 0
  inputOutput    SFRotation rotation 0 0 1 0
  inputOutput    SFVec3f    scale 1 1 1
  inputOutput    MFInt32    dimension [
    5,
    10
  ]
  inputOutput    SFVec2d    angle 1.0471975511966 1.0471975511966
  inputOutput    MFInt32    majorLineEvery [
    5,
    5,
    5,
    5
  ]
  inputOutput    MFInt32    majorLineOffset [
    0,
    0,
    0,
    0
  ]
  inputOutput    SFColor    color 0.5 0.5 0.5
  inputOutput    SFFloat    transparency 0.61803
  inputOutput    SFColor    lineColor 1 0.7 0.7
  inputOutput    SFFloat    lineTransparency 0.8
  inputOutput    SFColor    majorLineColor 1 0.7 0.7
  inputOutput    SFFloat    majorLineTransparency 0.6
  initializeOnly SFBool     solid TRUE
]
{
  Transform {
    rotation IS rotation
    children Transform {
      translation IS translation
      scale IS scale
      children [
        DEF HexagonPlane Shape {
          appearance Appearance {
            material DEF Material2 Material {
              diffuseColor 0 0 0
              emissiveColor IS color
              transparency IS transparency
            }
          }
          geometry IndexedFaceSet {
            solid IS solid
            coordIndex [
              0,
              1,
              2,
              3,
              4,
              5,
              -1
            ]
            coord DEF HexagonCoord Coordinate {
              point [
                5 0 0,
                2.5 0 -4.33013,
                -2.5 0 -4.33013,
                -5 -0 -0,
                -2.5 -0 4.33013,
                2.5 -0 4.33013
              ]
            }
          }
        }
        DEF MajorGrid Shape {
          appearance Appearance {
            material DEF MajorMaterial Material {
              emissiveColor IS majorLineColor
              transparency IS majorLineTransparency
            }
          }
          geometry DEF MajorGrid_1 IndexedLineSet {
            coordIndex [
              0,
              1,
              -1,
              2,
              3,
              -1,
              4,
              5,
              -1,
              6,
              7,
              -1,
              8,
              9,
              -1,
              10,
              11,
              -1,
              12,
              13,
              -1,
              14,
              15,
              -1,
              16,
              17,
              -1
            ]
            coord Coordinate {
              point [
                -5.125 0 0.216507,
                -2.375 0 -4.54663,
                -2.625 0 4.54663,
                2.625 0 -4.54663,
                2.375 0 4.54663,
                5.125 0 -0.216507,
                -2.75 0 -4.33013,
                2.75 0 -4.33013,
                -5.25 0 0,
                5.25 0 0,
                -2.75 0 4.33013,
                2.75 0 4.33013,
                2.375 0 -4.54663,
                5.125 0 0.216507,
                -2.625 0 -4.54663,
                2.625 0 4.54663,
                -5.125 0 -0.216507,
                -2.375 0 4.54663
              ]
            }
          }
        }
        DEF MinorGrid Shape {
          appearance Appearance {
            material DEF MinorMaterial Material {
              emissiveColor IS lineColor
              transparency IS lineTransparency
            }
          }
          geometry DEF MinorGrid_1 IndexedLineSet {
            coordIndex [
              0,
              1,
              -1,
              2,
              3,
              -1,
              4,
              5,
              -1,
              6,
              7,
              -1,
              8,
              9,
              -1,
              10,
              11,
              -1,
              12,
              13,
              -1,
              14,
              15,
              -1,
              16,
              17,
              -1,
              18,
              19,
              -1,
              20,
              21,
              -1,
              22,
              23,
              -1,
              24,
              25,
              -1,
              26,
              27,
              -1,
              28,
              29,
              -1,
              30,
              31,
              -1,
              32,
              33,
              -1,
              34,
              35,
              -1,
              36,
              37,
              -1,
              38,
              39,
              -1,
              40,
              41,
              -1,
              42,
              43,
              -1,
              44,
              45,
              -1,
              46,
              47,
              -1
            ]
            coord Coordinate {
              point [
                -4.5 0 0.866026,
                -1.5 0 -4.33013,
                -4 0 1.73205,
                -0.5 0 -4.33013,
                -3.5 0 2.59808,
                0.5 0 -4.33013,
                -3 0 3.4641,
                1.5 0 -4.33013,
                -1.5 0 4.33013,
                3 0 -3.4641,
                -0.5 0 4.33013,
                3.5 0 -2.59808,
                0.5 0 4.33013,
                4 0 -1.73205,
                1.5 0 4.33013,
                4.5 0 -0.866026,
                -3 0 -3.4641,
                3 0 -3.4641,
                -3.5 0 -2.59808,
                3.5 0 -2.59808,
                -4 0 -1.73205,
                4 0 -1.73205,
                -4.5 0 -0.866025,
                4.5 0 -0.866025,
                -4.5 0 0.866025,
                4.5 0 0.866025,
                -4 0 1.73205,
                4 0 1.73205,
                -3.5 0 2.59808,
                3.5 0 2.59808,
                -3 0 3.4641,
                3 0 3.4641,
                1.5 0 -4.33013,
                4.5 0 0.866026,
                0.5 0 -4.33013,
                4 0 1.73205,
                -0.5 0 -4.33013,
                3.5 0 2.59808,
                -1.5 0 -4.33013,
                3 0 3.4641,
                -3 0 -3.4641,
                1.5 0 4.33013,
                -3.5 0 -2.59808,
                0.5 0 4.33013,
                -4 0 -1.73205,
                -0.5 0 4.33013,
                -4.5 0 -0.866026,
                -1.5 0 4.33013
              ]
            }
          }
        }
        DEF MajorPoints Shape {
          appearance Appearance {
            lineProperties LineProperties {
              linewidthScaleFactor 6
            }
            material USE MajorMaterial
          }
          geometry DEF MajorPoints_1 PointSet {
            coord Coordinate {
              point [
                0 -5 0,
                0 0 0,
                0 5 0
              ]
            }
          }
        }
        DEF MinorPoints Shape {
          appearance Appearance {
            lineProperties LineProperties {
              linewidthScaleFactor 4
            }
            material USE MinorMaterial
          }
          geometry DEF MinorPoints_1 PointSet {
            coord Coordinate {
              point [
                0 -4 0,
                0 -3 0,
                0 -2 0,
                0 -1 0,
                0 1 0,
                0 2 0,
                0 3 0,
                0 4 0
              ]
            }
          }
        }
      ]
    }
  }

  DEF GridScript Script {
    inputOutput    MFInt32 dimension IS dimension
    inputOutput    SFVec2d angle IS angle
    inputOutput    MFInt32 majorLineEvery IS majorLineEvery
    inputOutput    MFInt32 majorLineOffset IS majorLineOffset
    initializeOnly SFNode  hexagon USE HexagonCoord
    initializeOnly SFNode  majorGrid USE MajorGrid_1
    initializeOnly SFNode  minorGrid USE MinorGrid_1
    initializeOnly SFNode  majorPoints USE MajorPoints_1
    initializeOnly SFNode  minorPoints USE MinorPoints_1

    url "peaseblossom:

function initialize ()
{
	eventsProcessed ();
}

function eventsProcessed ()
{
	var angles     = new SFVec3f (angle [0], angle [1], Math .PI - angle [0] - angle [1])
	var u          = Math .sin (angles [1]) / Math .sin (angles [2]);
	var v          = 1;
	var t          = Math .sin (angles [0]) / Math .sin (angles [2]);
	var sides      = new SFVec3f (u, 1, t);
	var heightU    = v * Math .sin (angles [0]);
	var heightV    = t * Math .sin (angles [1]);
	var heightT    = u * Math .sin (angles [2]);
	var heights    = new SFVec3f (heightU, heightV, heightT);

	// Axonometric grid

	generateGrid (true,  majorGrid, angles, sides, heights);
	generateGrid (false, minorGrid, angles, sides, heights);

	// Points

	generatePoints (true,  majorPoints .coord .point);
	generatePoints (false, minorPoints .coord .point);

	// Hexagon plane

	hexagon .point [0] = new SFVec3f (v, 0, 0) .multiply (dimension [0]);
	hexagon .point [1] = new SFRotation (0, 1, 0, angles [0])              .multVec (new SFVec3f (u * dimension [0], 0, 0));
	hexagon .point [2] = new SFRotation (0, 1, 0, angles [0] + angles [2]) .multVec (new SFVec3f (t * dimension [0], 0, 0));
	hexagon .point [3] = hexagon .point [0] .negate ();
	hexagon .point [4] = hexagon .point [1] .negate ();
	hexagon .point [5] = hexagon .point [2] .negate ();
}

function generateGrid (major, grid, angles, sides, heights)
{
	var coordIndex = new MFInt32 ();
	var p          = 0;

	p = generateGridAxis (0,  angle [0], angles, sides, heights, major, grid, coordIndex, p);
	p = generateGridAxis (1,  0,         angles, sides, heights, major, grid, coordIndex, p);
	p = generateGridAxis (2, -angle [1], angles, sides, heights, major, grid, coordIndex, p);

	grid .coord .point .length = p;
	grid .set_coordIndex = coordIndex;
}

function generateGridAxis (axis, angle, angles, sides, heights, major, grid, coordIndex, p)
{
	var point     = grid .coord .point;
	var majorAdd  = major / 4;
	var scale_2   = dimension [0];
	var rotation  = new SFRotation (0, 1, 0, angle);
	var height    = heights [axis];
	var side      = sides [axis];
	var dMap      = [ 1, 1, 0, 0, 1, 1 ];
	var eMap      = [ 0, 1, 0 ];
	var lMap      = [ 2, 0, 1 ];
	var rMap      = [ 1, 2, 0 ];
	var left      = Math .sqrt (Math .pow (sides [lMap [axis]], 2) - Math .pow (heights [axis], 2));
	var right     = Math .sqrt (Math .pow (sides [rMap [axis]], 2) - Math .pow (heights [axis], 2));

	for (var n = 0, size = dimension [0] * 2 + 1; n < size; ++ n)
	{
		if (major - isMajorLine (n, axis, 0, 2))
			continue;

		var i = n - scale_2;
		var x = scale_2 * side + majorAdd;
		var l = i > 0 ? right * i : left  * -i;
		var r = i > 0 ? left  * i : right * -i;
		var z = i * height;
		var e = eMap [axis] ? i < 0 : i > 0;

		if (e)
		{
			if (dMap [axis] && angles [0] > Math .PI / 2)
				l = -l;
		}
		else
		{
			if (dMap [axis] && angles [0] > Math .PI / 2)
				r = -r;
		}

		if (e)
		{
			if (dMap [axis + 3] && angles [1] > Math .PI / 2)
				r = -r;
		}
		else
		{
			if (dMap [axis + 3] && angles [1] > Math .PI / 2)
				l = -l;
		}

		point [p]     = rotation .multVec (new SFVec3f (-x + l, 0, z));
		point [p + 1] = rotation .multVec (new SFVec3f ( x - r, 0, z));
		coordIndex [coordIndex .length] = p;
		coordIndex [coordIndex .length] = p + 1;
		coordIndex [coordIndex .length] = -1;
			
		p += 2;
	}

	return p;
}

function generatePoints (major, point)
{
	var scaleY_2 = -dimension [1] / 2;
	var p         = 0;

	for (var i = 0, size = dimension [1] + 1; i < size; ++ i)
	{
		if (major - isMajorLine (i, 3, 1, 1))
			continue;

		point [p] = new SFVec3f (0, scaleY_2 + i, 0);
		++ p;
	}

	point .length = p;
}

function isMajorLine (i, index, di, f)
{
	for (var d = index; d < majorLineEvery .length; d += 4)
	{
		if (isMajor (i, dimension [di] * f, majorLineEvery [d], majorLineOffset [d]))
			return true;
	}

	return false;
}

function isMajor (i, dimension, majorLineEvery, majorLineOffset)
{
	if (majorLineEvery)
	{
		var index = Math .floor (i - dimension / 2 - majorLineOffset);

		return !(index % majorLineEvery);
	}

	return false;
}
"
    directOutput TRUE
    mustEvaluate TRUE
  }
}

WorldInfo {
  metadata DEF Titania MetadataSet {
    name "Titania"
    reference "http://titania.create3000.de"
    value [
      DEF Selection MetadataSet {
        name "Selection"
        reference "http://titania.create3000.de"
        value [
          DEF previous MetadataSet {
            name "previous"
            reference "http://titania.create3000.de"
            value AxonometricGrid {
              angle 1.9 0.7
            }
          }
          DEF nodes MetadataSet {
            name "nodes"
            reference "http://titania.create3000.de"
          }
          DEF selectGeometry MetadataBoolean {
            name "selectGeometry"
            reference "http://titania.create3000.de"
            value FALSE
          }
        ]
      }
      DEF NavigationInfo MetadataSet {
        name "NavigationInfo"
        reference "http://titania.create3000.de"
        value DEF type MetadataString {
          name "type"
          reference "http://titania.create3000.de"
          value "EXAMINE"
        }
      }
      DEF Viewpoint MetadataSet {
        name "Viewpoint"
        reference "http://titania.create3000.de"
        value [
          DEF position MetadataDouble {
            name "position"
            reference "http://titania.create3000.de"
            value [
              0.904421875346767,
              15.5549094997242,
              0.313591383004598
            ]
          }
          DEF orientation MetadataDouble {
            name "orientation"
            reference "http://titania.create3000.de"
            value [
              -0.99912134324859,
              0.0339032859362693,
              -0.0246395752369447,
              1.55126811151973
            ]
          }
          DEF centerOfRotation MetadataDouble {
            name "centerOfRotation"
            reference "http://titania.create3000.de"
            value [
              0,
              0,
              0
            ]
          }
        ]
      }
      DEF Grid MetadataSet {
        name "Grid"
        reference "http://titania.create3000.de"
        value [
          DEF enabled MetadataBoolean {
            name "enabled"
            reference "http://titania.create3000.de"
            value FALSE
          }
          DEF dimension MetadataInteger {
            name "dimension"
            reference "http://titania.create3000.de"
            value [
              10,
              10,
              10
            ]
          }
          DEF majorLineOffset MetadataInteger {
            name "majorLineOffset"
            reference "http://titania.create3000.de"
            value [
              0,
              0,
              0
            ]
          }
          DEF scale MetadataFloat {
            name "scale"
            reference "http://titania.create3000.de"
            value [
              1,
              1,
              1
            ]
          }
          DEF rotation MetadataDouble {
            name "rotation"
            reference "http://titania.create3000.de"
            value [
              0,
              0,
              1,
              0
            ]
          }
          DEF translation MetadataFloat {
            name "translation"
            reference "http://titania.create3000.de"
            value [
              0,
              0,
              0
            ]
          }
        ]
      }
      DEF AngleGrid MetadataSet {
        name "AngleGrid"
        reference "http://titania.create3000.de"
        value DEF enabled_1 MetadataBoolean {
          name "enabled"
          reference "http://titania.create3000.de"
          value FALSE
        }
      }
      DEF AxonometricGrid MetadataSet {
        name "AxonometricGrid"
        reference "http://titania.create3000.de"
        value [
          DEF enabled_2 MetadataBoolean {
            name "enabled"
            reference "http://titania.create3000.de"
            value FALSE
          }
          DEF dimension_1 MetadataInteger {
            name "dimension"
            reference "http://titania.create3000.de"
            value [
              26,
              10,
              10
            ]
          }
          DEF majorLineEvery MetadataInteger {
            name "majorLineEvery"
            reference "http://titania.create3000.de"
            value [
              10,
              10,
              10,
              0,
              10,
              10,
              10,
              0
            ]
          }
          DEF majorLineOffset_1 MetadataInteger {
            name "majorLineOffset"
            reference "http://titania.create3000.de"
            value [
              0,
              0,
              0,
              0,
              1,
              1,
              1,
              0
            ]
          }
          DEF color MetadataFloat {
            name "color"
            reference "http://titania.create3000.de"
            value [
              0.5,
              0.5,
              0.5,
              0.2
            ]
          }
          DEF lineColor MetadataFloat {
            name "lineColor"
            reference "http://titania.create3000.de"
            value [
              1,
              0.7,
              0.7,
              0.2
            ]
          }
          DEF majorLineColor MetadataFloat {
            name "majorLineColor"
            reference "http://titania.create3000.de"
            value [
              1,
              0.7,
              0.7,
              0.4
            ]
          }
          DEF scale_1 MetadataFloat {
            name "scale"
            reference "http://titania.create3000.de"
            value [
              1,
              1,
              1
            ]
          }
          DEF translation_1 MetadataFloat {
            name "translation"
            reference "http://titania.create3000.de"
            value [
              0,
              -3.55271e-15,
              0
            ]
          }
        ]
      }
      DEF Page MetadataSet {
        name "Page"
        reference "http://titania.create3000.de"
        value [
          DEF activeView MetadataInteger {
            name "activeView"
            reference "http://titania.create3000.de"
            value 1
          }
          DEF multiView MetadataInteger {
            name "multiView"
            reference "http://titania.create3000.de"
            value 0
          }
        ]
      }
    ]
  }
  title "AxonometricGrid"
}
