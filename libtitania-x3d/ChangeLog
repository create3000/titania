2013-01-05  Holger Seelig  <holger.seelig@yahoo.de>

	* SFNode.h:
	* SFTime.h:
	* X3DField.h:
	* X3DObject.h:
	* MFNode.cpp:
	* SFVec2.cpp:
	* SFTime.cpp:
	* SFNode.cpp:
	* Scene.h:
	* SFVec3.cpp:
	* Browser.h:
	* SFVec4.cpp:
	* MFInt32.cpp:
	* SFColor.cpp:
	* SFImage.cpp:
	* X3DBaseNode.h:
	* Scene.cpp:
	* SFString.cpp:
	* Browser.cpp:
	* SFMatrix4.cpp:
	* SFMatrix3.cpp:
	* X3DScalar.cpp:
	* X3DBaseNode.cpp:
	* X3DWidget.cpp:
	* SFRotation4.cpp:
	* ArrayFields.cpp:
	* SFColorRGBA.cpp:
	* X3DChildObject.cpp:
	* X3DRenderer.cpp:
	* ProfileInfo.h:
	* ProfileInfo.cpp:
	* ComponentInfo.h:
	* ComponentInfo.cpp:
	* X3DLayerNode.h:
	* X3DLayerNode.cpp:
	* X3DPrototypeInstance.h:
	* X3DPrototypeInstance.cpp:
	* LocalFog.cpp: 

2013-01-04  Holger Seelig  <holger.seelig@yahoo.de>

	* X3D.h:
	* X3D.cpp:
	* libtitania-x3d.cproj:
	* BrowserApplication.h: 

2013-01-04  Holger Seelig  <holger.seelig@yahoo.de>

	* Makefile.am:
	* X3D.h:
	* X3D.cpp:
	* libtitania-x3d.cproj:
	* Output.h:
	* Hit.h:
	* SFVec2.h:
	* Route.h:
	* SFTime.h:
	* Numbers.h:
	* SFVec3.h:
	* Output.cpp:
	* SFVec4.h:
	* MFNode.h:
	* SFNode.h:
	* Parser.h:
	* X3DField.h:
	* X3DArray.h:
	* X3DObject.h:
	* X3DOutput.h:
	* Router.h:
	* MFNode.cpp:
	* Proto.h:
	* SFNode.cpp:
	* Browser.h:
	* Scene.h:
	* SFString.h:
	* Route.cpp:
	* Surface.h:
	* Parser.cpp:
	* X3DScalar.h:
	* SFColor.cpp:
	* X3DOutput.cpp:
	* Router.cpp:
	* X3DParser.h:
	* X3DObject.cpp:
	* Normal.h:
	* Surface.cpp:
	* Proto.cpp:
	* Scene.cpp:
	* X3DViewer.h:
	* X3DWidget.h:
	* Browser.cpp:
	* X3DBaseNode.h:
	* HitArray.cpp:
	* SFMatrix4.cpp:
	* geturl.h:
	* SFRotation4.h:
	* RouteSet.cpp:
	* X3DParser.cpp:
	* RouteArray.h:
	* X3DScene.h:
	* X3DScalar.cpp:
	* X3DProto.h:
	* X3DWidget.cpp:
	* ChildObjectSet.h:
	* X3DChildObject.h:
	* NodeArray.h:
	* X3DBaseNode.cpp:
	* X3DViewer.cpp:
	* X3DArrayField.h:
	* X3DConstants.cpp:
	* Text.h:
	* RouteArray.cpp:
	* X3DProto.cpp:
	* geturl.cpp:
	* SFColorRGBA.cpp:
	* Tesselator.h:
	* X3DScene.cpp:
	* BasicNodeArray.h:
	* X3DBrowser.cpp:
	* ProtoArray.h:
	* ExternProto.h:
	* X3DChildObject.cpp:
	* Generator.h:
	* ExamineViewer.h:
	* ChildObjectSet.cpp:
	* NodeArray.cpp:
	* NodeTypeArray.cpp:
	* Shape.h:
	* uncompress.h:
	* ViewVolume.cpp:
	* Text.cpp:
	* BasicNodeArray.cpp:
	* PointingDevice.h:
	* ProtoArray.cpp:
	* Sound.h:
	* Generator.cpp:
	* X3DNode.h:
	* ExternProto.cpp:
	* X3DRenderer.cpp:
	* ExamineViewer.cpp:
	* GarbargeCollector.cpp:
	* Shape.cpp:
	* Layout.h:
	* SignalPdu.h:
	* Sound.cpp:
	* PointingDevice.cpp:
	* X3DFieldDefinition.h:
	* uncompress.cpp:
	* ProfileInfo.h:
	* NurbsSet.h:
	* Layer.h:
	* LOD.h:
	* WorldInfo.h:
	* Box.h:
	* X3DBrowserContext.h:
	* Group.h:
	* X3DNode.cpp:
	* Material.h:
	* FontStyle.h:
	* AudioClip.h:
	* ExternProtoArray.h:
	* Switch.h:
	* TimeSensor.h:
	* FieldDefinitionSet.cpp:
	* Color.h:
	* Cone.h:
	* Layout.cpp:
	* Contour2D.h:
	* X3DFieldDefinition.cpp:
	* SignalPdu.cpp:
	* ReceiverPdu.h:
	* BindableNodeList.h:
	* Material.cpp:
	* WorldInfo.cpp:
	* HAnimSite.h:
	* Group.cpp:
	* X3DBrowserContext.cpp:
	* NurbsCurve.h:
	* FontStyle.cpp:
	* Script.h:
	* Box.cpp:
	* Normal.h:
	* MetadataSet.h:
	* Appearance.h:
	* Arc2D.h:
	* LOD.cpp:
	* NurbsSet.cpp:
	* ComponentInfo.h:
	* BindableNodeStack.h:
	* Layer.cpp:
	* ProfileInfo.cpp:
	* LineSet.h:
	* TimeSensor.cpp:
	* LayerSet.h:
	* GeoLOD.h:
	* FieldDefinitionArray.cpp:
	* Cone.cpp:
	* Anchor.h:
	* Disk2D.h:
	* Sphere.h:
	* MetadataBool.h:
	* Inline.h:
	* ExternProtoArray.cpp:
	* SupportedNodes.h:
	* AudioClip.cpp:
	* ReceiverPdu.cpp:
	* BindableNodeList.cpp:
	* Contour2D.cpp:
	* Switch.cpp:
	* HAnimJoint.h:
	* Color.cpp:
	* Viewport.h:
	* LayoutGroup.h:
	* MetadataSet.cpp:
	* MetadataFloat.h:
	* MotionBlur.h:
	* Transform.h:
	* LayoutLayer.h:
	* Normal.cpp:
	* HAnimSite.cpp:
	* JavaScriptEngine.cpp:
	* ScreenGroup.h:
	* NurbsCurve.cpp:
	* PointSet.h:
	* Script.cpp:
	* ComponentInfo.cpp:
	* X3DInfoNode.cpp:
	* Appearance.cpp:
	* FieldTypesArray.h:
	* Arc2D.cpp:
	* EspduTransform.h:
	* TransmitterPdu.h:
	* NurbsCurve2D.h:
	* SpotLight.h:
	* X3DExecutionContext.h:
	* ShaderPart.h:
	* BindableNodeStack.cpp:
	* CADPart.h:
	* Inline.cpp:
	* Cylinder.h:
	* X3DChildNode.cpp:
	* HAnimSegment.h:
	* ColorRGBA.h:
	* Anchor.cpp:
	* CADFace.h:
	* LayerSet.cpp:
	* Viewport.cpp:
	* ClipPlane.h:
	* HAnimJoint.cpp:
	* PointLight.h:
	* SupportedNodes.cpp:
	* Disk2D.cpp:
	* QuadSet.h:
	* ProfileInfoArray.h:
	* Circle2D.h:
	* MetadataBool.cpp:
	* Sphere.cpp:
	* MetadataString.h:
	* LineSet.cpp:
	* String.h:
	* MetadataDouble.h:
	* GeoLOD.cpp:
	* LayoutGroup.cpp:
	* ScreenGroup.cpp:
	* Billboard.h:
	* Collision.h:
	* SpotLight.cpp:
	* LayoutLayer.cpp:
	* NurbsCurve2D.cpp:
	* HAnimHumanoid.h:
	* Viewpoint.h:
	* FieldTypesArray.cpp:
	* X3DSoundNode.cpp:
	* X3DExecutionContext.cpp:
	* SupportedFields.cpp:
	* FillProperties.h:
	* ShaderPart.cpp:
	* X3DShapeNode.cpp:
	* LineProperties.h:
	* MetadataFloat.cpp:
	* MetadataInteger.h:
	* MotionBlur.cpp:
	* CADLayer.h:
	* EspduTransform.cpp:
	* TransmitterPdu.cpp:
	* X3DSensorNode.cpp:
	* DISEntityManager.h:
	* GeoOrigin.h:
	* PointSet.cpp:
	* Extrusion.h:
	* Transform.cpp:
	* StaticGroup.h:
	* Coordinate.h:
	* jsfield.h:
	* QuadSet.cpp:
	* MetadataDouble.cpp:
	* CADPart.cpp:
	* X3DFontStyleNode.h:
	* Cylinder.cpp:
	* PickableGroup.h:
	* HAnimDisplacer.h:
	* HAnimSegment.cpp:
	* ColorRGBA.cpp:
	* ClipPlane.cpp:
	* ComponentInfoArray.h:
	* PointLight.cpp:
	* ProfileInfoArray.cpp:
	* ArcClose2D.h:
	* ShaderProgram.h:
	* BoxProperties.h:
	* Polyline2D.h:
	* jsFields.h:
	* Circle2D.cpp:
	* String.cpp:
	* LoadSensor.h:
	* ProgramShader.h:
	* ColorDamper.h:
	* MetadataString.cpp:
	* TriangleSet.h:
	* CADFace.cpp:
	* LinePickSensor.h:
	* jsBrowser.h:
	* jsGlobals.h:
	* CoordinateDouble.h:
	* FillProperties.cpp:
	* Collision.cpp:
	* LineProperties.cpp:
	* Viewpoint.cpp:
	* jsfield.cpp:
	* ComposedShader.h:
	* PackagedShader.h:
	* MultiTexture.h:
	* PixelTexture.h:
	* Coordinate.cpp:
	* MovieTexture.h:
	* TwoSidedMaterial.h:
	* ImageTexture.h:
	* Billboard.cpp:
	* ScalarChaser.h:
	* GeoOrigin.cpp:
	* DISEntityManager.cpp:
	* X3DPropertyNode.cpp:
	* StaticGroup.cpp:
	* Polypoint2D.h:
	* Rectangle2D.h:
	* Extrusion.cpp:
	* GeoMetadata.h:
	* GeoLocation.h:
	* X3DMetadataObject.h:
	* CADLayer.cpp:
	* ScreenFontStyle.h:
	* HAnimHumanoid.cpp:
	* X3DLayoutNode.cpp:
	* X3DBindableNode.cpp:
	* MetadataInteger.cpp:
	* TriangleSet.cpp:
	* ComponentInfoArray.cpp:
	* CADAssembly.h:
	* jsX3DScene.h:
	* HAnimDisplacer.cpp:
	* GeoTransform.h:
	* GeoViewpoint.h:
	* X3DUrlObject.h:
	* PickableGroup.cpp:
	* PointPickSensor.h:
	* LoadSensor.cpp:
	* X3DMaterialNode.cpp:
	* ShaderProgram.cpp:
	* Polyline2D.cpp:
	* X3DFontStyleNode.cpp:
	* NurbsSweptSurface.h:
	* jsX3DField.h:
	* NurbsPatchSurface.h:
	* X3DShaderNode.cpp:
	* X3DLayerNode.cpp:
	* ArcClose2D.cpp:
	* ContourPolyline2D.h:
	* X3DLightNode.cpp:
	* NurbsSwungSurface.h:
	* ProgramShader.cpp:
	* ColorDamper.cpp:
	* MovieTexture.cpp:
	* MultiTexture.cpp:
	* TwoSidedMaterial.cpp:
	* PixelTexture.cpp:
	* PositionChaser.h:
	* VolumePickSensor.h:
	* X3DMetadataObject.cpp:
	* LinePickSensor.cpp:
	* ImageTexture.cpp:
	* PositionDamper.h:
	* ElevationGrid.h:
	* TriangleSet2D.h:
	* Contact.h:
	* Polypoint2D.cpp:
	* PackagedShader.cpp:
	* Rectangle2D.cpp:
	* ComposedShader.cpp:
	* jsX3DObject.h:
	* GeoCoordinate.h:
	* DISEntityTypeMapping.h:
	* Fog.h:
	* ScalarChaser.cpp:
	* IndexedLineSet.h:
	* TriangleFanSet.h:
	* X3DColorNode.cpp:
	* GeoMetadata.cpp:
	* GeoLocation.cpp:
	* jsGlobals.cpp:
	* X3DViewportNode.h:
	* jsBrowser.cpp:
	* CoordinateDouble.cpp:
	* BrowserOptions.cpp:
	* ScreenFontStyle.cpp:
	* X3DScriptNode.cpp:
	* KeySensor.h:
	* X3DNormalNode.cpp:
	* NavigationInfo.h:
	* X3DAppearanceNode.cpp:
	* X3DPickableObject.h:
	* NurbsTrimmedSurface.h:
	* GeoTouchSensor.h:
	* IndexedFaceSet.h:
	* X3DPrototypeInstance.h:
	* GeoTransform.cpp:
	* ContourPolyline2D.cpp:
	* X3DUrlObject.cpp:
	* GeoViewpoint.cpp:
	* X3DBoundedObject.h:
	* X3DChaserNode.cpp:
	* X3DDamperNode.cpp:
	* PointPickSensor.cpp:
	* ViewpointGroup.h:
	* DirectionalLight.h:
	* OrthoViewpoint.h:
	* NurbsPatchSurface.cpp:
	* NurbsSwungSurface.cpp:
	* CADAssembly.cpp:
	* NurbsSweptSurface.cpp:
	* jsX3DField.cpp:
	* X3DPickSensorNode.h:
	* jsX3DScene.cpp:
	* PixelTexture3D.h:
	* Contact.cpp:
	* BallJoint.h:
	* CoordinateDamper.h:
	* jsX3DObject.cpp:
	* TriangleFanSet.cpp:
	* TriangleStripSet.h:
	* GeoCoordinate.cpp:
	* PositionDamper2D.h:
	* TexCoordDamper2D.h:
	* PositionChaser.cpp:
	* PositionChaser2D.h:
	* X3DViewportNode.cpp:
	* PositionDamper.cpp:
	* X3DTextureNode.cpp:
	* ImageTexture3D.h:
	* RigidBody.h:
	* TriangleSet2D.cpp:
	* TextureTransform.h:
	* ElevationGrid.cpp:
	* TimeTrigger.h:
	* DISEntityTypeMapping.cpp:
	* Fog.cpp:
	* X3DGroupingNode.cpp:
	* IndexedLineSet.cpp:
	* IndexedQuadSet.h:
	* VolumePickSensor.cpp:
	* X3DPrototypeInstance.cpp:
	* DirectionalLight.cpp:
	* EaseInEaseOut.h:
	* X3DPickableObject.cpp:
	* X3DPickSensorNode.cpp:
	* OrientationDamper.h:
	* GeoTouchSensor.cpp:
	* TextureProperties.h:
	* ConeEmitter.h:
	* KeySensor.cpp:
	* MotorJoint.h:
	* NurbsTrimmedSurface.cpp:
	* X3DBoundedObject.cpp:
	* IndexedFaceSet.cpp:
	* TextureCoordinate.h:
	* RenderingProperties.h:
	* ViewpointGroup.cpp:
	* X3DGeometryNode.cpp:
	* X3DViewpointNode.h:
	* BrowserProperties.cpp:
	* GeoElevationGrid.h:
	* OrientationChaser.h:
	* PrimitivePickSensor.h:
	* X3DFollowerNode.cpp:
	* NavigationInfo.cpp:
	* FloatVertexAttribute.h:
	* jsMFNode.h:
	* IndexedQuadSet.cpp:
	* TextureTransform.cpp:
	* PointEmitter.h:
	* TexCoordDamper2D.cpp:
	* StringSensor.h:
	* QuadSphereProperties.h:
	* NurbsTextureCoordinate.h:
	* jsX3DArrayField.h:
	* jsMFBool.h:
	* PositionChaser2D.cpp:
	* PositionDamper2D.cpp:
	* TimeTrigger.cpp:
	* PixelTexture3D.cpp:
	* BooleanFilter.h:
	* CoordinateDamper.cpp:
	* RigidBody.cpp:
	* jsSFVec3.h:
	* BallJoint.cpp:
	* BooleanToggle.h:
	* IndexedTriangleSet.h:
	* X3DTexture3DNode.h:
	* jsSFNode.h:
	* TriangleStripSet.cpp:
	* ImageTexture3D.cpp:
	* SliderJoint.h:
	* jsMFTime.h:
	* jsSFVec4.h:
	* jsSFVec2.h:
	* X3DTexture2DNode.cpp:
	* RenderingProperties.cpp:
	* jsMFFloat.h:
	* LocalFog.h:
	* GeoElevationGrid.cpp:
	* VolumeEmitter.h:
	* X3DViewpointNode.cpp:
	* X3DCoordinateNode.cpp:
	* jsMFInt32.h:
	* X3DSpherePropertyNode.h:
	* GeoProximitySensor.h:
	* MotorJoint.cpp:
	* TextureProperties.cpp:
	* ConeEmitter.cpp:
	* jsSFImage.h:
	* ComposedTexture3D.h:
	* TextureCoordinate.cpp:
	* PrimitivePickSensor.cpp:
	* IntegerTrigger.h:
	* BooleanTrigger.h:
	* EaseInEaseOut.cpp:
	* OrientationDamper.cpp:
	* OrientationChaser.cpp:
	* jsSFNode.cpp:
	* jsMFTime.cpp:
	* BooleanFilter.cpp:
	* jsSFVec2.cpp:
	* jsMFDouble.h:
	* jsMFBool.cpp:
	* jsMFString.h:
	* jsMFNode.cpp:
	* JavaScriptContext.h:
	* jsSFVec4.cpp:
	* jsX3DArrayField.cpp:
	* QuadSphereProperties.cpp:
	* jsSFVec3.cpp:
	* BooleanToggle.cpp:
	* TextureTransform3D.h:
	* X3DTexture3DNode.cpp:
	* Matrix3VertexAttribute.h:
	* FloatVertexAttribute.cpp:
	* Matrix4VertexAttribute.h:
	* NurbsTextureCoordinate.cpp:
	* ParticleSystem.h:
	* SliderJoint.cpp:
	* IndexedTriangleSet.cpp:
	* PointEmitter.cpp:
	* X3DAppearanceChildNode.cpp:
	* SurfaceEmitter.h:
	* StringSensor.cpp:
	* NurbsSurfaceInterpolator.h:
	* jsMFFloat.cpp:
	* TextureCoordinate4D.h:
	* TextureCoordinate3D.h:
	* GeoProximitySensor.cpp:
	* jsMFInt32.cpp:
	* BooleanTrigger.cpp:
	* PolylineEmitter.h:
	* IntegerSequencer.h:
	* IntegerTrigger.cpp:
	* VolumeEmitter.cpp:
	* BooleanSequencer.h:
	* X3DGeometryPropertyNode.h:
	* X3DSpherePropertyNode.cpp:
	* LocalFog.cpp:
	* Background.h:
	* jsX3DScalar.h:
	* NurbsPositionInterpolator.h:
	* X3DTriggerNode.cpp:
	* MultiTextureTransform.h:
	* jsProfileInfoArray.h:
	* jsSFColor.cpp:
	* ComposedTexture3D.cpp:
	* CollisionSpace.h:
	* IndexedTriangleFanSet.h:
	* UniversalJoint.h:
	* ColorInterpolator.h:
	* jsSFImage.cpp:
	* TouchSensor.h:
	* PlaneSensor.h:
	* WindPhysicsModel.h:
	* NormalInterpolator.h:
	* jsMFString.cpp:
	* NurbsSurfaceInterpolator.cpp:
	* ScalarInterpolator.h:
	* jsMFDouble.cpp:
	* SurfaceEmitter.cpp:
	* ExplosionEmitter.h:
	* ParticleSystem.cpp:
	* MultiTextureCoordinate.h:
	* CollisionSensor.h:
	* X3DVertexAttributeNode.cpp:
	* Matrix4VertexAttribute.cpp:
	* CollidableShape.h:
	* Matrix3VertexAttribute.cpp:
	* TextureTransform3D.cpp:
	* UniversalJoint.cpp:
	* TextureCoordinate4D.cpp:
	* TextureCoordinate3D.cpp:
	* CollidableOffset.h:
	* jsArrayFields.h:
	* PolylineEmitter.cpp:
	* jsSFColorRGBA.h:
	* jsSFMatrix3.cpp:
	* jsSFMatrix4.cpp:
	* X3DGeometryPropertyNode.cpp:
	* IntegerSequencer.cpp:
	* NurbsPositionInterpolator.cpp:
	* X3DNetworkSensorNode.cpp:
	* jsProfileInfoArray.cpp:
	* CollisionSpace.cpp:
	* X3DFogObject.h:
	* ColorInterpolator.cpp:
	* IndexedTriangleStripSet.h:
	* MultiTextureTransform.cpp:
	* BooleanSequencer.cpp:
	* X3DParametricGeometryNode.cpp:
	* SphereSensor.h:
	* X3DComposedGeometryNode.h:
	* IndexedTriangleFanSet.cpp:
	* jsComponentInfoArray.h:
	* X3DNurbsSurfaceGeometryNode.h:
	* MultiTextureCoordinate.cpp:
	* X3DRigidJointNode.h:
	* NurbsOrientationInterpolator.h:
	* jsX3DExecutionContext.h:
	* jsSFRotation.cpp:
	* NormalInterpolator.cpp:
	* ScalarInterpolator.cpp:
	* PositionInterpolator.h:
	* GeoPositionInterpolator.h:
	* TouchSensor.cpp:
	* CollidableShape.cpp:
	* WindPhysicsModel.cpp:
	* CollisionSensor.cpp:
	* PlaneSensor.cpp:
	* ExplosionEmitter.cpp:
	* FogCoordinate.h:
	* SphereSensor.cpp:
	* X3DNurbsSurfaceGeometryNode.cpp:
	* jsComponentInfoArray.cpp:
	* jsX3DFieldDefinition.cpp:
	* IndexedTriangleStripSet.cpp:
	* ProximitySensor.h:
	* X3DFogObject.cpp:
	* TransformSensor.h:
	* jsFieldDefinitionArray.h:
	* X3DProgrammableShaderObject.h:
	* X3DComposedGeometryNode.cpp:
	* CollidableOffset.cpp:
	* GravityPhysicsModel.h:
	* X3DTextureTransformNode.cpp:
	* jsSFColorRGBA.cpp:
	* CylinderSensor.h:
	* BoundedPhysicsModel.h:
	* TextureTransformMatrix3D.h:
	* VisibilitySensor.h:
	* NurbsOrientationInterpolator.cpp:
	* FogCoordinate.cpp:
	* jsX3DExecutionContext.cpp:
	* RigidBodyCollection.h:
	* X3DRigidJointNode.cpp:
	* TextureCoordinateGenerator.h:
	* PositionInterpolator.cpp:
	* X3DGeometricPropertyNode.cpp:
	* PositionInterpolator2D.h:
	* CollisionCollection.h:
	* X3DTextureCoordinateNode.cpp:
	* CoordinateInterpolator.h:
	* ImageCubeMapTexture.h:
	* GeoPositionInterpolator.cpp:
	* SingleAxisHingeJoint.h:
	* BoundedPhysicsModel.cpp:
	* ProximitySensor.cpp:
	* TransformSensor.cpp:
	* DoubleAxisHingeJoint.h:
	* CylinderSensor.cpp:
	* OrientationInterpolator.h:
	* jsFieldDefinitionArray.cpp:
	* GravityPhysicsModel.cpp:
	* X3DProgrammableShaderObject.cpp:
	* X3DBackgroundNode.h:
	* CoordinateInterpolator2D.h:
	* PositionInterpolator2D.cpp:
	* CoordinateInterpolator.cpp:
	* SplineScalarInterpolator.h:
	* VisibilitySensor.cpp:
	* RigidBodyCollection.cpp:
	* CollisionCollection.cpp:
	* TextureTransformMatrix3D.cpp:
	* TextureCoordinateGenerator.cpp:
	* TextureBackground.h:
	* ImageCubeMapTexture.cpp:
	* OrientationInterpolator.cpp:
	* ComposedCubeMapTexture.h:
	* DoubleAxisHingeJoint.cpp:
	* SingleAxisHingeJoint.cpp:
	* X3DBackgroundNode.cpp:
	* TextureBackground.cpp:
	* GeneratedCubeMapTexture.h:
	* CoordinateInterpolator2D.cpp:
	* SplineScalarInterpolator.cpp:
	* X3DKeyDeviceSensorNode.cpp:
	* X3DDragSensorNode.cpp:
	* SplinePositionInterpolator.h:
	* ComposedCubeMapTexture.cpp:
	* X3DTouchSensorNode.cpp:
	* X3DNBodyCollidableNode.cpp:
	* SplinePositionInterpolator.cpp:
	* GeneratedCubeMapTexture.cpp:
	* SplinePositionInterpolator2D.h:
	* SquadOrientationInterpolator.h:
	* X3DProductStructureChildNode.cpp:
	* SplinePositionInterpolator2D.cpp:
	* X3DEnvironmentTextureNode.cpp:
	* SquadOrientationInterpolator.cpp:
	* X3DNBodyCollisionSpaceNode.cpp:
	* X3DParticlePhysicsModelNode.cpp:
	* X3DPointingDeviceSensorNode.cpp: 

2013-01-04  Holger Seelig  <holger.seelig@yahoo.de>

	* Parser.h:
	* Route.cpp:
	* Scene.h:
	* Parser.cpp:
	* Browser.h:
	* Browser.cpp:
	* Scene.cpp:
	* X3DBaseNode.h:
	* X3DBaseNode.cpp:
	* X3DBrowser.cpp:
	* X3DScene.cpp:
	* ViewVolume.cpp:
	* PointingDevice.h:
	* X3DRenderer.cpp:
	* PointingDevice.cpp:
	* LOD.h:
	* X3DNode.cpp:
	* X3DBrowserContext.h:
	* Switch.h:
	* BindableNodeList.h:
	* X3DBrowserContext.cpp:
	* Layer.cpp:
	* LOD.cpp:
	* BindableNodeList.cpp:
	* Inline.h:
	* Anchor.h:
	* Switch.cpp:
	* LayerSet.h:
	* Viewport.h:
	* X3DShapeNode.h:
	* X3DExecutionContext.h:
	* LayoutLayer.h:
	* Transform.h:
	* LayerSet.cpp:
	* Anchor.cpp:
	* Viewport.cpp:
	* Inline.cpp:
	* Transform.cpp:
	* LayoutLayer.cpp:
	* X3DShapeNode.cpp:
	* Billboard.h:
	* X3DLayerNode.h:
	* Billboard.cpp:
	* X3DLayerNode.cpp:
	* X3DGroupingNode.h:
	* X3DPrototypeInstance.h:
	* X3DGroupingNode.cpp:
	* X3DPrototypeInstance.cpp: 

2013-01-03  Holger Seelig  <holger.seelig@yahoo.de>

	* Route.cpp:
	* X3DExecutionContext.cpp: 

2013-01-03  Holger Seelig  <holger.seelig@yahoo.de>

	* Route.h:
	* Route.cpp:
	* X3DChildObject.h:
	* TimeSensor.cpp:
	* X3DExecutionContext.h:
	* LayerSet.cpp:
	* SupportedNodes.cpp:
	* X3DExecutionContext.cpp:
	* SupportedFields.cpp:
	* SupportedProfiles.cpp:
	* X3DLayerNode.cpp:
	* jsBrowser.cpp:
	* SupportedComponents.cpp:
	* X3DUrlObject.cpp:
	* X3DPrototypeInstance.cpp:
	* NavigationInfo.cpp:
	* X3DViewpointNode.cpp:
	* Background.cpp: 

2013-01-03  Holger Seelig  <holger.seelig@yahoo.de>

	* Surface.h:
	* Scene.h:
	* SFImage.cpp:
	* Scene.cpp:
	* X3DWidget.h:
	* Surface.cpp:
	* X3DChildObject.h:
	* X3DWidget.cpp:
	* X3DBaseNode.cpp:
	* X3DScene.cpp:
	* X3DBrowser.cpp:
	* X3DChildObject.cpp:
	* ExternProto.cpp:
	* GarbargeCollector.cpp:
	* X3DBrowserContext.cpp:
	* TimeSensor.cpp:
	* Viewport.h:
	* Script.cpp:
	* X3DExecutionContext.h:
	* Inline.cpp:
	* LayerSet.cpp:
	* X3DExecutionContext.cpp:
	* X3DLayerNode.h:
	* jsBrowser.h:
	* X3DLayerNode.cpp:
	* X3DViewportNode.h:
	* jsBrowser.cpp:
	* X3DPrototypeInstance.h:
	* NavigationInfo.h:
	* X3DUrlObject.cpp:
	* X3DPrototypeInstance.cpp:
	* NavigationInfo.cpp:
	* X3DViewpointNode.h:
	* X3DViewpointNode.cpp:
	* Background.h:
	* Background.cpp:
	* X3DBackgroundNode.h: 

2012-12-31  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DScene.cpp:
	* Viewpoint.cpp:
	* Fog.h:
	* GeoViewpoint.cpp:
	* NavigationInfo.h:
	* X3DUrlObject.cpp:
	* Fog.cpp:
	* OrthoViewpoint.cpp:
	* X3DViewpointNode.h:
	* NavigationInfo.cpp:
	* X3DViewpointNode.cpp:
	* Background.cpp:
	* X3DBackgroundNode.h:
	* TextureBackground.cpp:
	* X3DBackgroundNode.cpp: 

2012-12-30  Holger Seelig  <holger.seelig@yahoo.de>

	* ExamineViewer.cpp:
	* Viewpoint.h:
	* Viewpoint.cpp:
	* GeoViewpoint.h:
	* GeoViewpoint.cpp:
	* OrthoViewpoint.h:
	* X3DViewpointNode.h:
	* OrthoViewpoint.cpp:
	* X3DViewpointNode.cpp: 

2012-12-29  Holger Seelig  <holger.seelig@yahoo.de>

	* ExamineViewer.cpp:
	* Viewpoint.h:
	* Viewpoint.cpp:
	* GeoViewpoint.cpp:
	* OrthoViewpoint.h:
	* X3DViewpointNode.h:
	* OrthoViewpoint.cpp:
	* X3DViewpointNode.cpp: 

2012-12-28  Holger Seelig  <holger.seelig@yahoo.de>

	* ExamineViewer.h:
	* X3DRenderer.cpp:
	* ExamineViewer.cpp:
	* Viewpoint.cpp:
	* X3DLayerNode.cpp:
	* OrthoViewpoint.h:
	* OrthoViewpoint.cpp:
	* X3DViewpointNode.h:
	* X3DViewpointNode.cpp: 

2012-12-27  Holger Seelig  <holger.seelig@yahoo.de>

	* BindableNodeStack.h:
	* Viewpoint.h:
	* Transform.cpp:
	* Viewpoint.cpp:
	* GeoViewpoint.h:
	* X3DLayerNode.cpp:
	* GeoViewpoint.cpp:
	* OrthoViewpoint.h:
	* X3DViewpointNode.h:
	* OrthoViewpoint.cpp:
	* X3DViewpointNode.cpp: 

2012-12-24  Holger Seelig  <holger.seelig@yahoo.de>

	* Parser.h:
	* Surface.h:
	* Parser.cpp:
	* X3DBaseNode.h:
	* Surface.cpp:
	* X3DBrowser.h:
	* X3DBaseNode.cpp:
	* X3DBrowser.cpp:
	* ExamineViewer.h:
	* ExamineViewer.cpp:
	* X3DNode.h:
	* X3DBrowserContext.h:
	* X3DNode.cpp:
	* TimeSensor.h:
	* X3DBrowserContext.cpp:
	* TimeSensor.cpp:
	* Viewpoint.h:
	* Transform.cpp:
	* X3DLayerNode.h:
	* Extrusion.cpp:
	* Viewpoint.cpp:
	* GeoViewpoint.h:
	* X3DLayerNode.cpp:
	* OrthoViewpoint.h:
	* GeoViewpoint.cpp:
	* X3DViewpointNode.h:
	* OrthoViewpoint.cpp:
	* NavigationInfo.cpp:
	* X3DViewpointNode.cpp:
	* ProximitySensor.cpp: 

2012-12-23  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DRenderer.cpp:
	* X3DNode.h:
	* X3DNode.cpp:
	* LOD.cpp:
	* Script.h:
	* BindableNodeStack.h:
	* Script.cpp:
	* Viewpoint.h:
	* Billboard.cpp:
	* Viewpoint.cpp:
	* X3DViewpointNode.cpp:
	* ProximitySensor.cpp:
	* VisibilitySensor.cpp:
	* X3DBackgroundNode.cpp: 

2012-12-22  Holger Seelig  <holger.seelig@yahoo.de>

	* Makefile.am:
	* libtitania-x3d.cproj:
	* ExamineViewer.cpp:
	* Script.h:
	* Script.cpp:
	* jsGlobals.h:
	* JavaScript.h:
	* jsGlobals.cpp:
	* jsBrowser.cpp:
	* JavaScript.cpp:
	* JavaScriptContext.h:
	* jsSFNode.cpp:
	* JavaScriptContext.cpp: 

2012-12-22  Holger Seelig  <holger.seelig@yahoo.de>

	* SFVec2.h:
	* SFVec3.h:
	* SFVec4.h:
	* SFMatrix3.h:
	* SFMatrix4.h:
	* Browser.cpp:
	* SFRotation4.h:
	* ExamineViewer.h:
	* ExamineViewer.cpp:
	* PointingDevice.cpp:
	* NavigationInfo.h:
	* X3DViewpointNode.h:
	* NavigationInfo.cpp:
	* X3DViewpointNode.cpp:
	* X3DBackgroundNode.cpp: 

2012-12-22  Holger Seelig  <holger.seelig@yahoo.de>

	* Parser.h:
	* Parser.cpp:
	* ExamineViewer.h:
	* ExamineViewer.cpp:
	* Viewpoint.cpp:
	* X3DBackgroundNode.cpp: 

2012-12-21  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* Matrix.h:
	* OpenGL.h:
	* ViewVolume.h:
	* ViewVolume.cpp:
	* ShapeContainer.cpp:
	* LOD.cpp:
	* X3DShapeNode.cpp:
	* Billboard.cpp:
	* X3DViewpointNode.h:
	* X3DViewpointNode.cpp:
	* ProximitySensor.cpp:
	* VisibilitySensor.cpp:
	* X3DBackgroundNode.cpp: 

2012-12-21  Holger Seelig  <holger.seelig@yahoo.de>

	* Makefile.am:
	* libtitania-x3d.cproj:
	* Router.h:
	* World.h:
	* Parser.cpp:
	* Scene.h:
	* Surface.h:
	* Router.cpp:
	* Scene.cpp:
	* World.cpp:
	* Proto.cpp:
	* X3DBaseNode.h:
	* X3DProto.h:
	* X3DBrowser.h:
	* X3DBaseNode.cpp:
	* X3DProto.cpp:
	* X3DBrowser.cpp:
	* ExamineViewer.h:
	* Text.cpp:
	* ExternProto.cpp:
	* ExamineViewer.cpp:
	* X3DRenderer.cpp:
	* LightContainer.h:
	* ShapeContainer.h:
	* ShapeContainer.cpp:
	* LayerSet.h:
	* LayerSet.cpp:
	* X3DShapeNode.cpp:
	* X3DLayerNode.h:
	* Viewpoint.cpp:
	* X3DLayerNode.cpp:
	* X3DViewpointNode.h:
	* X3DViewpointNode.cpp:
	* ProximitySensor.h:
	* ProximitySensor.cpp:
	* VisibilitySensor.cpp: 

2012-12-19  Holger Seelig  <holger.seelig@yahoo.de>

	* ExamineViewer.h:
	* ExamineViewer.cpp:
	* Viewpoint.cpp:
	* X3DViewpointNode.h:
	* X3DViewpointNode.cpp: 

2012-12-19  Holger Seelig  <holger.seelig@yahoo.de>

	* Makefile.am:
	* libtitania-x3d.cproj:
	* SFVec3.h:
	* SFVec4.h:
	* SFVec2.h:
	* MFNode.h:
	* SFNode.h:
	* SFTime.h:
	* Route.h:
	* SFImage.h:
	* X3DField.h:
	* SFColor.h:
	* Viewer.h:
	* SFString.h:
	* SFTime.cpp:
	* Parser.cpp:
	* Route.cpp:
	* Surface.h:
	* SFImage.cpp:
	* X3DScalar.h:
	* Viewer.cpp:
	* SFMatrix4.h:
	* SFMatrix3.h:
	* SFColor.cpp:
	* X3DBaseNode.h:
	* SFString.cpp:
	* X3DWidget.h:
	* X3DViewer.h:
	* Surface.cpp:
	* SFRotation4.h:
	* SFColorRGBA.h:
	* X3DBrowser.h:
	* X3DViewer.cpp:
	* X3DWidget.cpp:
	* X3DArrayField.h:
	* X3DBaseNode.cpp:
	* X3DBrowser.cpp:
	* SFColorRGBA.cpp:
	* X3DRenderer.h:
	* ExternProto.h:
	* ExamineViewer.h:
	* PointingDevice.h:
	* ExamineViewer.cpp:
	* X3DRenderer.cpp:
	* ExternProto.cpp:
	* PointingDevice.cpp:
	* X3DFieldDefinition.h:
	* X3DFieldDefinition.cpp:
	* MotionBlur.h:
	* MotionBlur.cpp:
	* X3DExecutionContext.cpp:
	* X3DLayerNode.cpp:
	* BrowserOptions.cpp:
	* X3DPrototypeInstance.cpp: 

2012-12-17  Holger Seelig  <holger.seelig@yahoo.de>

	* Makefile.am:
	* libtitania-x3d.cproj:
	* Surface.h:
	* Surface.cpp:
	* MotionBlur.h:
	* MotionBlur.cpp:
	* MotionBlur.h:
	* MotionBlur.cpp:
	* BrowserOptions.h:
	* BrowserOptions.cpp: 

2012-12-17  Holger Seelig  <holger.seelig@yahoo.de>

	* Text.cpp: 

2012-12-17  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DBaseNode.cpp:
	* X3DBrowser.cpp:
	* Text.cpp:
	* X3DLayerNode.cpp: 

2012-12-17  Holger Seelig  <holger.seelig@yahoo.de>

	* Makefile.am:
	* libtitania-x3d.cproj:
	* X3DType.h:
	* MFNode.h:
	* SFTime.h:
	* SFNode.h:
	* X3DType.cpp:
	* X3DObject.h:
	* X3DField.h:
	* NodeType.h:
	* X3DArray.h:
	* SFTime.cpp:
	* SFNode.cpp:
	* MFNode.cpp:
	* SFVec4.cpp:
	* Parser.cpp:
	* FieldType.h:
	* SFVec3.cpp:
	* SFVec2.cpp:
	* SFColor.cpp:
	* NodeType.cpp:
	* SFImage.cpp:
	* MFInt32.cpp:
	* X3DObject.cpp:
	* X3DConstants.h:
	* FieldType.cpp:
	* SFString.cpp:
	* X3DBaseNode.h:
	* SFMatrix4.cpp:
	* SFMatrix3.cpp:
	* X3DScalar.cpp:
	* X3DConstants.cpp:
	* X3DBaseNode.cpp:
	* NodeTypeArray.h:
	* ArrayFields.cpp:
	* SFRotation4.cpp:
	* SFColorRGBA.cpp:
	* NodeTypeArray.cpp:
	* X3DFieldDefinition.h:
	* Box.h:
	* Box.cpp:
	* Sphere.h:
	* Sphere.cpp:
	* BoxProperties.h:
	* BrowserOptions.h:
	* jsfield.cpp:
	* BoxProperties.cpp:
	* jsX3DField.h:
	* BrowserOptions.cpp:
	* jsX3DObject.h:
	* jsX3DField.cpp:
	* X3DPrototypeInstance.h:
	* jsX3DObject.cpp:
	* RenderingProperties.h:
	* X3DPrototypeInstance.cpp:
	* jsSFVec2.h:
	* jsSFVec4.h:
	* QuadSphereProperties.h:
	* QuadSphereProperties.h:
	* jsSFVec3.h:
	* X3DSpherePropertyNode.h:
	* BoxProperties.h:
	* X3DSpherePropertyNode.h:
	* QuadSphereProperties.cpp:
	* QuadSphereProperties.cpp:
	* jsSFNode.cpp:
	* BoxProperties.cpp:
	* X3DSpherePropertyNode.cpp:
	* jsSFColor.cpp:
	* jsSFMatrix4.h:
	* jsSFMatrix3.h:
	* jsSFImage.cpp:
	* X3DGeometryPropertyNode.h:
	* X3DSpherePropertyNode.cpp:
	* X3DGeometryPropertyNode.cpp:
	* jsArrayFields.h:
	* jsSFRotation.cpp:
	* jsSFColorRGBA.cpp:
	* jsX3DFieldDefinition.cpp:
	* QuadSphereProperties (Kopie).h:
	* QuadSphereProperties.h:
	* QuadSphereProperties.cpp:
	* X3DSpherePropertyNode.cpp:
	* X3DGeometryPropertyNode (Kopie).h: 

2012-12-13  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DOutput.h:
	* X3DOutput.cpp:
	* X3DBaseNode.h:
	* X3DBaseNode.cpp:
	* X3DArrayField.h:
	* NodeTypeArray.h:
	* NodeTypeArray.cpp:
	* X3DNode.cpp:
	* X3DInfoNode.cpp:
	* X3DChildNode.cpp:
	* X3DSoundNode.cpp:
	* X3DShapeNode.cpp:
	* X3DSensorNode.cpp:
	* X3DLayoutNode.cpp:
	* X3DBindableNode.cpp:
	* X3DPropertyNode.cpp:
	* X3DFontStyleNode.cpp:
	* X3DShaderNode.cpp:
	* X3DLayerNode.cpp:
	* X3DMaterialNode.cpp:
	* X3DLightNode.cpp:
	* X3DColorNode.cpp:
	* X3DGroupingNode.h:
	* X3DMetadataObject.cpp:
	* X3DUrlObject.cpp:
	* X3DAppearanceNode.cpp:
	* X3DChaserNode.cpp:
	* X3DScriptNode.cpp:
	* X3DDamperNode.cpp:
	* X3DNormalNode.cpp:
	* X3DSoundSourceNode.cpp:
	* X3DTextureNode.cpp:
	* X3DGroupingNode.cpp:
	* X3DViewportNode.cpp:
	* X3DGeometryNode.cpp:
	* X3DPickableObject.cpp:
	* X3DPickSensorNode.cpp:
	* X3DFollowerNode.cpp:
	* X3DBoundedObject.cpp:
	* X3DTimeDependentNode.cpp:
	* X3DPrototypeInstance.cpp:
	* X3DTexture2DNode.cpp:
	* X3DViewpointNode.cpp:
	* X3DCoordinateNode.cpp:
	* X3DAppearanceChildNode.cpp:
	* X3DTexture3DNode.cpp:
	* X3DTriggerNode.cpp:
	* X3DNurbsControlCurveNode.cpp:
	* X3DVertexAttributeNode.cpp:
	* X3DNetworkSensorNode.cpp:
	* X3DParametricGeometryNode.cpp:
	* X3DSequencerNode.cpp:
	* X3DInterpolatorNode.cpp:
	* X3DNurbsSurfaceGeometryNode.cpp:
	* X3DComposedGeometryNode.cpp:
	* X3DTextureTransformNode.cpp:
	* X3DFogObject.cpp:
	* X3DGeometricPropertyNode.cpp:
	* X3DRigidJointNode.cpp:
	* X3DTextureCoordinateNode.cpp:
	* X3DProgrammableShaderObject.cpp:
	* X3DKeyDeviceSensorNode.cpp:
	* X3DBackgroundNode.cpp:
	* X3DParticleEmitterNode.cpp:
	* X3DDragSensorNode.cpp:
	* X3DNBodyCollidableNode.cpp:
	* X3DTouchSensorNode.cpp:
	* X3DProductStructureChildNode.cpp:
	* X3DEnvironmentTextureNode.cpp:
	* X3DParticlePhysicsModelNode.cpp:
	* X3DNBodyCollisionSpaceNode.cpp:
	* X3DEnvironmentalSensorNode.cpp:
	* X3DPointingDeviceSensorNode.cpp: 

2012-12-12  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DConstants.h:
	* Generator.cpp:
	* X3DNode.h:
	* X3DGroupingNode.h:
	* GeoMetadata.cpp:
	* X3DGroupingNode.cpp: 

2012-12-12  Holger Seelig  <holger.seelig@yahoo.de>

	* SFNode.h:
	* X3DBaseNode.h:
	* World.cpp:
	* Scene.cpp:
	* X3DArrayField.h:
	* X3DBaseNode.cpp:
	* X3DBrowser.cpp:
	* MotionBlur.cpp:
	* Text.cpp:
	* ExternProto.cpp:
	* Shape.cpp:
	* Sound.cpp:
	* Layout.cpp:
	* SignalPdu.cpp:
	* FieldDefinitionArray.h:
	* Layer.cpp:
	* LOD.cpp:
	* NurbsSet.cpp:
	* WorldInfo.cpp:
	* Group.cpp:
	* FontStyle.cpp:
	* Box.cpp:
	* Material.cpp:
	* ReceiverPdu.cpp:
	* Cone.cpp:
	* Contour2D.cpp:
	* Switch.cpp:
	* Color.cpp:
	* TimeSensor.cpp:
	* AudioClip.cpp:
	* FieldDefinitionArray.cpp:
	* Appearance.cpp:
	* MetadataSet.cpp:
	* Arc2D.cpp:
	* HAnimSite.cpp:
	* NurbsCurve.cpp:
	* Normal.cpp:
	* Script.cpp:
	* LayerSet.cpp:
	* Viewport.cpp:
	* HAnimJoint.cpp:
	* MetadataBool.cpp:
	* Anchor.cpp:
	* Disk2D.cpp:
	* Inline.cpp:
	* GeoLOD.cpp:
	* Sphere.cpp:
	* LineSet.cpp:
	* ScreenGroup.cpp:
	* LayoutLayer.cpp:
	* ShaderPart.cpp:
	* SpotLight.cpp:
	* PointSet.cpp:
	* Transform.cpp:
	* LayoutGroup.cpp:
	* NurbsCurve2D.cpp:
	* EspduTransform.cpp:
	* MetadataFloat.cpp:
	* TransmitterPdu.cpp:
	* MetadataString.cpp:
	* QuadSet.cpp:
	* HAnimSegment.cpp:
	* CADPart.cpp:
	* PointLight.cpp:
	* Cylinder.cpp:
	* Circle2D.cpp:
	* ClipPlane.cpp:
	* ColorRGBA.cpp:
	* CADFace.cpp:
	* MetadataDouble.cpp:
	* FillProperties.cpp:
	* GeoOrigin.cpp:
	* CADLayer.cpp:
	* LineProperties.cpp:
	* MetadataInteger.cpp:
	* StaticGroup.cpp:
	* HAnimHumanoid.cpp:
	* Coordinate.cpp:
	* Collision.cpp:
	* Extrusion.cpp:
	* Viewpoint.cpp:
	* Billboard.cpp:
	* DISEntityManager.cpp:
	* TriangleSet.cpp:
	* LoadSensor.cpp:
	* ArcClose2D.cpp:
	* Polyline2D.cpp:
	* ShaderProgram.cpp:
	* PickableGroup.cpp:
	* HAnimDisplacer.cpp:
	* ColorDamper.cpp:
	* ProgramShader.cpp:
	* MultiTexture.cpp:
	* ImageTexture.cpp:
	* CoordinateDouble.cpp:
	* MovieTexture.cpp:
	* LinePickSensor.cpp:
	* PixelTexture.cpp:
	* PackagedShader.cpp:
	* ScreenFontStyle.cpp:
	* ComposedShader.cpp:
	* TwoSidedMaterial.cpp:
	* BrowserOptions.cpp:
	* GeoMetadata.cpp:
	* GeoLocation.cpp:
	* ScalarChaser.cpp:
	* Polypoint2D.cpp:
	* Rectangle2D.cpp:
	* GeoViewpoint.cpp:
	* GeoTransform.cpp:
	* ContourPolyline2D.cpp:
	* NurbsSwungSurface.cpp:
	* PointPickSensor.cpp:
	* NurbsPatchSurface.cpp:
	* NurbsSweptSurface.cpp:
	* CADAssembly.cpp:
	* ElevationGrid.cpp:
	* DISEntityTypeMapping.cpp:
	* Fog.cpp:
	* GeoCoordinate.cpp:
	* X3DGroupingNode.cpp:
	* Contact.cpp:
	* PositionChaser.cpp:
	* VolumePickSensor.cpp:
	* PositionDamper.cpp:
	* IndexedLineSet.cpp:
	* TriangleFanSet.cpp:
	* TriangleSet2D.cpp:
	* NavigationInfo.cpp:
	* OrthoViewpoint.cpp:
	* ViewpointGroup.cpp:
	* IndexedFaceSet.cpp:
	* BrowserProperties.cpp:
	* NurbsTrimmedSurface.cpp:
	* DirectionalLight.cpp:
	* GeoTouchSensor.cpp:
	* X3DPrototypeInstance.cpp:
	* KeySensor.cpp:
	* TexCoordDamper2D.cpp:
	* PositionChaser2D.cpp:
	* TriangleStripSet.cpp:
	* IndexedQuadSet.cpp:
	* ImageTexture3D.cpp:
	* PixelTexture3D.cpp:
	* PositionDamper2D.cpp:
	* RigidBody.cpp:
	* BallJoint.cpp:
	* TimeTrigger.cpp:
	* CoordinateDamper.cpp:
	* TextureTransform.cpp:
	* OrientationChaser.cpp:
	* TextureCoordinate.cpp:
	* OrientationDamper.cpp:
	* PrimitivePickSensor.cpp:
	* EaseInEaseOut.cpp:
	* TextureProperties.cpp:
	* ConeEmitter.cpp:
	* MotorJoint.cpp:
	* GeoElevationGrid.cpp:
	* RenderingProperties.cpp:
	* IndexedTriangleSet.cpp:
	* FloatVertexAttribute.cpp:
	* SliderJoint.cpp:
	* PointEmitter.cpp:
	* StringSensor.cpp:
	* NurbsTextureCoordinate.cpp:
	* BooleanFilter.cpp:
	* BooleanToggle.cpp:
	* QuadSphereProperties.cpp:
	* BooleanTrigger.cpp:
	* ComposedTexture3D.cpp:
	* IntegerTrigger.cpp:
	* GeoProximitySensor.cpp:
	* LocalFog.cpp:
	* VolumeEmitter.cpp:
	* TextureTransform3D.cpp:
	* NurbsSurfaceInterpolator.cpp:
	* Matrix4VertexAttribute.cpp:
	* ParticleSystem.cpp:
	* Matrix3VertexAttribute.cpp:
	* SurfaceEmitter.cpp:
	* TextureCoordinate3D.cpp:
	* TextureCoordinate4D.cpp:
	* BooleanSequencer.cpp:
	* ColorInterpolator.cpp:
	* UniversalJoint.cpp:
	* IntegerSequencer.cpp:
	* MultiTextureTransform.cpp:
	* PolylineEmitter.cpp:
	* IndexedTriangleFanSet.cpp:
	* CollisionSpace.cpp:
	* Background.cpp:
	* NurbsPositionInterpolator.cpp:
	* ScalarInterpolator.cpp:
	* NormalInterpolator.cpp:
	* PlaneSensor.cpp:
	* WindPhysicsModel.cpp:
	* CollisionSensor.cpp:
	* ExplosionEmitter.cpp:
	* TouchSensor.cpp:
	* MultiTextureCoordinate.cpp:
	* CollidableShape.cpp:
	* SphereSensor.cpp:
	* CollidableOffset.cpp:
	* IndexedTriangleStripSet.cpp:
	* GeoPositionInterpolator.cpp:
	* NurbsOrientationInterpolator.cpp:
	* FogCoordinate.cpp:
	* PositionInterpolator.cpp:
	* BoundedPhysicsModel.cpp:
	* ProximitySensor.cpp:
	* CylinderSensor.cpp:
	* GravityPhysicsModel.cpp:
	* TransformSensor.cpp:
	* TextureTransformMatrix3D.cpp:
	* PositionInterpolator2D.cpp:
	* VisibilitySensor.cpp:
	* TextureCoordinateGenerator.cpp:
	* CoordinateInterpolator.cpp:
	* CollisionCollection.cpp:
	* RigidBodyCollection.cpp:
	* ImageCubeMapTexture.cpp:
	* SingleAxisHingeJoint.cpp:
	* DoubleAxisHingeJoint.cpp:
	* OrientationInterpolator.cpp:
	* CoordinateInterpolator2D.cpp:
	* TextureBackground.cpp:
	* SplineScalarInterpolator.cpp:
	* ComposedCubeMapTexture.cpp:
	* GeneratedCubeMapTexture.cpp:
	* SplinePositionInterpolator.cpp:
	* SplinePositionInterpolator2D.cpp:
	* SquadOrientationInterpolator.cpp: 

2012-12-10  Holger Seelig  <holger.seelig@yahoo.de>

	* Makefile.am:
	* findNode:
	* libtitania-x3d.cproj:
	* X3DBase.h:
	* X3DObject.h:
	* X3DArray.h:
	* X3DField.h:
	* ObjectSet.h:
	* X3DBase.cpp:
	* X3DRoute.h:
	* Router.cpp:
	* X3DContext.h:
	* BaseNodeSet.h:
	* ObjectSet.cpp:
	* SFMatrix4.h:
	* X3DObject.cpp:
	* X3DBaseNode.h:
	* X3DContext.cpp:
	* SFMatrix4.cpp:
	* BaseNodeSet.cpp:
	* X3DChildObject.h:
	* ChildObjectSet.h:
	* X3DBaseNode.cpp:
	* X3DArrayField.h:
	* X3DBrowser.cpp:
	* X3DChildObject.cpp:
	* ChildObjectSet.cpp:
	* GarbageCollector.h:
	* Text.cpp:
	* X3DNode.h:
	* FieldDefinitionSet.h:
	* X3DFieldDefinition.h:
	* GarbargeCollector.cpp:
	* X3DFieldDefinition.cpp:
	* jsFields.h:
	* X3DLayerNode.h:
	* jsfield.cpp:
	* X3DGroupingNode.h:
	* jsX3DObject.h:
	* X3DGroupingNode.cpp:
	* jsX3DObject.cpp:
	* jsX3DArrayField.h:
	* jsMFTime.h:
	* jsMFBool.h:
	* jsSFNode.h:
	* jsSFVec2.h:
	* jsMFNode.h:
	* jsSFVec4.h:
	* jsSFImage.h:
	* jsMFImage.h:
	* jsMFVec4f.h:
	* jsMFVec2d.h:
	* jsMFVec3f.h:
	* jsMFColor.h:
	* jsMFFloat.h:
	* jsMFInt32.h:
	* jsMFVec3d.h:
	* jsMFVec2f.h:
	* jsMFVec4d.h:
	* jsSFColor.h:
	* jsMFNode.cpp:
	* jsMFString.h:
	* jsMFDouble.h:
	* jsX3DArrayField.cpp:
	* jsMFBool.cpp:
	* jsMFTime.cpp:
	* jsSFNode.cpp:
	* jsMFVec4f.cpp:
	* jsMFVec2d.cpp:
	* jsMFImage.cpp:
	* jsMFVec3d.cpp:
	* jsMFVec3f.cpp:
	* jsMFVec2f.cpp:
	* jsMFVec4d.cpp:
	* jsSFColor.cpp:
	* jsSFImage.cpp:
	* jsSFMatrix3.h:
	* jsMFInt32.cpp:
	* jsSFMatrix4.h:
	* jsX3DScalar.h:
	* jsMFFloat.cpp:
	* jsMFColor.cpp:
	* jsSFRotation.h:
	* jsMFMatrix3d.h:
	* jsMFString.cpp:
	* jsSFMatrix4f.h:
	* jsVrmlMatrix.h:
	* jsMFDouble.cpp:
	* jsSFMatrix4d.h:
	* jsMFMatrix4f.h:
	* jsMFRotation.h:
	* jsMFMatrix4d.h:
	* jsMFMatrix3f.h:
	* jsSFMatrix4.cpp:
	* jsMFColorRGBA.h:
	* jsSFColorRGBA.h:
	* jsSFMatrix3.cpp:
	* jsSFMatrix4f.cpp:
	* jsMFMatrix4d.cpp:
	* jsMFMatrix3f.cpp:
	* jsVrmlMatrix.cpp:
	* jsSFRotation.cpp:
	* jsMFRotation.cpp:
	* jsMFMatrix3d.cpp:
	* jsSFMatrix4d.cpp:
	* jsMFMatrix4f.cpp:
	* jsArrayFields.cpp:
	* jsSFColorRGBA.cpp:
	* jsMFColorRGBA.cpp:
	* jsMFBool (Kopie).h: 

2012-12-07  Holger Seelig  <holger.seelig@yahoo.de>

	* Makefile.am:
	* libtitania-x3d.cproj:
	* jsFields.h:
	* jsGlobals.cpp:
	* jsSFVec2.h:
	* jsSFVec4.h:
	* jsSFMatrix3.h:
	* jsSFMatrix3f.h:
	* jsSFMatrix3d.h:
	* jsSFRotation.h:
	* jsMFMatrix3f.h:
	* jsMFMatrix3d.h:
	* jsSFMatrix3.cpp:
	* jsSFMatrix3f.cpp:
	* jsSFMatrix3d.cpp: 

2012-12-07  Holger Seelig  <holger.seelig@yahoo.de>

	* Makefile.am:
	* libtitania-x3d.cproj:
	* jsFields.h:
	* X3DTexture2DNode.cpp:
	* jsSFVec4.h:
	* jsSFVec2.h:
	* jsSFVec3f.h:
	* jsSFVec4d.h:
	* jsMFVec4f.h:
	* jsSFVec2d.h:
	* jsSFVec2f.h:
	* jsSFVec3d.h:
	* jsMFVec4d.h:
	* jsMFVec2f.h:
	* jsMFVec2d.h:
	* jsSFVec4f.h:
	* jsMFVec3f.h:
	* jsMFVec3d.h:
	* jsSFVec4.cpp:
	* jsSFVec3.cpp:
	* jsSFVec2.cpp:
	* jsSFVec3d.cpp:
	* jsSFVec2f.cpp:
	* jsSFVec4f.cpp:
	* jsSFVec3f.cpp:
	* jsSFVec2d.cpp:
	* jsSFVec4d.cpp:
	* jsSFMatrix4d.cpp:
	* jsSFMatrix3f.cpp:
	* jsSFMatrix3d.cpp:
	* jsVrmlMatrix.cpp:
	* jsSFRotation.cpp:
	* jsSFMatrix4f.cpp:
	* jsSFVec3f (Kopie).h: 

2012-12-06  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj: 

2012-12-06  Holger Seelig  <holger.seelig@yahoo.de>

	* Makefile.am:
	* findNode:
	* Hit.h:
	* X3DType.h:
	* X3DBase.h:
	* X3DInput.h:
	* MFNode.h:
	* Route.h:
	* SFNode.h:
	* Parser.h:
	* X3DObject.h:
	* NodeType.h:
	* X3DType.cpp:
	* X3DOutput.h:
	* Router.h:
	* X3DBase.cpp:
	* X3DArray.h:
	* Browser.h:
	* Route.cpp:
	* Proto.h:
	* MFNode.cpp:
	* World.h:
	* Scene.h:
	* FieldType.h:
	* Parser.cpp:
	* SFNode.cpp:
	* X3DInput.cpp:
	* X3DOutput.cpp:
	* X3DBaseNode.h:
	* X3DObject.cpp:
	* Router.cpp:
	* X3DParser.h:
	* X3DRoute.h:
	* BaseNodeSet.h:
	* X3DContext.h:
	* Browser.cpp:
	* World.cpp:
	* Proto.cpp:
	* Scene.cpp:
	* X3DBaseNode.h:
	* X3DBasicNode.h:
	* X3DProto.h:
	* BaseNodeSet.cpp:
	* X3DBaseNode.cpp:
	* X3DContext.cpp:
	* X3DBrowser.h:
	* MotionBlur.h:
	* X3DParser.cpp:
	* X3DChildObject.h:
	* X3DBaseNode.cpp:
	* X3DArrayField.h:
	* NodeArray.h:
	* X3DConstants.cpp:
	* X3DBrowser.cpp:
	* Text.h:
	* X3DBasicNode.cpp:
	* BasicNodeArray.h:
	* X3DProto.cpp:
	* MotionBlur.cpp:
	* X3DChildObject.cpp:
	* NodeArray.cpp:
	* GarbageCollector.h:
	* ExternProto.h:
	* Generator.h:
	* Sound.h:
	* Shape.h:
	* PointingDevice.h:
	* Text.cpp:
	* BasicNodeArray.cpp:
	* X3DNode.h:
	* Generator.cpp:
	* ExternProto.cpp:
	* SignalPdu.h:
	* Layout.h:
	* Sound.cpp:
	* GarbargeCollector.cpp:
	* Shape.cpp:
	* X3DFieldDefinition.h:
	* Layer.h:
	* NurbsSet.h:
	* Group.h:
	* Material.h:
	* LOD.h:
	* WorldInfo.h:
	* ProfileInfo.h:
	* X3DNode.cpp:
	* Box.h:
	* FontStyle.h:
	* Switch.h:
	* Contour2D.h:
	* Color.h:
	* Layout.cpp:
	* X3DFieldDefinition.cpp:
	* AudioClip.h:
	* TimeSensor.h:
	* ReceiverPdu.h:
	* Cone.h:
	* SignalPdu.cpp:
	* Box.cpp:
	* Arc2D.h:
	* Group.cpp:
	* Layer.cpp:
	* HAnimSite.h:
	* Material.cpp:
	* Appearance.h:
	* FontStyle.cpp:
	* ProfileInfo.cpp:
	* ComponentInfo.h:
	* NurbsSet.cpp:
	* NurbsCurve.h:
	* LOD.cpp:
	* Script.h:
	* Normal.h:
	* MetadataSet.h:
	* WorldInfo.cpp:
	* X3DBrowserContext.cpp:
	* GeoLOD.h:
	* Color.cpp:
	* Switch.cpp:
	* LineSet.h:
	* Sphere.h:
	* Cone.cpp:
	* TimeSensor.cpp:
	* Disk2D.h:
	* SupportedNodes.h:
	* ReceiverPdu.cpp:
	* AudioClip.cpp:
	* HAnimJoint.h:
	* Viewport.h:
	* Anchor.h:
	* Contour2D.cpp:
	* MetadataBool.h:
	* LayerSet.h:
	* Inline.h:
	* ScreenGroup.h:
	* TransmitterPdu.h:
	* SpotLight.h:
	* ComponentInfo.cpp:
	* LayoutGroup.h:
	* LayoutLayer.h:
	* EspduTransform.h:
	* Normal.cpp:
	* PointSet.h:
	* Transform.h:
	* HAnimSite.cpp:
	* Script.cpp:
	* NurbsCurve2D.h:
	* NurbsCurve.cpp:
	* ShaderPart.h:
	* Appearance.cpp:
	* JavaScriptEngine.cpp:
	* MetadataSet.cpp:
	* X3DExecutionContext.h:
	* MetadataFloat.h:
	* Arc2D.cpp:
	* MetadataString.h:
	* HAnimSegment.h:
	* PointLight.h:
	* Sphere.cpp:
	* GeoLOD.cpp:
	* CADPart.h:
	* MetadataDouble.h:
	* ColorRGBA.h:
	* ClipPlane.h:
	* Inline.cpp:
	* MetadataBool.cpp:
	* QuadSet.h:
	* Anchor.cpp:
	* LineSet.cpp:
	* CADFace.h:
	* Viewport.cpp:
	* HAnimJoint.cpp:
	* Cylinder.h:
	* Circle2D.h:
	* SupportedNodes.cpp:
	* LayerSet.cpp:
	* Disk2D.cpp:
	* Viewpoint.h:
	* LayoutLayer.cpp:
	* DISEntityManager.h:
	* MetadataInteger.h:
	* PointSet.cpp:
	* StaticGroup.h:
	* MetadataFloat.cpp:
	* Transform.cpp:
	* Coordinate.h:
	* LayoutGroup.cpp:
	* Collision.h:
	* FillProperties.h:
	* HAnimHumanoid.h:
	* SupportedFields.cpp:
	* SpotLight.cpp:
	* TransmitterPdu.cpp:
	* Extrusion.h:
	* LineProperties.h:
	* X3DExecutionContext.cpp:
	* NurbsCurve2D.cpp:
	* EspduTransform.cpp:
	* Billboard.h:
	* GeoOrigin.h:
	* ScreenGroup.cpp:
	* ShaderPart.cpp:
	* CADLayer.h:
	* LoadSensor.h:
	* PointLight.cpp:
	* CADPart.cpp:
	* CADFace.cpp:
	* MetadataDouble.cpp:
	* ColorDamper.h:
	* QuadSet.cpp:
	* HAnimSegment.cpp:
	* Circle2D.cpp:
	* MetadataString.cpp:
	* TriangleSet.h:
	* ProgramShader.h:
	* Cylinder.cpp:
	* ShaderProgram.h:
	* ArcClose2D.h:
	* PickableGroup.h:
	* ColorRGBA.cpp:
	* ClipPlane.cpp:
	* Polyline2D.h:
	* HAnimDisplacer.h:
	* ScreenFontStyle.h:
	* TwoSidedMaterial.h:
	* MultiTexture.h:
	* ImageTexture.h:
	* MovieTexture.h:
	* PixelTexture.h:
	* DISEntityManager.cpp:
	* CADLayer.cpp:
	* X3DMetadataObject.h:
	* MetadataInteger.cpp:
	* Viewpoint.cpp:
	* Collision.cpp:
	* LinePickSensor.h:
	* jsfield.cpp:
	* Coordinate.cpp:
	* CoordinateDouble.h:
	* FillProperties.cpp:
	* LineProperties.cpp:
	* Billboard.cpp:
	* ComposedShader.h:
	* PackagedShader.h:
	* Extrusion.cpp:
	* GeoMetadata.h:
	* StaticGroup.cpp:
	* GeoOrigin.cpp:
	* GeoLocation.h:
	* HAnimHumanoid.cpp:
	* Polypoint2D.h:
	* ScalarChaser.h:
	* Rectangle2D.h:
	* PickableGroup.cpp:
	* JavaScript.h:
	* Polyline2D.cpp:
	* ArcClose2D.cpp:
	* LoadSensor.cpp:
	* ShaderProgram.cpp:
	* NurbsSwungSurface.h:
	* TriangleSet.cpp:
	* NurbsSweptSurface.h:
	* ContourPolyline2D.h:
	* ColorDamper.cpp:
	* NurbsPatchSurface.h:
	* PointPickSensor.h:
	* GeoTransform.h:
	* X3DUrlObject.h:
	* ProgramShader.cpp:
	* CADAssembly.h:
	* HAnimDisplacer.cpp:
	* GeoViewpoint.h:
	* ScalarChaser.cpp:
	* MultiTexture.cpp:
	* ElevationGrid.h:
	* TwoSidedMaterial.cpp:
	* TriangleSet2D.h:
	* DISEntityTypeMapping.h:
	* X3DMetadataObject.cpp:
	* MovieTexture.cpp:
	* ImageTexture.cpp:
	* LinePickSensor.cpp:
	* IndexedLineSet.h:
	* ScreenFontStyle.cpp:
	* PackagedShader.cpp:
	* jsBrowser.cpp:
	* jsX3DObject.h:
	* Contact.h:
	* BrowserOptions.cpp:
	* TriangleFanSet.h:
	* ComposedShader.cpp:
	* Fog.h:
	* Polypoint2D.cpp:
	* PixelTexture.cpp:
	* Rectangle2D.cpp:
	* PositionDamper.h:
	* VolumePickSensor.h:
	* GeoLocation.cpp:
	* CoordinateDouble.cpp:
	* GeoMetadata.cpp:
	* PositionChaser.h:
	* GeoCoordinate.h:
	* X3DUrlObject.cpp:
	* GeoViewpoint.cpp:
	* X3DBoundedObject.h:
	* GeoTouchSensor.h:
	* GeoTransform.cpp:
	* X3DPickSensorNode.h:
	* PointPickSensor.cpp:
	* IndexedFaceSet.h:
	* X3DPickableObject.h:
	* ContourPolyline2D.cpp:
	* JavaScript.cpp:
	* DirectionalLight.h:
	* OrthoViewpoint.h:
	* NavigationInfo.h:
	* X3DPrototypeInstance.h:
	* NurbsSweptSurface.cpp:
	* CosmoWorlds.wrl:
	* NurbsSwungSurface.cpp:
	* NurbsPatchSurface.cpp:
	* NurbsTrimmedSurface.h:
	* KeySensor.h:
	* ViewpointGroup.h:
	* CADAssembly.cpp:
	* PositionDamper.cpp:
	* IndexedLineSet.cpp:
	* PositionChaser2D.h:
	* TriangleFanSet.cpp:
	* Contact.cpp:
	* BallJoint.h:
	* VolumePickSensor.cpp:
	* TriangleStripSet.h:
	* jsX3DObject.cpp:
	* IndexedQuadSet.h:
	* Fog.cpp:
	* RigidBody.h:
	* TimeTrigger.h:
	* GeoCoordinate.cpp:
	* CoordinateDamper.h:
	* PositionChaser.cpp:
	* DISEntityTypeMapping.cpp:
	* PixelTexture3D.h:
	* ElevationGrid.cpp:
	* TexCoordDamper2D.h:
	* TextureTransform.h:
	* ImageTexture3D.h:
	* PositionDamper2D.h:
	* TriangleSet2D.cpp:
	* OrthoViewpoint.cpp:
	* ViewpointGroup.cpp:
	* NavigationInfo.cpp:
	* DirectionalLight.cpp:
	* OrientationChaser.h:
	* GeoTouchSensor.cpp:
	* MotorJoint.h:
	* BrowserProperties.cpp:
	* KeySensor.cpp:
	* ConeEmitter.h:
	* TextureCoordinate.h:
	* TextureProperties.h:
	* OrientationDamper.h:
	* GeoElevationGrid.h:
	* PrimitivePickSensor.h:
	* NurbsTrimmedSurface.cpp:
	* X3DPickableObject.cpp:
	* X3DPrototypeInstance.cpp:
	* IndexedFaceSet.cpp:
	* EaseInEaseOut.h:
	* X3DBoundedObject.cpp:
	* PositionDamper2D.cpp:
	* TextureTransform.cpp:
	* PixelTexture3D.cpp:
	* ImageTexture3D.cpp:
	* BooleanToggle.h:
	* TexCoordDamper2D.cpp:
	* IndexedQuadSet.cpp:
	* CoordinateDamper.cpp:
	* FloatVertexAttribute.h:
	* X3DTexture3DNode.h:
	* jsX3DArrayField.h:
	* jsSFNode.h:
	* jsMFNode.h:
	* TimeTrigger.cpp:
	* PositionChaser2D.cpp:
	* RigidBody.cpp:
	* SliderJoint.h:
	* BooleanFilter.h:
	* NurbsTextureCoordinate.h:
	* PointEmitter.h:
	* TriangleStripSet.cpp:
	* BallJoint.cpp:
	* StringSensor.h:
	* IndexedTriangleSet.h:
	* ConeEmitter.cpp:
	* TextureProperties.cpp:
	* PrimitivePickSensor.cpp:
	* VolumeEmitter.h:
	* GeoElevationGrid.cpp:
	* TextureCoordinate.cpp:
	* IntegerTrigger.h:
	* OrientationChaser.cpp:
	* RenderingProperties.cpp:
	* BooleanTrigger.h:
	* EaseInEaseOut.cpp:
	* ComposedTexture3D.h:
	* OrientationDamper.cpp:
	* LocalFog.h:
	* GeoProximitySensor.h:
	* MotorJoint.cpp:
	* ParticleSystem.h:
	* Matrix4VertexAttribute.h:
	* PointEmitter.cpp:
	* SurfaceEmitter.h:
	* BooleanFilter.cpp:
	* TextureTransform3D.h:
	* jsSFNode.cpp:
	* StringSensor.cpp:
	* QuadSphereProperties.cpp:
	* jsMFNode.cpp:
	* BooleanToggle.cpp:
	* NurbsTextureCoordinate.cpp:
	* NurbsSurfaceInterpolator.h:
	* SliderJoint.cpp:
	* IndexedTriangleSet.cpp:
	* FloatVertexAttribute.cpp:
	* Matrix3VertexAttribute.h:
	* PolylineEmitter.h:
	* BooleanSequencer.h:
	* UniversalJoint.h:
	* ComposedTexture3D.cpp:
	* ColorInterpolator.h:
	* VolumeEmitter.cpp:
	* LocalFog.cpp:
	* TextureCoordinate4D.h:
	* MultiTextureTransform.h:
	* IntegerTrigger.cpp:
	* TextureCoordinate3D.h:
	* BooleanTrigger.cpp:
	* IndexedTriangleFanSet.h:
	* GeoProximitySensor.cpp:
	* IntegerSequencer.h:
	* jsSFVec2f.cpp:
	* jsSFVec2d.cpp:
	* Background.h:
	* jsSFVec3d.cpp:
	* jsSFVec4f.cpp:
	* jsSFVec4d.cpp:
	* jsSFVec3f.cpp:
	* jsSFImage.cpp:
	* NurbsPositionInterpolator.h:
	* jsSFColor.cpp:
	* CollisionSpace.h:
	* TextureTransform3D.cpp:
	* NurbsSurfaceInterpolator.cpp:
	* CollidableShape.h:
	* MultiTextureCoordinate.h:
	* ExplosionEmitter.h:
	* ScalarInterpolator.h:
	* Matrix4VertexAttribute.cpp:
	* Matrix3VertexAttribute.cpp:
	* PlaneSensor.h:
	* NormalInterpolator.h:
	* CollisionSensor.h:
	* SurfaceEmitter.cpp:
	* TouchSensor.h:
	* WindPhysicsModel.h:
	* ParticleSystem.cpp:
	* ColorInterpolator.cpp:
	* TextureCoordinate3D.cpp:
	* UniversalJoint.cpp:
	* CollidableOffset.h:
	* NurbsPositionInterpolator.cpp:
	* X3DNurbsSurfaceGeometryNode.h:
	* TextureCoordinate4D.cpp:
	* IntegerSequencer.cpp:
	* CollisionSpace.cpp:
	* BooleanSequencer.cpp:
	* IndexedTriangleFanSet.cpp:
	* MultiTextureTransform.cpp:
	* PolylineEmitter.cpp:
	* X3DFogObject.h:
	* SphereSensor.h:
	* IndexedTriangleStripSet.h:
	* Background.cpp:
	* NormalInterpolator.cpp:
	* jsSFMatrix3d.cpp:
	* jsSFMatrix3f.cpp:
	* X3DRigidJointNode.h:
	* jsSFMatrix4d.cpp:
	* ScalarInterpolator.cpp:
	* CollisionSensor.cpp:
	* NurbsOrientationInterpolator.h:
	* TouchSensor.cpp:
	* PlaneSensor.cpp:
	* WindPhysicsModel.cpp:
	* GeoPositionInterpolator.h:
	* CollidableShape.cpp:
	* MultiTextureCoordinate.cpp:
	* jsSFRotation.cpp:
	* ExplosionEmitter.cpp:
	* PositionInterpolator.h:
	* jsVrmlMatrix.cpp:
	* FogCoordinate.h:
	* jsSFMatrix4f.cpp:
	* CylinderSensor.h:
	* TransformSensor.h:
	* SphereSensor.cpp:
	* jsSFColorRGBA.cpp:
	* X3DProgrammableShaderObject.h:
	* IndexedTriangleStripSet.cpp:
	* ProximitySensor.h:
	* CollidableOffset.cpp:
	* BoundedPhysicsModel.h:
	* GravityPhysicsModel.h:
	* X3DFogObject.cpp:
	* TextureTransformMatrix3D.h:
	* GeoPositionInterpolator.cpp:
	* PositionInterpolator.cpp:
	* ImageCubeMapTexture.h:
	* PositionInterpolator2D.h:
	* NurbsOrientationInterpolator.cpp:
	* CollisionCollection.h:
	* jsX3DExecutionContext.cpp:
	* VisibilitySensor.h:
	* CoordinateInterpolator.h:
	* TextureCoordinateGenerator.h:
	* FogCoordinate.cpp:
	* RigidBodyCollection.h:
	* TransformSensor.cpp:
	* BoundedPhysicsModel.cpp:
	* DoubleAxisHingeJoint.h:
	* GravityPhysicsModel.cpp:
	* ProximitySensor.cpp:
	* SingleAxisHingeJoint.h:
	* X3DProgrammableShaderObject.cpp:
	* CylinderSensor.cpp:
	* OrientationInterpolator.h:
	* SplineScalarInterpolator.h:
	* CollisionCollection.cpp:
	* CoordinateInterpolator.cpp:
	* TextureTransformMatrix3D.cpp:
	* CoordinateInterpolator2D.h:
	* VisibilitySensor.cpp:
	* RigidBodyCollection.cpp:
	* TextureCoordinateGenerator.cpp:
	* TextureBackground.h:
	* PositionInterpolator2D.cpp:
	* ImageCubeMapTexture.cpp:
	* OrientationInterpolator.cpp:
	* SingleAxisHingeJoint.cpp:
	* ComposedCubeMapTexture.h:
	* DoubleAxisHingeJoint.cpp:
	* TextureBackground.cpp:
	* SplinePositionInterpolator.h:
	* CoordinateInterpolator2D.cpp:
	* GeneratedCubeMapTexture.h:
	* SplineScalarInterpolator.cpp:
	* ComposedCubeMapTexture.cpp:
	* GeneratedCubeMapTexture.cpp:
	* SquadOrientationInterpolator.h:
	* SplinePositionInterpolator2D.h:
	* SplinePositionInterpolator.cpp:
	* SquadOrientationInterpolator.cpp:
	* SplinePositionInterpolator2D.cpp: 

2012-12-05  Holger Seelig  <holger.seelig@yahoo.de>

	* MFNode.h:
	* X3DObject.h:
	* X3DArray.h:
	* Proto.h:
	* Parser.cpp:
	* X3DBaseNode.h:
	* Proto.cpp:
	* X3DProto.h:
	* X3DBaseNode.cpp:
	* X3DArrayField.h:
	* Text.h:
	* X3DBasicNode.cpp:
	* X3DBase (Kopie).h:
	* ExternProto.h:
	* Text.cpp:
	* ExternProto.cpp:
	* X3DExecutionContext.h:
	* X3DExecutionContext.cpp:
	* X3DShapeNode.cpp:
	* X3DFontStyleNode.h:
	* jsfield.cpp:
	* X3DFontStyleNode.cpp:
	* jsBrowser.cpp:
	* jsX3DObject.h:
	* X3DGroupingNode.cpp:
	* jsX3DObject.cpp:
	* X3DGeometryNode.cpp:
	* jsMFNode.h:
	* jsX3DArrayField.h:
	* jsMFTime.cpp:
	* jsSFNode.cpp:
	* jsMFBool.cpp:
	* jsMFNode.cpp:
	* jsMFVec3f.cpp:
	* jsMFVec4d.cpp:
	* jsMFVec4f.cpp:
	* jsMFImage.cpp:
	* jsMFInt32.cpp:
	* jsMFColor.cpp:
	* jsMFFloat.cpp:
	* jsMFVec2f.cpp:
	* jsMFVec3d.cpp:
	* jsMFVec2d.cpp:
	* jsMFString.cpp:
	* jsMFDouble.cpp:
	* jsMFMatrix4d.cpp:
	* jsMFMatrix3f.cpp:
	* jsMFMatrix3d.cpp:
	* jsMFRotation.cpp:
	* jsMFMatrix4f.cpp:
	* jsMFColorRGBA.cpp:
	* jsX3DExecutionContext.cpp: 

2012-12-03  Holger Seelig  <holger.seelig@yahoo.de>

	* Geometry.h:
	* Text.h:
	* Text.cpp:
	* jsX3DObject.cpp:
	* jsX3DFieldDefinition.h:
	* jsX3DExecutionContext.h:
	* jsX3DFieldDefinition.cpp:
	* jsX3DExecutionContext.cpp: 

2012-12-03  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* String.h:
	* Numbers.h:
	* SFString.h:
	* SFString.cpp:
	* Text.h:
	* Text.cpp:
	* FontStyle.h:
	* FontStyle.cpp:
	* Script.cpp:
	* Inline.cpp:
	* X3DFontStyleNode.h:
	* ScreenFontStyle.h:
	* BrowserOptions.h:
	* X3DFontStyleNode.cpp:
	* BrowserOptions.cpp:
	* jsGlobals.cpp:
	* ImageTexture.cpp:
	* ScreenFontStyle.cpp:
	* X3DUrlObject.cpp:
	* X3DGeometryNode.cpp:
	* RenderingProperties.h:
	* RenderingProperties.cpp: 

2012-12-01  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* X3DOutput.h:
	* X3DArray.h:
	* OpenGL.h:
	* X3DOutput.cpp:
	* Scene.cpp:
	* Browser.cpp:
	* X3DBrowser.h:
	* X3DBrowser.cpp:
	* Text.h:
	* Text.cpp:
	* GarbargeCollector.cpp:
	* FontStyle.h:
	* TimeSensor.h:
	* X3DBrowserContext.cpp:
	* FontStyle.cpp:
	* TimeSensor.cpp:
	* X3DFontStyleNode.h:
	* X3DUrlObject.h:
	* X3DUrlObject.cpp:
	* X3DBackgroundNode.cpp: 

2012-11-30  Holger Seelig  <holger.seelig@yahoo.de>

	* TimeSensor.h:
	* TimeSensor.cpp: 

2012-11-30  Holger Seelig  <holger.seelig@yahoo.de>

	* TimeSensor.cpp: 

2012-11-30  Holger Seelig  <holger.seelig@yahoo.de>

	* TimeSensor.h:
	* TimeSensor.cpp: 

2012-11-30  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DField.h:
	* PointSet.cpp:
	* IndexedLineSet.cpp:
	* X3DGeometryNode.cpp:
	* IndexedFaceSet.cpp: 

2012-11-29  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* X3DGeometryNode.cpp: 

2012-11-29  Holger Seelig  <holger.seelig@yahoo.de>

	* Makefile.am:
	* libtitania-x3d.md.pc:
	* libtitania-x3d.cproj:
	* SFTime.h:
	* X3DField.h:
	* SFTime.cpp:
	* Browser.cpp:
	* X3DBrowser.h:
	* X3DBrowser.cpp:
	* BasicNodeArray (Kopie).h:
	* TimeSensor.cpp:
	* X3DExecutionContext.h:
	* String.h:
	* PointSet.cpp:
	* jsstring.h:
	* String.cpp:
	* BrowserOptions.h:
	* jsfield.cpp:
	* jsstring.cpp:
	* jsBrowser.cpp:
	* BrowserOptions.cpp:
	* jsGlobals.cpp:
	* JavaScript.cpp:
	* X3DTexture2DNode.h:
	* jsX3DObject.cpp:
	* IndexedLineSet.cpp:
	* TextureProperties.h:
	* RenderingProperties.h:
	* IndexedFaceSet.cpp:
	* jsMFTime.h:
	* jsX3DArrayField.h:
	* jsMFBool.h:
	* X3DTexture2DNode.cpp:
	* jsMFVec3f.h:
	* jsMFVec4d.h:
	* jsMFVec3d.h:
	* TextureProperties.cpp:
	* jsMFVec2d.h:
	* jsMFVec2f.h:
	* jsMFVec4f.h:
	* jsMFImage.h:
	* jsMFFloat.h:
	* jsMFColor.h:
	* jsMFInt32.h:
	* RenderingProperties.cpp:
	* jsMFString.h:
	* jsMFTime.cpp:
	* jsSFNode.cpp:
	* jsMFNode.cpp:
	* jsMFDouble.h:
	* jsMFBool.cpp:
	* jsMFImage.cpp:
	* jsMFInt32.cpp:
	* jsMFFloat.cpp:
	* jsSFColor.cpp:
	* jsMFVec4f.cpp:
	* jsSFVec3f.cpp:
	* jsSFVec4d.cpp:
	* jsSFVec4f.cpp:
	* jsSFVec2d.cpp:
	* jsSFVec2f.cpp:
	* jsSFVec3d.cpp:
	* jsMFColor.cpp:
	* jsMFVec3d.cpp:
	* jsMFVec2d.cpp:
	* jsMFVec2f.cpp:
	* jsMFVec3f.cpp:
	* jsMFVec4d.cpp:
	* jsMFDouble.cpp:
	* jsMFMatrix3f.h:
	* jsMFMatrix4f.h:
	* jsMFRotation.h:
	* jsMFMatrix4d.h:
	* jsMFString.cpp:
	* jsMFMatrix3d.h:
	* jsMFColorRGBA.h:
	* jsMFMatrix3d.cpp:
	* jsVrmlMatrix.cpp:
	* jsMFMatrix4f.cpp:
	* jsSFMatrix3d.cpp:
	* jsMFMatrix4d.cpp:
	* jsMFMatrix3f.cpp:
	* jsSFMatrix3f.cpp:
	* jsSFMatrix4f.cpp:
	* jsSFRotation.cpp:
	* jsMFRotation.cpp:
	* jsSFMatrix4d.cpp:
	* jsMFColorRGBA.cpp:
	* jsX3DFieldDefinition.cpp:
	* jsSFColorRGBA.cpp:
	* jsX3DExecutionContext.cpp:
	* jsFieldDefinitionArray.cpp: 

2012-11-28  Holger Seelig  <holger.seelig@yahoo.de>

	* PixelTexture.cpp: 

2012-11-28  Holger Seelig  <holger.seelig@yahoo.de>

	* TimeSensor.cpp: 

2012-11-27  Holger Seelig  <holger.seelig@yahoo.de>

	* RegEx.cpp:
	* Parser.cpp:
	* JavaScript.cpp:
	* jsMFNode.cpp:
	* jsMFTime.cpp:
	* jsMFBool.cpp:
	* jsSFNode.cpp:
	* jsSFColor.cpp:
	* jsMFVec3f.cpp:
	* jsMFVec4d.cpp:
	* jsMFVec4f.cpp:
	* jsSFVec3f.cpp:
	* jsSFVec4d.cpp:
	* jsSFVec4f.cpp:
	* jsSFVec2d.cpp:
	* jsSFVec2f.cpp:
	* jsSFVec3d.cpp:
	* jsMFVec3d.cpp:
	* jsMFColor.cpp:
	* jsMFImage.cpp:
	* jsMFFloat.cpp:
	* jsMFVec2f.cpp:
	* jsMFVec2d.cpp:
	* jsMFInt32.cpp:
	* jsMFString.cpp:
	* jsMFDouble.cpp:
	* jsMFMatrix3f.cpp:
	* jsMFMatrix3d.cpp:
	* jsVrmlMatrix.cpp:
	* jsMFMatrix4d.cpp:
	* jsSFMatrix3f.cpp:
	* jsSFMatrix3d.cpp:
	* jsMFRotation.cpp:
	* jsSFMatrix4d.cpp:
	* jsSFRotation.cpp:
	* jsMFMatrix4f.cpp:
	* jsSFMatrix4f.cpp:
	* jsMFColorRGBA.cpp:
	* jsSFColorRGBA.cpp:
	* jsFieldDefinitionArray.cpp: 

2012-11-27  Holger Seelig  <holger.seelig@yahoo.de>

	* jsBrowser.h:
	* JavaScript.h:
	* JavaScript.cpp:
	* jsSFNode.cpp:
	* jsMFNode.cpp:
	* jsMFTime.cpp:
	* jsMFBool.cpp:
	* jsMFVec2d.cpp:
	* jsMFVec4d.cpp:
	* jsMFVec3f.cpp:
	* jsMFVec3d.cpp:
	* jsMFVec2f.cpp:
	* jsMFImage.cpp:
	* jsMFFloat.cpp:
	* jsMFVec4f.cpp:
	* jsMFColor.cpp:
	* jsMFInt32.cpp:
	* jsMFString.cpp:
	* jsMFDouble.cpp:
	* jsMFMatrix3f.cpp:
	* jsMFMatrix3d.cpp:
	* jsMFMatrix4d.cpp:
	* jsMFRotation.cpp:
	* jsMFMatrix4f.cpp:
	* jsMFColorRGBA.cpp:
	* jsFieldDefinitionArray.cpp: 

2012-11-27  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DBasicNode.cpp:
	* jsGlobals.h:
	* jsBrowser.h:
	* JavaScript.h:
	* jsBrowser.cpp:
	* jsGlobals.cpp:
	* jsX3DObject.h:
	* JavaScript.cpp:
	* jsX3DObject.cpp:
	* jsX3DArrayField.h:
	* jsMFVec4f.h:
	* jsSFImage.h:
	* jsMFTime.cpp:
	* jsSFNode.cpp:
	* jsMFBool.cpp:
	* jsMFNode.cpp:
	* jsMFInt32.cpp:
	* jsMFImage.cpp:
	* jsSFImage.cpp:
	* jsMFFloat.cpp:
	* jsSFVec2d.cpp:
	* jsSFVec4d.cpp:
	* jsSFVec4f.cpp:
	* jsSFVec3f.cpp:
	* jsSFVec2f.cpp:
	* jsSFVec3d.cpp:
	* jsMFVec3f.cpp:
	* jsMFVec4d.cpp:
	* jsMFVec4f.cpp:
	* jsMFVec2d.cpp:
	* jsMFVec2f.cpp:
	* jsMFVec3d.cpp:
	* jsSFColor.cpp:
	* jsMFColor.cpp:
	* jsMFDouble.cpp:
	* jsMFString.cpp:
	* jsSFColorRGBA.h:
	* jsX3DFieldDefinition.h:
	* jsMFMatrix3f.cpp:
	* jsX3DExecutionContext.h:
	* jsMFMatrix3d.cpp:
	* jsSFMatrix3d.cpp:
	* jsSFMatrix3f.cpp:
	* jsMFMatrix4d.cpp:
	* jsMFRotation.cpp:
	* jsMFMatrix4f.cpp:
	* jsSFRotation.cpp:
	* jsSFMatrix4f.cpp:
	* jsSFMatrix4d.cpp:
	* jsVrmlMatrix.cpp:
	* jsSFColorRGBA.cpp:
	* jsX3DFieldDefinition.cpp:
	* jsFieldDefinitionArray.h:
	* jsMFColorRGBA.cpp:
	* jsX3DExecutionContext.cpp:
	* jsFieldDefinitionArray.cpp: 

2012-11-27  Holger Seelig  <holger.seelig@yahoo.de>

	* Makefile.am:
	* libtitania-x3d.cproj:
	* X3DBrowser.h:
	* X3DBrowser.cpp:
	* JavaScript.h:
	* JavaScript.cpp:
	* Script.h:
	* Script.cpp:
	* jsGlobals.h:
	* jsBrowser.h:
	* jsX3DScene.h:
	* JavaScript.h:
	* jsBrowser.cpp:
	* jsGlobals.cpp:
	* jsX3DScene.cpp:
	* JavaScript.cpp:
	* jsSFNode.h:
	* jsSFVec3d.h:
	* jsSFVec2f.h:
	* jsSFVec2d.h:
	* jsSFVec4f.h:
	* jsSFVec3f.h:
	* jsSFVec4d.h:
	* jsMFNode.cpp:
	* jsSFNode.cpp:
	* jsMFTime.cpp:
	* jsSFVec3f.cpp:
	* jsSFVec4d.cpp:
	* jsSFVec4f.cpp:
	* jsSFVec2f.cpp:
	* jsSFVec2d.cpp:
	* jsSFVec3d.cpp:
	* jsMFVec2f.cpp:
	* jsMFVec2d.cpp:
	* jsMFVec3f.cpp:
	* jsMFVec3d.cpp:
	* jsMFFloat.cpp:
	* jsMFColor.cpp:
	* jsMFInt32.cpp:
	* jsMFImage.cpp:
	* jsSFColor.cpp:
	* jsSFImage.cpp:
	* jsProfileInfoArray.h:
	* jsMFVec4d.cpp:
	* jsMFVec4f.cpp:
	* jsMFDouble.cpp:
	* jsSFRotation.h:
	* jsMFString.cpp:
	* jsProfileInfoArray.cpp:
	* jsComponentInfoArray.h:
	* jsX3DExecutionContext.h:
	* jsMFRotation.cpp:
	* jsSFMatrix3d.cpp:
	* jsSFMatrix3f.cpp:
	* jsMFMatrix4f.cpp:
	* jsMFMatrix3d.cpp:
	* jsMFMatrix3f.cpp:
	* jsMFMatrix4d.cpp:
	* jsSFRotation.cpp:
	* jsSFMatrix4f.cpp:
	* jsSFMatrix4d.cpp:
	* jsVrmlMatrix.cpp:
	* jsComponentInfoArray.cpp:
	* jsSFColorRGBA.cpp:
	* jsFieldDefinitionArray.h:
	* jsMFColorRGBA.cpp:
	* jsX3DExecutionContext.cpp:
	* jsFieldDefinitionArray.cpp: 

2012-11-27  Holger Seelig  <holger.seelig@yahoo.de>

	* Makefile.am:
	* libtitania-x3d.cproj:
	* MFNode.h:
	* SFImage.h:
	* SFMatrix4.h:
	* SFImage.cpp:
	* X3DArrayField.h:
	* JavaScript.cpp:
	* jsfield.h:
	* jsfield.h:
	* jsFields.h:
	* jsFields.h:
	* jsstring.h:
	* jsstring.h:
	* jsBrowser.h:
	* jsGlobals.h:
	* jsBrowser.h:
	* jsGlobals.h:
	* jsfield.cpp:
	* jsfield.cpp:
	* jsX3DScene.h:
	* jsX3DScene.h:
	* jsstring.cpp:
	* jsstring.cpp:
	* jsX3DField.h:
	* jsX3DField.h:
	* jsGlobals.cpp:
	* jsX3DObject.h:
	* jsGlobals.cpp:
	* jsBrowser.cpp:
	* jsBrowser.cpp:
	* jsX3DObject.h:
	* jsX3DField.cpp:
	* jsX3DField.cpp:
	* jsX3DScene.cpp:
	* jsX3DScene.cpp:
	* jsX3DObject.cpp:
	* jsX3DObject.cpp:
	* jsSFNode.h:
	* jsMFBool.h:
	* jsMFTime.h:
	* jsMFBool.h:
	* jsMFNode.h:
	* jsMFNode.h:
	* jsMFTime.h:
	* jsX3DArrayField.h:
	* jsX3DArrayField.h:
	* jsSFNode.h:
	* jsMFInt32.h:
	* jsMFFloat.h:
	* jsMFImage.h:
	* jsSFVec2d.h:
	* jsSFVec4d.h:
	* jsSFVec4f.h:
	* jsMFColor.h:
	* jsSFVec3f.h:
	* jsSFVec2f.h:
	* jsSFVec3d.h:
	* jsMFColor.h:
	* jsSFVec3f.h:
	* jsMFVec4f.h:
	* jsMFVec2f.h:
	* jsMFVec2d.h:
	* jsSFImage.h:
	* jsSFColor.h:
	* jsSFVec2f.h:
	* jsMFVec3d.h:
	* jsSFVec3d.h:
	* jsMFVec4d.h:
	* jsSFVec2d.h:
	* jsMFVec3f.h:
	* jsSFColor.h:
	* jsMFVec2d.h:
	* jsMFVec2f.h:
	* jsSFVec4f.h:
	* jsMFFloat.h:
	* jsMFImage.h:
	* jsMFInt32.h:
	* jsSFImage.h:
	* jsMFVec4f.h:
	* jsSFVec4d.h:
	* jsMFVec3d.h:
	* jsMFVec3f.h:
	* jsMFVec4d.h:
	* jsMFTime.cpp:
	* jsMFDouble.h:
	* jsMFNode.cpp:
	* jsMFString.h:
	* jsSFNode.cpp:
	* jsMFDouble.h:
	* jsMFBool.cpp:
	* jsMFBool.cpp:
	* jsMFNode.cpp:
	* jsMFString.h:
	* jsMFTime.cpp:
	* jsSFNode.cpp:
	* jsSFImage.cpp:
	* jsSFColor.cpp:
	* jsSFImage.cpp:
	* jsMFVec4f.cpp:
	* jsSFVec2d.cpp:
	* jsSFColor.cpp:
	* jsMFVec3d.cpp:
	* jsMFVec2f.cpp:
	* jsMFVec2d.cpp:
	* jsMFVec4f.cpp:
	* jsMFVec4d.cpp:
	* jsMFVec3f.cpp:
	* jsMFVec4d.cpp:
	* jsProfileInfoArray.h:
	* jsSFVec4f.cpp:
	* jsMFVec2d.cpp:
	* jsMFFloat.cpp:
	* jsMFImage.cpp:
	* jsMFInt32.cpp:
	* jsSFVec4d.cpp:
	* jsSFVec3d.cpp:
	* jsMFVec3f.cpp:
	* jsSFVec2f.cpp:
	* jsMFVec2f.cpp:
	* jsSFVec3f.cpp:
	* jsMFVec3d.cpp:
	* jsSFVec2f.cpp:
	* jsMFFloat.cpp:
	* jsSFVec3d.cpp:
	* jsMFInt32.cpp:
	* jsSFVec2d.cpp:
	* jsMFImage.cpp:
	* jsSFVec4f.cpp:
	* jsMFColor.cpp:
	* jsProfileInfoArray.h:
	* jsSFVec3f.cpp:
	* jsMFColor.cpp:
	* jsSFVec4d.cpp:
	* jsMFDouble.cpp:
	* jsMFMatrix4d.h:
	* jsSFMatrix4f.h:
	* jsVrmlMatrix.h:
	* jsMFDouble.cpp:
	* jsMFRotation.h:
	* jsMFMatrix4d.h:
	* jsMFMatrix4f.h:
	* jsSFMatrix3f.h:
	* jsSFMatrix4d.h:
	* jsVrmlMatrix.h:
	* jsMFMatrix3d.h:
	* jsSFMatrix3d.h:
	* jsMFMatrix3f.h:
	* jsSFMatrix4d.h:
	* jsMFRotation.h:
	* jsMFMatrix3f.h:
	* jsMFString.cpp:
	* jsSFMatrix4f.h:
	* jsMFString.cpp:
	* jsSFRotation.h:
	* jsSFMatrix3d.h:
	* jsMFMatrix4f.h:
	* jsMFMatrix3d.h:
	* jsSFMatrix3f.h:
	* jsSFRotation.h:
	* jsComponentInfoArray.h:
	* jsComponentInfoArray.h:
	* jsMFColorRGBA.h:
	* jsX3DFieldDefinition.h:
	* jsMFColorRGBA.h:
	* jsSFColorRGBA.h:
	* jsProfileInfoArray.cpp:
	* jsProfileInfoArray.cpp:
	* jsX3DFieldDefinition.h:
	* jsSFColorRGBA.h:
	* jsVrmlMatrix.cpp:
	* jsMFMatrix3f.cpp:
	* jsMFMatrix4d.cpp:
	* jsX3DExecutionContext.h:
	* jsMFMatrix3d.cpp:
	* jsMFMatrix3d.cpp:
	* jsMFRotation.cpp:
	* jsMFMatrix4f.cpp:
	* jsX3DExecutionContext.h:
	* jsSFMatrix3d.cpp:
	* jsMFMatrix4f.cpp:
	* jsSFMatrix3f.cpp:
	* jsSFMatrix4f.cpp:
	* jsSFMatrix4d.cpp:
	* jsSFMatrix3d.cpp:
	* jsSFMatrix4d.cpp:
	* jsSFMatrix4f.cpp:
	* jsMFRotation.cpp:
	* jsSFRotation.cpp:
	* jsSFMatrix3f.cpp:
	* jsMFMatrix3f.cpp:
	* jsVrmlMatrix.cpp:
	* jsMFMatrix4d.cpp:
	* jsSFRotation.cpp:
	* jsComponentInfoArray.cpp:
	* jsComponentInfoArray.cpp:
	* jsFieldDefinitionArray.h:
	* jsX3DFieldDefinition.cpp:
	* jsMFColorRGBA.cpp:
	* jsSFColorRGBA.cpp:
	* jsSFColorRGBA.cpp:
	* jsFieldDefinitionArray.h:
	* jsX3DFieldDefinition.cpp:
	* jsMFColorRGBA.cpp:
	* jsX3DExecutionContext.cpp:
	* jsX3DExecutionContext.cpp:
	* jsFieldDefinitionArray.cpp:
	* jsFieldDefinitionArray.cpp: 

2012-11-26  Holger Seelig  <holger.seelig@yahoo.de>

	* Makefile.am:
	* X3D.h:
	* X3D.cpp:
	* libtitania-x3d.cproj:
	* JavaScript.h:
	* JavaScript.cpp:
	* Route.cpp:
	* ObjectSet.cpp:
	* NodeType.cpp:
	* FieldType.cpp:
	* HitArray.cpp:
	* RouteSet.cpp:
	* jsfield.h:
	* BaseNodeSet.cpp:
	* jsstring.h:
	* jsFields.h:
	* RouteArray.cpp:
	* jsGlobals.h:
	* jsfield.cpp:
	* jsBrowser.h:
	* JavaScript.h:
	* NodeTypeArray.cpp:
	* NodeArray.cpp:
	* jsX3DField.h:
	* jsX3DScene.h:
	* jsstring.cpp:
	* jsX3DObject.h:
	* jsBrowser.cpp:
	* ProtoArray.cpp:
	* jsGlobals.cpp:
	* jsX3DScene.cpp:
	* JavaScript.cpp:
	* jsX3DField.cpp:
	* jsX3DObject.cpp:
	* jsMFTime.h:
	* jsMFNode.h:
	* jsSFNode.h:
	* jsMFBool.h:
	* FieldDefinitionSet.cpp:
	* jsX3DArrayField.h:
	* jsMFVec3d.h:
	* jsSFColor.h:
	* jsMFVec4f.h:
	* jsMFVec4d.h:
	* jsMFVec3f.h:
	* jsMFVec2f.h:
	* jsMFFloat.h:
	* jsMFColor.h:
	* jsMFImage.h:
	* jsMFVec2d.h:
	* jsMFInt32.h:
	* jsSFImage.h:
	* jsSFVec3f.h:
	* jsSFVec4d.h:
	* jsSFVec4f.h:
	* jsSFVec2d.h:
	* jsSFVec2f.h:
	* jsSFVec3d.h:
	* jsMFDouble.h:
	* ExternProtoArray.cpp:
	* FieldDefinitionArray.cpp:
	* jsMFString.h:
	* jsMFTime.cpp:
	* jsMFBool.cpp:
	* BindableNodeList.cpp:
	* jsMFNode.cpp:
	* SupportedNodes.h:
	* Inline.h:
	* jsSFNode.cpp:
	* jsMFInt32.cpp:
	* jsSFVec2d.cpp:
	* jsMFImage.cpp:
	* jsMFFloat.cpp:
	* BindableNodeStack.cpp:
	* jsSFVec4f.cpp:
	* jsMFColor.cpp:
	* jsProfileInfoArray.h:
	* jsSFVec3d.cpp:
	* jsSFVec2f.cpp:
	* jsSFVec4d.cpp:
	* jsSFVec3f.cpp:
	* jsMFVec3d.cpp:
	* jsMFVec3f.cpp:
	* jsMFVec2d.cpp:
	* jsMFVec2f.cpp:
	* jsSFColor.cpp:
	* jsSFImage.cpp:
	* jsMFVec4d.cpp:
	* jsMFVec4f.cpp:
	* jsMFMatrix3d.h:
	* jsSFMatrix3f.h:
	* jsSFMatrix4d.h:
	* jsMFString.cpp:
	* jsSFMatrix4f.h:
	* jsMFMatrix3f.h:
	* jsVrmlMatrix.h:
	* jsMFMatrix4d.h:
	* jsSFMatrix3d.h:
	* Inline.cpp:
	* SupportedNodes.cpp:
	* jsMFRotation.h:
	* jsMFDouble.cpp:
	* jsMFMatrix4f.h:
	* jsSFRotation.h:
	* jsComponentInfoArray.h:
	* jsProfileInfoArray.cpp:
	* jsMFColorRGBA.h:
	* X3DExecutionContext.cpp:
	* jsfield.h:
	* jsSFColorRGBA.h:
	* jsX3DFieldDefinition.h:
	* jsMFMatrix4f.cpp:
	* jsMFMatrix4d.cpp:
	* jsstring.h:
	* jsX3DExecutionContext.h:
	* jsSFMatrix3d.cpp:
	* jsFields.h:
	* jsMFMatrix3f.cpp:
	* jsSFRotation.cpp:
	* jsMFRotation.cpp:
	* jsSFMatrix4f.cpp:
	* jsMFMatrix3d.cpp:
	* jsSFMatrix4d.cpp:
	* jsSFMatrix3f.cpp:
	* ProfileInfoArray.cpp:
	* jsVrmlMatrix.cpp:
	* jsfield.cpp:
	* jsMFColorRGBA.cpp:
	* jsX3DFieldDefinition.cpp:
	* jsFieldDefinitionArray.h:
	* jsBrowser.h:
	* jsComponentInfoArray.cpp:
	* jsSFColorRGBA.cpp:
	* jsGlobals.h:
	* jsX3DExecutionContext.cpp:
	* jsX3DScene.h:
	* jsX3DField.h:
	* ComponentInfoArray.cpp:
	* jsstring.cpp:
	* jsFieldDefinitionArray.cpp:
	* jsBrowser.cpp:
	* jsGlobals.cpp:
	* jsX3DObject.h:
	* jsX3DField.cpp:
	* jsX3DScene.cpp:
	* jsX3DObject.cpp:
	* jsMFBool.h:
	* jsMFNode.h:
	* jsMFTime.h:
	* jsX3DArrayField.h:
	* jsSFNode.h:
	* jsMFVec4f.h:
	* jsSFVec2f.h:
	* jsMFVec4d.h:
	* jsSFImage.h:
	* jsSFVec2d.h:
	* jsSFColor.h:
	* jsMFVec3f.h:
	* jsMFImage.h:
	* jsMFFloat.h:
	* jsMFColor.h:
	* jsMFInt32.h:
	* jsMFVec3d.h:
	* jsMFVec2f.h:
	* jsMFVec2d.h:
	* jsSFVec4f.h:
	* jsSFVec3f.h:
	* jsSFVec4d.h:
	* jsSFVec3d.h:
	* jsSFNode.cpp:
	* jsMFNode.cpp:
	* jsMFTime.cpp:
	* jsMFString.h:
	* jsMFDouble.h:
	* jsMFBool.cpp:
	* jsMFVec4d.cpp:
	* jsMFVec3f.cpp:
	* jsSFVec4f.cpp:
	* jsMFVec4f.cpp:
	* jsMFColor.cpp:
	* jsMFVec3d.cpp:
	* jsMFImage.cpp:
	* jsProfileInfoArray.h:
	* jsMFInt32.cpp:
	* jsMFVec2f.cpp:
	* jsMFVec2d.cpp:
	* jsMFFloat.cpp:
	* jsSFColor.cpp:
	* jsSFVec2f.cpp:
	* jsSFVec3f.cpp:
	* jsSFVec2d.cpp:
	* jsSFVec4d.cpp:
	* jsSFVec3d.cpp:
	* jsSFImage.cpp:
	* jsMFRotation.h:
	* jsSFMatrix4d.h:
	* jsMFString.cpp:
	* jsMFMatrix4d.h:
	* jsMFMatrix4f.h:
	* jsMFMatrix3d.h:
	* jsMFMatrix3f.h:
	* jsSFMatrix4f.h:
	* jsMFDouble.cpp:
	* jsSFMatrix3d.h:
	* jsVrmlMatrix.h:
	* jsSFRotation.h:
	* jsSFMatrix3f.h:
	* jsMFColorRGBA.h:
	* jsX3DFieldDefinition.h:
	* jsProfileInfoArray.cpp:
	* jsSFColorRGBA.h:
	* jsComponentInfoArray.h:
	* jsX3DExecutionContext.h:
	* jsSFMatrix4f.cpp:
	* jsSFRotation.cpp:
	* jsSFMatrix3d.cpp:
	* jsSFMatrix3f.cpp:
	* jsMFMatrix4f.cpp:
	* jsMFMatrix3f.cpp:
	* jsVrmlMatrix.cpp:
	* jsMFMatrix4d.cpp:
	* jsMFRotation.cpp:
	* jsSFMatrix4d.cpp:
	* jsMFMatrix3d.cpp:
	* jsX3DFieldDefinition.cpp:
	* jsMFColorRGBA.cpp:
	* jsFieldDefinitionArray.h:
	* jsSFColorRGBA.cpp:
	* jsComponentInfoArray.cpp:
	* jsX3DExecutionContext.cpp:
	* jsFieldDefinitionArray.cpp: 

2012-11-26  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DBasicNode.h:
	* X3DBasicNode.cpp:
	* X3DExecutionContext.cpp:
	* X3DGroupingNode.h:
	* X3DPrototypeInstance.h:
	* X3DGroupingNode.cpp:
	* X3DPrototypeInstance.cpp: 

2012-11-25  Holger Seelig  <holger.seelig@yahoo.de>

	* Parser.h:
	* MFNode.h:
	* SFNode.h:
	* X3DObject.h:
	* Parser.cpp:
	* X3DScalar.h:
	* X3DScalar.cpp:
	* X3DBrowser.h:
	* X3DBrowser.cpp:
	* ExternProto.cpp:
	* SupportedNodes.h:
	* SupportedFields.h:
	* SupportedNodes.cpp:
	* SupportedProfiles.h:
	* SupportedFields.cpp:
	* X3DLayerNode.h:
	* SupportedComponents.h:
	* Viewpoint.cpp:
	* SupportedProfiles.cpp:
	* X3DLayerNode.cpp:
	* X3DUrlObject.h:
	* X3DGroupingNode.h:
	* SupportedComponents.cpp:
	* X3DUrlObject.cpp:
	* X3DGeometryNode.h:
	* X3DGroupingNode.cpp:
	* RenderingProperties.h:
	* X3DGeometryNode.cpp:
	* X3DTexture2DNode.cpp:
	* RenderingProperties.cpp:
	* ProximitySensor.h:
	* ProximitySensor.cpp: 

2012-11-25  Holger Seelig  <holger.seelig@yahoo.de>

	* SFVec2.h:
	* SFVec3.h:
	* SFTime.h:
	* SFNode.h:
	* MFNode.h:
	* SFVec4.h:
	* SFColor.h:
	* SFImage.h:
	* X3DField.h:
	* SFString.h:
	* SFTime.cpp:
	* SFMatrix3.h:
	* SFMatrix4.h:
	* X3DBaseNode.h:
	* SFColor.cpp:
	* X3DScalar.h:
	* SFRotation4.h:
	* SFColorRGBA.h:
	* X3DArrayField.h:
	* X3DBasicNode.cpp:
	* SFColorRGBA.cpp:
	* X3DExecutionContext.cpp:
	* BrowserOptions.cpp:
	* X3DGroupingNode.cpp:
	* X3DTexture2DNode.cpp:
	* RenderingProperties.cpp: 

2012-11-24  Holger Seelig  <holger.seelig@yahoo.de>

	* Makefile.am:
	* libtitania-x3d.cproj:
	* SFNode.h:
	* MFNode.h:
	* X3DBasicNode.h:
	* X3DArrayField.h:
	* X3DBasicNode.cpp:
	* X3DRenderer.h:
	* X3DRenderer.cpp:
	* LOD.h:
	* Layer.h:
	* Material.h:
	* Switch.h:
	* Layer.cpp:
	* LOD.cpp:
	* Material.cpp:
	* Appearance.h:
	* Viewport.h:
	* LayerSet.h:
	* LineSet.h:
	* Cone.cpp:
	* Switch.cpp:
	* Appearance.cpp:
	* PointSet.h:
	* LayoutLayer.h:
	* Transform.h:
	* Viewport.cpp:
	* LayerSet.cpp:
	* Inline.cpp:
	* LineSet.cpp:
	* Billboard.h:
	* LayoutLayer.cpp:
	* Transform.cpp:
	* PointSet.cpp:
	* X3DShapeNode.cpp:
	* X3DLightNode.h:
	* X3DLayerNode.h:
	* Billboard.cpp:
	* X3DLayerNode.cpp:
	* X3DLightNode.cpp:
	* IndexedLineSet.h:
	* X3DGroupingNode.h:
	* X3DPrototypeInstance.h:
	* IndexedFaceSet.h:
	* X3DGeometryNode.h:
	* X3DBoundedObject.h:
	* X3DTexture2DNode.h:
	* ElevationGrid.cpp:
	* X3DGroupingNode.cpp:
	* IndexedLineSet.cpp:
	* TextureTransform.h:
	* RenderingProperties.h:
	* X3DPrototypeInstance.cpp:
	* X3DGeometryNode.cpp:
	* IndexedFaceSet.cpp:
	* X3DBoundedObject.cpp:
	* TextureTransform.cpp:
	* X3DTexture2DNode.cpp:
	* RenderingProperties.cpp:
	* LocalFog.h:
	* LocalFog.cpp:
	* ProximitySensor.h:
	* VisibilitySensor.h:
	* ProximitySensor.cpp:
	* VisibilitySensor.cpp:
	* X3DPointingDeviceSensorNode.h:
	* X3DPointingDeviceSensorNode.cpp: 

2012-11-23  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* Box.cpp:
	* Cone.cpp:
	* Sphere.h:
	* Sphere.cpp:
	* PointSet.cpp:
	* Cylinder.cpp:
	* BrowserOptions.h:
	* Extrusion.cpp:
	* BrowserOptions.cpp:
	* IndexedFaceSet.h:
	* X3DGeometryNode.h:
	* IndexedLineSet.cpp:
	* ElevationGrid.cpp:
	* IndexedFaceSet.cpp:
	* QuadSphereProperties.h:
	* X3DSpherePropertyNode.h:
	* QuadSphereProperties.cpp:
	* X3DSpherePropertyNode.cpp: 

2012-11-22  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* Type.h:
	* Type.h:
	* Type.cpp:
	* MFNode.h:
	* SFTime.h:
	* SFNode.h:
	* X3DField.h:
	* X3DObject.h:
	* SFVec3.cpp:
	* SFVec2.cpp:
	* SFTime.cpp:
	* SFVec4.cpp:
	* MFNode.cpp:
	* SFNode.cpp:
	* SFImage.cpp:
	* SFColor.cpp:
	* NodeType.cpp:
	* MFInt32.cpp:
	* FieldType.cpp:
	* X3DConstants.h:
	* SFString.cpp:
	* SFMatrix3.cpp:
	* X3DBasicNode.h:
	* X3DScalar.cpp:
	* SFMatrix4.cpp:
	* NodeTypeArray.h:
	* X3DConstants.cpp:
	* ArrayFields.cpp:
	* SFRotation4.cpp:
	* X3DBasicNode.cpp:
	* SFColorRGBA.cpp:
	* NodeTypeArray.cpp:
	* FieldType (Kopie).h:
	* Extrusion.h:
	* Extrusion.cpp:
	* IndexedLineSet.h:
	* IndexedFaceSet.h:
	* X3DGeometryNode.h:
	* X3DPrototypeInstance.h:
	* IndexedLineSet.cpp:
	* X3DPrototypeInstance.cpp:
	* IndexedFaceSet.cpp:
	* X3DGeometryNode.cpp:
	* X3DComposedGeometryNode.h:
	* X3DComposedGeometryNode.cpp: 

2012-11-21  Holger Seelig  <holger.seelig@yahoo.de>

	* Tesselator.h:
	* X3DBrowser.cpp:
	* X3DNode.h:
	* X3DRenderer.cpp:
	* X3DBrowserContext.h:
	* X3DNode.cpp:
	* X3DBrowserContext.cpp:
	* LayerSet.cpp:
	* Extrusion.h:
	* X3DLayerNode.h:
	* Viewpoint.cpp:
	* Extrusion.cpp:
	* X3DLightNode.cpp:
	* X3DLayerNode.cpp:
	* IndexedLineSet.h:
	* IndexedFaceSet.h:
	* IndexedLineSet.cpp:
	* IndexedFaceSet.cpp:
	* X3DViewpointNode.cpp:
	* LocalFog.cpp:
	* X3DBackgroundNode.cpp: 

2012-11-21  Holger Seelig  <holger.seelig@yahoo.de>

	* Parser.cpp:
	* Surface.h:
	* Surface.cpp:
	* Tesselator.h:
	* Extrusion.h:
	* Extrusion.cpp:
	* IndexedFaceSet.cpp: 

2012-11-21  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* Normal.h:
	* Tesselator.h:
	* Extrusion.h:
	* Extrusion.cpp:
	* IndexedFaceSet.h:
	* IndexedFaceSet.cpp: 

2012-11-21  Holger Seelig  <holger.seelig@yahoo.de>

	* IndexedFaceSet.h:
	* IndexedFaceSet.cpp: 

2012-11-21  Holger Seelig  <holger.seelig@yahoo.de>

	* IndexedFaceSet.h:
	* IndexedFaceSet.cpp: 

2012-11-20  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* Matrix.h:
	* Normal.h:
	* Viewpoint.h:
	* Viewpoint.cpp:
	* IndexedFaceSet.h:
	* IndexedFaceSet.cpp:
	* X3DViewpointNode.h:
	* X3DViewpointNode.cpp: 

2012-11-20  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* X3DBasicNode.cpp:
	* InterfaceDeclaration.h:
	* InterfaceDeclaration.cpp:
	* Viewpoint.cpp:
	* IndexedFaceSet.h:
	* X3DTexture2DNode.h:
	* IndexedFaceSet.cpp:
	* X3DTexture2DNode.cpp: 

2012-11-19  Holger Seelig  <holger.seelig@yahoo.de>

	* Type.h:
	* Output.h:
	* Type.cpp:
	* X3DBase.h:
	* Output.cpp:
	* X3DObject.h:
	* X3DField.h:
	* X3DBasicNode.cpp:
	* GarbageCollector.h:
	* X3DFieldDefinition.h:
	* GarbargeCollector.cpp:
	* BindableNodeList.h:
	* InterfaceDeclaration.h:
	* BindableNodeStack.h:
	* InterfaceDeclaration.cpp:
	* X3DExecutionContext.cpp:
	* Viewpoint.cpp:
	* X3DGroupingNode.h:
	* X3DGroupingNode.cpp:
	* X3DGeometryNode.cpp: 

2012-11-13  Holger Seelig  <holger.seelig@yahoo.de>

	* SFMatrix4.h:
	* SFMatrix3.h:
	* Browser.cpp:
	* X3DRenderer.cpp:
	* LightContainer.h:
	* ShapeContainer.cpp:
	* Box.cpp:
	* Cone.cpp:
	* Sphere.cpp:
	* Transform.cpp:
	* PointSet.cpp:
	* Cylinder.cpp:
	* Extrusion.cpp:
	* Viewpoint.cpp:
	* X3DGeometryNode.h:
	* ElevationGrid.cpp:
	* IndexedLineSet.cpp:
	* X3DGeometryNode.cpp:
	* IndexedFaceSet.cpp:
	* RenderingProperties.cpp:
	* X3DViewpointNode.cpp:
	* ProximitySensor.cpp:
	* X3DBackgroundNode.h:
	* X3DBackgroundNode.cpp: 

2012-11-11  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* Browser.cpp:
	* Box.cpp:
	* Sphere.h:
	* Cone.cpp:
	* Sphere.cpp:
	* PointSet.cpp:
	* Extrusion.h:
	* Cylinder.cpp:
	* Extrusion.cpp:
	* ElevationGrid.h:
	* IndexedFaceSet.h:
	* X3DGeometryNode.h:
	* ElevationGrid.cpp:
	* IndexedLineSet.cpp:
	* X3DGeometryNode.cpp:
	* IndexedFaceSet.cpp:
	* X3DComposedGeometryNode.h: 

2012-11-11  Holger Seelig  <holger.seelig@yahoo.de>

	* Browser.cpp:
	* Text.h:
	* Text.cpp:
	* Box.h:
	* Cone.h:
	* Box.cpp:
	* Sphere.h:
	* Cone.cpp:
	* Disk2D.h:
	* Sphere.cpp:
	* Disk2D.cpp:
	* Cylinder.h:
	* Extrusion.h:
	* ArcClose2D.h:
	* Cylinder.cpp:
	* Extrusion.cpp:
	* Rectangle2D.h:
	* NurbsSwungSurface.h:
	* ArcClose2D.cpp:
	* NurbsSweptSurface.h:
	* TriangleSet2D.h:
	* Rectangle2D.cpp:
	* BrowserOptions.cpp:
	* ElevationGrid.h:
	* NurbsSweptSurface.cpp:
	* NurbsSwungSurface.cpp:
	* X3DGeometryNode.h:
	* IndexedFaceSet.h:
	* TriangleSet2D.cpp:
	* ElevationGrid.cpp:
	* X3DGeometryNode.cpp:
	* IndexedFaceSet.cpp:
	* GeoElevationGrid.h:
	* GeoElevationGrid.cpp:
	* X3DComposedGeometryNode.h:
	* X3DNurbsSurfaceGeometryNode.h:
	* X3DNurbsSurfaceGeometryNode.cpp:
	* X3DComposedGeometryNode.cpp:
	* ProximitySensor.cpp:
	* X3DBackgroundNode.cpp: 

2012-11-10  Holger Seelig  <holger.seelig@yahoo.de>

	* Browser.cpp:
	* Extrusion.h:
	* Extrusion.cpp:
	* X3DGeometryNode.cpp: 

2012-11-10  Holger Seelig  <holger.seelig@yahoo.de>

	* Extrusion.h:
	* Extrusion.cpp:
	* BrowserOptions.cpp: 

2012-11-08  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* SFColor.cpp:
	* SFColorRGBA.cpp:
	* Extrusion.cpp:
	* RenderingProperties.h:
	* TextureProperties.h:
	* RenderingProperties.cpp:
	* TextureProperties.cpp: 

2012-11-02  Holger Seelig  <holger.seelig@yahoo.de>

	* Scene.h:
	* World.cpp:
	* Scene.cpp:
	* X3DNode.h:
	* X3DBrowserContext.h:
	* X3DNode.cpp:
	* BindableNodeList.h:
	* X3DBrowserContext.cpp:
	* Viewpoint.h:
	* X3DExecutionContext.cpp:
	* Viewpoint.cpp:
	* GeoViewpoint.h:
	* X3DLayerNode.cpp:
	* Fog.h:
	* NavigationInfo.h:
	* OrthoViewpoint.h:
	* GeoViewpoint.cpp:
	* Fog.cpp:
	* X3DViewpointNode.h:
	* OrthoViewpoint.cpp:
	* NavigationInfo.cpp:
	* X3DViewpointNode.cpp:
	* Background.h:
	* Background.cpp:
	* X3DBackgroundNode.h:
	* TextureBackground.h:
	* TextureBackground.cpp:
	* X3DBackgroundNode.cpp: 

2012-11-01  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DField.h: 

2012-11-01  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DField.h:
	* X3DObject.h:
	* X3DContext.h:
	* X3DRoute.h:
	* X3DBaseNode.h:
	* X3DBasicNode.h:
	* X3DContext.cpp:
	* BindableNodeStack.h:
	* X3DLayerNode.cpp: 

2012-11-01  Holger Seelig  <holger.seelig@yahoo.de>

	* Scene.h:
	* Scene.cpp:
	* X3DScene.h:
	* X3DScene.cpp:
	* SignalPdu.h:
	* GarbargeCollector.cpp:
	* NurbsSet.h:
	* SignalPdu.cpp:
	* ReceiverPdu.h:
	* AudioClip.h:
	* MetadataSet.h:
	* NurbsSet.cpp:
	* Anchor.h:
	* AudioClip.cpp:
	* ReceiverPdu.cpp:
	* Inline.h:
	* GeoLOD.h:
	* MetadataBool.h:
	* MetadataFloat.h:
	* X3DShapeNode.h:
	* TransmitterPdu.h:
	* ShaderPart.h:
	* MetadataSet.cpp:
	* Inline.cpp:
	* MetadataString.h:
	* Anchor.cpp:
	* GeoLOD.cpp:
	* MetadataBool.cpp:
	* CADFace.h:
	* MetadataDouble.h:
	* StaticGroup.h:
	* HAnimHumanoid.h:
	* MetadataFloat.cpp:
	* MetadataInteger.h:
	* X3DShapeNode.cpp:
	* ShaderPart.cpp:
	* X3DExecutionContext.cpp:
	* TransmitterPdu.cpp:
	* PickableGroup.h:
	* ShaderProgram.h:
	* MetadataString.cpp:
	* CADFace.cpp:
	* MetadataDouble.cpp:
	* ComposedShader.h:
	* MetadataInteger.cpp:
	* PackagedShader.h:
	* X3DMetadataObject.h:
	* MovieTexture.h:
	* StaticGroup.cpp:
	* HAnimHumanoid.cpp:
	* X3DScriptNode.h:
	* ShaderProgram.cpp:
	* X3DUrlObject.h:
	* PickableGroup.cpp:
	* PackagedShader.cpp:
	* Fog.h:
	* ComposedShader.cpp:
	* X3DMetadataObject.cpp:
	* MovieTexture.cpp:
	* X3DGroupingNode.h:
	* ImageTexture.cpp:
	* X3DPickableObject.h:
	* X3DUrlObject.cpp:
	* X3DBoundedObject.h:
	* X3DScriptNode.cpp:
	* X3DGroupingNode.cpp:
	* Fog.cpp:
	* ImageTexture3D.h:
	* X3DBoundedObject.cpp:
	* X3DPickableObject.cpp:
	* X3DTexture2DNode.cpp:
	* ImageTexture3D.cpp:
	* LocalFog.h:
	* LocalFog.cpp:
	* X3DFogObject.h:
	* X3DProgrammableShaderObject.h:
	* X3DFogObject.cpp:
	* ImageCubeMapTexture.h:
	* X3DProgrammableShaderObject.cpp:
	* ImageCubeMapTexture.cpp:
	* X3DNBodyCollidableNode.h:
	* X3DNBodyCollidableNode.cpp:
	* X3DNBodyCollisionSpaceNode.h:
	* X3DNBodyCollisionSpaceNode.cpp: 

2012-10-31  Holger Seelig  <holger.seelig@yahoo.de>

	* Parser.h:
	* Scene.h:
	* Parser.cpp:
	* Scene.cpp:
	* X3DScene.h:
	* X3DScene.cpp:
	* ExternProto.h:
	* ExternProto.cpp:
	* Inline.h:
	* X3DExecutionContext.h:
	* Inline.cpp:
	* X3DExecutionContext.cpp:
	* ImageTexture.h:
	* X3DUrlObject.h:
	* ImageTexture.cpp:
	* X3DUrlObject.cpp:
	* X3DPrototypeInstance.h:
	* X3DPrototypeInstance.cpp: 

2012-10-30  Holger Seelig  <holger.seelig@yahoo.de>

	* X3D.o:
	* X3D.d:
	* LOD.o:
	* Fog.o:
	* Box.o:
	* Box.d:
	* Fog.d:
	* LOD.d:
	* Type.d:
	* Type.o:
	* Cone.d:
	* Cone.o:
	* Error.o:
	* Error.d:
	* Route.o:
	* Route.d:
	* Scene.d:
	* Proto.d:
	* Proto.o:
	* RegEx.o:
	* RegEx.d:
	* Scene.o:
	* World.o:
	* World.d:
	* Arc2D.d:
	* Image.o:
	* Arc2D.o:
	* Layer.d:
	* Image.d:
	* Layer.o:
	* Group.d:
	* Group.o:
	* SFVec3.o:
	* SFVec3.d:
	* SFVec2.o:
	* Disk2D.d:
	* SFVec4.o:
	* SFVec4.d:
	* MFNode.o:
	* MFNode.d:
	* Viewer.o:
	* SFVec2.d:
	* SFTime.o:
	* Switch.o:
	* Inline.o:
	* Sphere.d:
	* Sphere.o:
	* GeoLOD.o:
	* Parser.d:
	* Parser.o:
	* Layout.d:
	* Switch.d:
	* Disk2D.o:
	* GeoLOD.d:
	* Viewer.d:
	* Layout.o:
	* SFTime.d:
	* SFNode.o:
	* SFNode.d:
	* Router.d:
	* Router.o:
	* Anchor.o:
	* CADFace.o:
	* X3DBase.d:
	* CADPart.d:
	* CADPart.o:
	* X3DBase.o:
	* SFImage.d:
	* SFImage.o:
	* CADFace.d:
	* Browser.o:
	* Browser.d:
	* QuadSet.d:
	* QuadSet.o:
	* X3DType.o:
	* X3DNode.d:
	* SFColor.o:
	* X3DNode.o:
	* X3DType.d:
	* MFInt32.d:
	* MFInt32.o:
	* SFColor.d:
	* X3DProto.o:
	* LayerSet.d:
	* Viewport.d:
	* LayerSet.o:
	* RouteSet.d:
	* RouteSet.o:
	* LocalFog.d:
	* X3DProto.d:
	* Viewport.o:
	* LocalFog.o:
	* HitArray.o:
	* HitArray.d:
	* X3DInput.d:
	* Circle2D.o:
	* CADLayer.d:
	* CADLayer.o:
	* Circle2D.d:
	* SFString.o:
	* SFString.d:
	* X3DInput.o:
	* Cylinder.o:
	* Cylinder.d:
	* WorldInfo.d:
	* X3DParser.o:
	* Viewpoint.d:
	* X3DScalar.d:
	* KeySensor.o:
	* KeySensor.d:
	* SFMatrix3.o:
	* SFMatrix3.d:
	* X3DScalar.o:
	* SFMatrix4.o:
	* Transform.o:
	* Viewpoint.o:
	* HAnimSite.d:
	* HAnimSite.o:
	* SFMatrix4.d:
	* X3DOutput.o:
	* Extrusion.o:
	* Extrusion.d:
	* SpotLight.o:
	* SpotLight.d:
	* X3DParser.d:
	* SignalPdu.o:
	* Collision.d:
	* Collision.o:
	* X3DObject.d:
	* SignalPdu.d:
	* X3DOutput.d:
	* X3DObject.o:
	* Generator.o:
	* Generator.d:
	* Transform.d:
	* WorldInfo.o:
	* GeoOrigin.o:
	* GeoOrigin.d:
	* Billboard.o:
	* Billboard.d:
	* RouteArray.o:
	* MotionBlur.o:
	* RouteArray.d:
	* ProtoArray.o:
	* ProtoArray.d:
	* Polyline2D.o:
	* MotionBlur.d:
	* LoadSensor.o:
	* PointLight.d:
	* Polyline2D.d:
	* PointLight.o:
	* X3DContext.o:
	* Background.o:
	* X3DContext.d:
	* X3DBrowser.d:
	* X3DBrowser.o:
	* uncompress.d:
	* uncompress.o:
	* ArcClose2D.d:
	* Background.d:
	* ArcClose2D.o:
	* HAnimJoint.d:
	* HAnimJoint.o:
	* ViewVolume.o:
	* ViewVolume.d:
	* ExternProto.o:
	* ExternProto.d:
	* CADAssembly.d:
	* ScreenGroup.o:
	* ArrayFields.o:
	* SFColorRGBA.d:
	* SFColorRGBA.o:
	* X3DRenderer.d:
	* StaticGroup.d:
	* StaticGroup.o:
	* ArrayFields.d:
	* CADAssembly.o:
	* ProfileInfo.o:
	* ProfileInfo.d:
	* X3DInfoNode.o:
	* ColorDamper.o:
	* ColorDamper.d:
	* ReceiverPdu.d:
	* X3DInfoNode.d:
	* ScreenGroup.d:
	* Polypoint2D.o:
	* Polypoint2D.d:
	* ReceiverPdu.o:
	* Rectangle2D.d:
	* Rectangle2D.o:
	* TimeTrigger.o:
	* LayoutLayer.d:
	* LayoutGroup.d:
	* LayoutGroup.o:
	* LayoutLayer.o:
	* GeoLocation.o:
	* GeoMetadata.d:
	* GeoMetadata.o:
	* GeoLocation.d:
	* SFRotation4.o:
	* SFRotation4.d:
	* MetadataSet.d:
	* X3DRenderer.o:
	* MetadataSet.o:
	* TimeTrigger.d:
	* X3DLayerNode.d:
	* GeoTransform.d:
	* X3DLightNode.o:
	* GeoTransform.o:
	* X3DLayerNode.o:
	* GeoViewpoint.d:
	* X3DFogObject.d:
	* X3DFogObject.o:
	* GeoViewpoint.o:
	* ScalarChaser.o:
	* ScalarChaser.d:
	* X3DLightNode.d:
	* X3DChildNode.o:
	* X3DConstants.d:
	* X3DConstants.o:
	* X3DChildNode.d:
	* StringSensor.o:
	* HAnimSegment.d:
	* StringSensor.d:
	* HAnimSegment.o:
	* X3DUrlObject.o:
	* MetadataBool.d:
	* MetadataBool.o:
	* BooleanToggle.o:
	* TriangleSet2D.o:
	* TriangleSet2D.d:
	* BooleanFilter.o:
	* BooleanFilter.d:
	* BooleanToggle.d:
	* X3DSensorNode.d:
	* X3DSensorNode.o:
	* ComponentInfo.d:
	* FogCoordinate.d:
	* FogCoordinate.o:
	* X3DChaserNode.d:
	* X3DChaserNode.o:
	* NodeTypeArray.o:
	* NodeTypeArray.d:
	* GeoCoordinate.o:
	* HAnimHumanoid.d:
	* HAnimHumanoid.o:
	* MetadataFloat.o:
	* MetadataFloat.d:
	* GeoCoordinate.d:
	* EaseInEaseOut.d:
	* EaseInEaseOut.o:
	* ElevationGrid.d:
	* X3DDamperNode.o:
	* ComponentInfo.o:
	* X3DLayoutNode.o:
	* X3DLayoutNode.d:
	* ElevationGrid.o:
	* X3DDamperNode.d:
	* ShapeContainer.o:
	* ViewpointGroup.d:
	* TransmitterPdu.d:
	* TransmitterPdu.o:
	* ViewpointGroup.o:
	* ShapeContainer.d:
	* SupportedNodes.o:
	* SupportedNodes.d:
	* X3DTriggerNode.o:
	* X3DTriggerNode.d:
	* OrthoViewpoint.d:
	* MetadataDouble.d:
	* MetadataDouble.o:
	* OrthoViewpoint.o:
	* PositionChaser.d:
	* PointingDevice.o:
	* PointingDevice.d:
	* EspduTransform.o:
	* MetadataString.o:
	* NavigationInfo.d:
	* NavigationInfo.o:
	* MetadataString.d:
	* BooleanTrigger.d:
	* BooleanTrigger.o:
	* EspduTransform.d:
	* IndexedFaceSet.d:
	* IndexedFaceSet.o:
	* PositionDamper.o:
	* HAnimDisplacer.o:
	* GeoTouchSensor.d:
	* GeoTouchSensor.o:
	* HAnimDisplacer.d:
	* PositionDamper.d:
	* IntegerTrigger.d:
	* IntegerTrigger.o:
	* PositionChaser.o:
	* IndexedQuadSet.d:
	* IndexedQuadSet.o:
	* SupportedFields.d:
	* SupportedFields.o:
	* X3DFollowerNode.d:
	* X3DBindableNode.d:
	* X3DFollowerNode.o:
	* MetadataInteger.o:
	* MetadataInteger.d:
	* TransformSensor.d:
	* X3DBindableNode.o:
	* TransformSensor.o:
	* X3DViewportNode.d:
	* ProximitySensor.d:
	* X3DViewportNode.o:
	* ScreenFontStyle.o:
	* ScreenFontStyle.d:
	* X3DPropertyNode.d:
	* X3DGroupingNode.o:
	* X3DGroupingNode.d:
	* ProximitySensor.o:
	* X3DPropertyNode.o:
	* PositionChaser2D.o:
	* IntegerSequencer.o:
	* X3DSequencerNode.d:
	* X3DSequencerNode.o:
	* IntegerSequencer.d:
	* PositionDamper2D.d:
	* X3DBoundedObject.d:
	* X3DBoundedObject.o:
	* GeoElevationGrid.d:
	* GeoElevationGrid.o:
	* VisibilitySensor.o:
	* X3DViewpointNode.d:
	* PositionDamper2D.o:
	* VisibilitySensor.d:
	* X3DViewpointNode.o:
	* DirectionalLight.o:
	* DirectionalLight.d:
	* TexCoordDamper2D.o:
	* TexCoordDamper2D.d:
	* DISEntityManager.d:
	* DISEntityManager.o:
	* CoordinateDamper.d:
	* CoordinateDamper.o:
	* JavaScriptEngine.d:
	* JavaScriptEngine.o:
	* BooleanSequencer.d:
	* PositionChaser2D.d:
	* ExternProtoArray.o:
	* ExternProtoArray.d:
	* BooleanSequencer.o:
	* GarbargeCollector.d:
	* ColorInterpolator.d:
	* GarbargeCollector.o:
	* ColorInterpolator.o:
	* X3DMetadataObject.d:
	* X3DMetadataObject.o:
	* X3DBackgroundNode.o:
	* TextureBackground.o:
	* OrientationChaser.d:
	* OrientationDamper.o:
	* SupportedProfiles.d:
	* SupportedProfiles.o:
	* TextureBackground.d:
	* OrientationDamper.d:
	* OrientationChaser.o:
	* X3DBackgroundNode.d:
	* NormalInterpolator.o:
	* ScalarInterpolator.o:
	* ScalarInterpolator.d:
	* X3DFieldDefinition.d:
	* NormalInterpolator.d:
	* GeoProximitySensor.o:
	* X3DFieldDefinition.o:
	* GeoProximitySensor.d:
	* FieldDefinitionSet.d:
	* FieldDefinitionSet.o:
	* X3DInterpolatorNode.o:
	* X3DInterpolatorNode.d:
	* SupportedComponents.o:
	* SupportedComponents.d:
	* X3DExecutionContext.o:
	* ImageCubeMapTexture.d:
	* ImageCubeMapTexture.o:
	* X3DExecutionContext.d:
	* X3DNetworkSensorNode.o:
	* X3DScene.h:
	* DISEntityTypeMapping.d:
	* FieldDefinitionArray.d:
	* InterfaceDeclaration.d:
	* FieldDefinitionArray.o:
	* PositionInterpolator.o:
	* PositionInterpolator.d:
	* X3DPrototypeInstance.d:
	* DISEntityTypeMapping.o:
	* X3DPrototypeInstance.o:
	* InterfaceDeclaration.o:
	* PositionInterpolator2D.o:
	* ComposedCubeMapTexture.o:
	* PositionInterpolator2D.d:
	* X3DScene.cpp:
	* ComposedCubeMapTexture.d:
	* X3DKeyDeviceSensorNode.d:
	* X3DKeyDeviceSensorNode.o:
	* CoordinateInterpolator.o:
	* CoordinateInterpolator.d:
	* GeoPositionInterpolator.o:
	* GeneratedCubeMapTexture.d:
	* OrientationInterpolator.o:
	* OrientationInterpolator.d:
	* GeneratedCubeMapTexture.o:
	* GeoPositionInterpolator.d:
	* SplineScalarInterpolator.o:
	* CoordinateInterpolator2D.d:
	* SplineScalarInterpolator.d:
	* CoordinateInterpolator2D.o:
	* X3DEnvironmentTextureNode.o:
	* X3DNode.h:
	* X3DRenderer.cpp:
	* X3DEnvironmentTextureNode.d:
	* X3DEnvironmentalSensorNode.d:
	* X3DEnvironmentalSensorNode.o:
	* SplinePositionInterpolator.o:
	* SplinePositionInterpolator.d:
	* X3DNode.cpp:
	* X3DBrowserContext.h:
	* X3DProductStructureChildNode.d:
	* X3DProductStructureChildNode.o:
	* SquadOrientationInterpolator.d:
	* SquadOrientationInterpolator.o:
	* SplinePositionInterpolator2D.d:
	* SplinePositionInterpolator2D.o:
	* X3DBrowserContext.cpp:
	* Inline.h:
	* LayerSet.cpp:
	* Inline.cpp:
	* Viewpoint.cpp:
	* X3DLightNode.cpp:
	* X3DLayerNode.cpp:
	* LocalFog.cpp:
	* Background.cpp:
	* X3DBackgroundNode.cpp: 

2012-10-30  Holger Seelig  <holger.seelig@yahoo.de>

	* LOD.o:
	* LOD.d:
	* Fog.o:
	* Fog.d:
	* X3D.d:
	* X3D.o:
	* Box.d:
	* Box.o:
	* Type.o:
	* Cone.o:
	* Cone.d:
	* Type.d:
	* Image.d:
	* Image.o:
	* Group.o:
	* Group.d:
	* Error.d:
	* Error.o:
	* RegEx.d:
	* Proto.o:
	* Proto.d:
	* Route.o:
	* Route.d:
	* RegEx.o:
	* Layer.d:
	* World.d:
	* World.o:
	* Scene.d:
	* Scene.o:
	* Layer.o:
	* Arc2D.d:
	* Arc2D.o:
	* MFNode.o:
	* MFNode.d:
	* Layout.o:
	* Switch.o:
	* Switch.d:
	* Parser.d:
	* GeoLOD.d:
	* GeoLOD.o:
	* Disk2D.d:
	* Disk2D.o:
	* Viewer.d:
	* Layout.d:
	* Inline.o:
	* Viewer.o:
	* SFVec2.d:
	* SFVec2.o:
	* SFTime.d:
	* SFTime.o:
	* SFVec4.d:
	* SFVec4.o:
	* SFVec3.d:
	* SFVec3.o:
	* Sphere.d:
	* Anchor.o:
	* Parser.o:
	* Sphere.o:
	* SFNode.d:
	* SFNode.o:
	* Router.d:
	* Router.o:
	* X3DType.o:
	* QuadSet.o:
	* QuadSet.d:
	* SFImage.d:
	* SFColor.o:
	* SFColor.d:
	* X3DType.d:
	* MFInt32.d:
	* X3DBase.d:
	* X3DBase.o:
	* Browser.o:
	* Browser.d:
	* MFInt32.o:
	* X3DNode.o:
	* CADPart.d:
	* CADPart.o:
	* CADFace.d:
	* CADFace.o:
	* X3DNode.d:
	* SFImage.o:
	* LayerSet.d:
	* Viewport.d:
	* LocalFog.d:
	* LayerSet.o:
	* Viewport.o:
	* Circle2D.o:
	* Cylinder.d:
	* HitArray.o:
	* HitArray.d:
	* X3DProto.o:
	* X3DProto.d:
	* RouteSet.d:
	* SFString.o:
	* SFString.d:
	* CADLayer.d:
	* LocalFog.o:
	* CADLayer.o:
	* RouteSet.o:
	* Circle2D.d:
	* X3DInput.o:
	* X3DInput.d:
	* Cylinder.o:
	* Generator.o:
	* Viewpoint.o:
	* Extrusion.o:
	* Generator.d:
	* X3DObject.d:
	* Billboard.o:
	* Extrusion.d:
	* HAnimSite.o:
	* WorldInfo.d:
	* WorldInfo.o:
	* Billboard.d:
	* Viewpoint.d:
	* SpotLight.d:
	* SignalPdu.o:
	* X3DParser.o:
	* Transform.d:
	* Transform.o:
	* SpotLight.o:
	* SignalPdu.d:
	* KeySensor.d:
	* X3DOutput.d:
	* X3DObject.o:
	* X3DParser.d:
	* X3DOutput.o:
	* KeySensor.o:
	* Collision.d:
	* GeoOrigin.o:
	* GeoOrigin.d:
	* Collision.o:
	* SFMatrix3.o:
	* SFMatrix3.d:
	* SFMatrix4.o:
	* SFMatrix4.d:
	* X3DScalar.o:
	* X3DScalar.d:
	* HAnimSite.d:
	* PointLight.d:
	* PointLight.o:
	* ProtoArray.d:
	* X3DContext.d:
	* ArcClose2D.d:
	* X3DContext.o:
	* Polyline2D.o:
	* ViewVolume.o:
	* ViewVolume.d:
	* Polyline2D.d:
	* LoadSensor.o:
	* MotionBlur.o:
	* MotionBlur.d:
	* ArcClose2D.o:
	* uncompress.d:
	* Background.d:
	* RouteArray.o:
	* uncompress.o:
	* HAnimJoint.o:
	* Background.o:
	* HAnimJoint.d:
	* X3DBrowser.o:
	* ProtoArray.o:
	* RouteArray.d:
	* X3DBrowser.d:
	* Polypoint2D.o:
	* Polypoint2D.d:
	* TimeTrigger.d:
	* X3DRenderer.d:
	* SFRotation4.o:
	* SFRotation4.d:
	* Rectangle2D.o:
	* StaticGroup.o:
	* StaticGroup.d:
	* Rectangle2D.d:
	* ReceiverPdu.o:
	* ProfileInfo.o:
	* ProfileInfo.d:
	* ExternProto.d:
	* X3DInfoNode.d:
	* X3DInfoNode.o:
	* SFColorRGBA.o:
	* SFColorRGBA.d:
	* ReceiverPdu.d:
	* ColorDamper.o:
	* X3DRenderer.o:
	* ExternProto.o:
	* ColorDamper.d:
	* ScreenGroup.d:
	* ScreenGroup.o:
	* TimeTrigger.o:
	* LayoutGroup.o:
	* LayoutGroup.d:
	* ArrayFields.d:
	* MetadataSet.d:
	* LayoutLayer.o:
	* LayoutLayer.d:
	* ArrayFields.o:
	* GeoMetadata.d:
	* GeoLocation.o:
	* GeoLocation.d:
	* CADAssembly.o:
	* CADAssembly.d:
	* GeoMetadata.o:
	* MetadataSet.o:
	* X3DLightNode.d:
	* ScalarChaser.o:
	* ScalarChaser.d:
	* GeoViewpoint.o:
	* GeoTransform.o:
	* GeoViewpoint.d:
	* X3DLightNode.o:
	* HAnimSegment.d:
	* X3DUrlObject.o:
	* HAnimSegment.o:
	* X3DConstants.o:
	* StringSensor.d:
	* StringSensor.o:
	* X3DConstants.d:
	* MetadataBool.d:
	* X3DChildNode.o:
	* X3DChildNode.d:
	* X3DFogObject.d:
	* X3DFogObject.o:
	* MetadataBool.o:
	* X3DLayerNode.d:
	* X3DLayerNode.o:
	* GeoTransform.d:
	* HAnimHumanoid.d:
	* NodeTypeArray.o:
	* HAnimHumanoid.o:
	* ComponentInfo.o:
	* X3DSensorNode.d:
	* X3DSensorNode.o:
	* X3DChaserNode.o:
	* X3DLayoutNode.o:
	* X3DChaserNode.d:
	* EaseInEaseOut.d:
	* FogCoordinate.d:
	* EaseInEaseOut.o:
	* X3DDamperNode.o:
	* FogCoordinate.o:
	* BooleanToggle.o:
	* TriangleSet2D.o:
	* MetadataFloat.o:
	* BooleanToggle.d:
	* MetadataFloat.d:
	* X3DDamperNode.d:
	* BooleanFilter.d:
	* X3DLayoutNode.d:
	* BooleanFilter.o:
	* GeoCoordinate.o:
	* GeoCoordinate.d:
	* TriangleSet2D.d:
	* ElevationGrid.d:
	* ElevationGrid.o:
	* ComponentInfo.d:
	* NodeTypeArray.d:
	* TransmitterPdu.d:
	* SupportedNodes.o:
	* TransmitterPdu.o:
	* ViewpointGroup.o:
	* ViewpointGroup.d:
	* X3DTriggerNode.d:
	* X3DTriggerNode.o:
	* ShapeContainer.d:
	* SupportedNodes.d:
	* ShapeContainer.o:
	* IndexedQuadSet.o:
	* IndexedQuadSet.d:
	* PointingDevice.d:
	* PointingDevice.o:
	* PositionChaser.d:
	* IndexedFaceSet.d:
	* HAnimDisplacer.o:
	* PositionChaser.o:
	* IndexedFaceSet.o:
	* OrthoViewpoint.o:
	* MetadataString.o:
	* MetadataString.d:
	* NavigationInfo.o:
	* NavigationInfo.d:
	* MetadataDouble.o:
	* IntegerTrigger.d:
	* OrthoViewpoint.d:
	* MetadataDouble.d:
	* IntegerTrigger.o:
	* EspduTransform.o:
	* PositionDamper.o:
	* EspduTransform.d:
	* BooleanTrigger.d:
	* BooleanTrigger.o:
	* PositionDamper.d:
	* HAnimDisplacer.d:
	* GeoTouchSensor.o:
	* GeoTouchSensor.d:
	* MetadataInteger.o:
	* X3DBindableNode.d:
	* TransformSensor.o:
	* TransformSensor.d:
	* X3DViewportNode.d:
	* X3DViewportNode.o:
	* MetadataInteger.d:
	* X3DGroupingNode.d:
	* X3DFollowerNode.o:
	* X3DFollowerNode.d:
	* X3DGroupingNode.o:
	* X3DPropertyNode.o:
	* X3DPropertyNode.d:
	* X3DBindableNode.o:
	* SupportedFields.d:
	* ScreenFontStyle.d:
	* ProximitySensor.o:
	* SupportedFields.o:
	* ScreenFontStyle.o:
	* ProximitySensor.d:
	* CoordinateDamper.o:
	* DISEntityManager.d:
	* CoordinateDamper.d:
	* VisibilitySensor.o:
	* VisibilitySensor.d:
	* BooleanSequencer.o:
	* ExternProtoArray.o:
	* PositionDamper2D.o:
	* DirectionalLight.o:
	* DirectionalLight.d:
	* GeoElevationGrid.o:
	* ExternProtoArray.d:
	* GeoElevationGrid.d:
	* X3DBoundedObject.d:
	* DISEntityManager.o:
	* X3DBoundedObject.o:
	* PositionChaser2D.o:
	* PositionChaser2D.d:
	* PositionDamper2D.d:
	* X3DViewpointNode.d:
	* TexCoordDamper2D.o:
	* X3DViewpointNode.o:
	* JavaScriptEngine.o:
	* JavaScriptEngine.d:
	* IntegerSequencer.d:
	* BooleanSequencer.d:
	* IntegerSequencer.o:
	* TexCoordDamper2D.d:
	* X3DSequencerNode.o:
	* X3DSequencerNode.d:
	* OrientationChaser.d:
	* OrientationChaser.o:
	* GarbargeCollector.o:
	* GarbargeCollector.d:
	* TextureBackground.o:
	* TextureBackground.d:
	* X3DMetadataObject.d:
	* X3DBackgroundNode.d:
	* X3DBackgroundNode.o:
	* ColorInterpolator.d:
	* ColorInterpolator.o:
	* X3DMetadataObject.o:
	* OrientationDamper.o:
	* OrientationDamper.d:
	* SupportedProfiles.d:
	* SupportedProfiles.o:
	* X3DFieldDefinition.o:
	* FieldDefinitionSet.o:
	* FieldDefinitionSet.d:
	* X3DBaseNode.h:
	* ScalarInterpolator.d:
	* ScalarInterpolator.o:
	* X3DFieldDefinition.d:
	* NormalInterpolator.o:
	* NormalInterpolator.d:
	* GeoProximitySensor.d:
	* GeoProximitySensor.o:
	* SupportedComponents.o:
	* X3DInterpolatorNode.o:
	* X3DInterpolatorNode.d:
	* ImageCubeMapTexture.d:
	* ImageCubeMapTexture.o:
	* SupportedComponents.d:
	* X3DExecutionContext.d:
	* X3DExecutionContext.o:
	* X3DBaseNode.cpp:
	* X3DPrototypeInstance.d:
	* DISEntityTypeMapping.o:
	* X3DNetworkSensorNode.o:
	* DISEntityTypeMapping.d:
	* FieldDefinitionArray.d:
	* InterfaceDeclaration.o:
	* InterfaceDeclaration.d:
	* FieldDefinitionArray.o:
	* PositionInterpolator.d:
	* X3DPrototypeInstance.o:
	* PositionInterpolator.o:
	* PositionInterpolator2D.d:
	* CoordinateInterpolator.d:
	* ComposedCubeMapTexture.d:
	* ComposedCubeMapTexture.o:
	* PositionInterpolator2D.o:
	* X3DKeyDeviceSensorNode.d:
	* X3DKeyDeviceSensorNode.o:
	* CoordinateInterpolator.o:
	* GeoPositionInterpolator.d:
	* GeoPositionInterpolator.o:
	* GeneratedCubeMapTexture.o:
	* GeneratedCubeMapTexture.d:
	* OrientationInterpolator.o:
	* OrientationInterpolator.d:
	* SplineScalarInterpolator.d:
	* CoordinateInterpolator2D.d:
	* SplineScalarInterpolator.o:
	* CoordinateInterpolator2D.o:
	* X3DEnvironmentTextureNode.d:
	* X3DEnvironmentTextureNode.o:
	* SplinePositionInterpolator.d:
	* X3DEnvironmentalSensorNode.o:
	* SplinePositionInterpolator.o:
	* X3DEnvironmentalSensorNode.d:
	* SplinePositionInterpolator2D.d:
	* SquadOrientationInterpolator.d:
	* X3DProductStructureChildNode.o:
	* SplinePositionInterpolator2D.o:
	* X3DProductStructureChildNode.d:
	* SquadOrientationInterpolator.o:
	* X3DLayerNode.h:
	* X3DLayerNode.cpp:
	* NavigationInfo.h:
	* NavigationInfo.cpp:
	* LocalFog.cpp: 

2012-10-30  Holger Seelig  <holger.seelig@yahoo.de>

	* X3D.h:
	* Fog.d:
	* X3D.d:
	* LOD.o:
	* LOD.d:
	* Fog.o:
	* X3D.cpp:
	* Box.d:
	* Box.o:
	* X3D.o:
	* Type.o:
	* Type.d:
	* Cone.o:
	* Cone.d:
	* Arc2D.d:
	* RegEx.o:
	* Proto.d:
	* Proto.o:
	* Route.d:
	* World.d:
	* World.o:
	* Scene.o:
	* Route.o:
	* Scene.d:
	* Image.o:
	* Layer.d:
	* Layer.o:
	* Image.d:
	* Group.o:
	* Group.d:
	* Arc2D.o:
	* Error.o:
	* Sphere.o:
	* Switch.d:
	* Sphere.d:
	* SFVec4.o:
	* Anchor.o:
	* Switch.o:
	* Disk2D.o:
	* Viewer.o:
	* GeoLOD.d:
	* Disk2D.d:
	* GeoLOD.o:
	* Viewer.d:
	* SFVec4.d:
	* Layout.d:
	* Parser.o:
	* Router.d:
	* Inline.o:
	* MFNode.d:
	* Layout.o:
	* Parser.d:
	* MFNode.o:
	* Router.o:
	* SFVec2.o:
	* SFVec2.d:
	* SFVec3.o:
	* SFVec3.d:
	* SFNode.o:
	* SFNode.d:
	* SFTime.o:
	* SFTime.d:
	* X3DType.d:
	* SFImage.d:
	* X3DBase.d:
	* X3DNode.o:
	* CADFace.o:
	* CADPart.d:
	* CADPart.o:
	* MFInt32.d:
	* SFImage.o:
	* MFInt32.o:
	* QuadSet.d:
	* SFColor.d:
	* QuadSet.o:
	* X3DType.o:
	* Browser.d:
	* X3DBase.o:
	* X3DNode.d:
	* SFColor.o:
	* Browser.o:
	* CADFace.d:
	* RouteSet.d:
	* Circle2D.d:
	* CADLayer.d:
	* X3DInput.o:
	* Cylinder.d:
	* CADLayer.o:
	* RouteSet.o:
	* Circle2D.o:
	* Viewport.o:
	* HitArray.o:
	* LayerSet.d:
	* Viewport.d:
	* HitArray.d:
	* X3DProto.d:
	* X3DProto.o:
	* Fields.h:
	* X3DInput.d:
	* libtitania-x3d.cproj:
	* LocalFog.d:
	* LocalFog.o:
	* Cylinder.o:
	* SFString.o:
	* LayerSet.o:
	* SFString.d:
	* X3DScalar.o:
	* X3DScalar.d:
	* Extrusion.d:
	* Extrusion.o:
	* SignalPdu.o:
	* SpotLight.d:
	* Transform.o:
	* Transform.d:
	* SpotLight.o:
	* Viewpoint.d:
	* Viewpoint.o:
	* SFMatrix3.d:
	* SFMatrix3.o:
	* SignalPdu.d:
	* SFMatrix4.o:
	* SFMatrix4.d:
	* KeySensor.d:
	* KeySensor.o:
	* HAnimSite.o:
	* WorldInfo.o:
	* HAnimSite.d:
	* X3DObject.d:
	* X3DOutput.d:
	* X3DOutput.o:
	* Collision.o:
	* X3DObject.o:
	* Collision.d:
	* WorldInfo.d:
	* X3DParser.d:
	* Billboard.o:
	* Billboard.d:
	* GeoOrigin.o:
	* Generator.d:
	* Generator.o:
	* X3DParser.o:
	* GeoOrigin.d:
	* HAnimJoint.o:
	* HAnimJoint.d:
	* Background.o:
	* ProtoArray.o:
	* ProtoArray.d:
	* Polyline2D.o:
	* X3DContext.o:
	* RouteArray.d:
	* RouteArray.o:
	* MotionBlur.o:
	* MotionBlur.d:
	* LoadSensor.o:
	* Polyline2D.d:
	* PointLight.o:
	* PointLight.d:
	* X3DContext.d:
	* X3DBrowser.o:
	* X3DBrowser.d:
	* ArcClose2D.o:
	* uncompress.o:
	* Background.d:
	* ViewVolume.o:
	* ArcClose2D.d:
	* ArrayFields.d:
	* StaticGroup.d:
	* ColorDamper.d:
	* StaticGroup.o:
	* LayoutGroup.o:
	* LayoutLayer.d:
	* ReceiverPdu.d:
	* LayoutLayer.o:
	* ScreenGroup.o:
	* CADAssembly.o:
	* ScreenGroup.d:
	* Polypoint2D.o:
	* Polypoint2D.d:
	* CADAssembly.d:
	* MetadataSet.o:
	* MetadataSet.d:
	* ProfileInfo.o:
	* ProfileInfo.d:
	* X3DInfoNode.d:
	* ReceiverPdu.o:
	* ExternProto.d:
	* TimeTrigger.d:
	* TimeTrigger.o:
	* X3DRenderer.o:
	* X3DInfoNode.o:
	* GeoLocation.d:
	* GeoMetadata.d:
	* GeoMetadata.o:
	* SFColorRGBA.o:
	* ExternProto.o:
	* SFColorRGBA.d:
	* GeoLocation.o:
	* SFRotation4.o:
	* X3DRenderer.d:
	* SFRotation4.d:
	* Type.h:
	* LayoutGroup.d:
	* Rectangle2D.d:
	* Rectangle2D.o:
	* ColorDamper.o:
	* ArrayFields.o:
	* Error.h:
	* X3DFogObject.d:
	* X3DChildNode.d:
	* X3DFogObject.o:
	* X3DLayerNode.d:
	* X3DChildNode.o:
	* ScalarChaser.o:
	* X3DUrlObject.o:
	* Time.h:
	* ScalarChaser.d:
	* X3DConstants.o:
	* X3DLightNode.o:
	* X3DConstants.d:
	* HAnimSegment.d:
	* HAnimSegment.o:
	* MetadataBool.d:
	* MetadataBool.o:
	* StringSensor.d:
	* StringSensor.o:
	* JavaScript.h:
	* Components.h:
	* GeoTransform.o:
	* GeoViewpoint.d:
	* GeoViewpoint.o:
	* X3DLightNode.d:
	* GeoTransform.d:
	* X3DLayerNode.o:
	* Image.h:
	* X3DLayoutNode.o:
	* HAnimHumanoid.d:
	* HAnimHumanoid.o:
	* Type.cpp:
	* X3DSensorNode.d:
	* ComponentInfo.d:
	* ComponentInfo.o:
	* X3DChaserNode.d:
	* Output.h:
	* NodeTypeArray.o:
	* X3DChaserNode.o:
	* GeoCoordinate.d:
	* X3DDamperNode.d:
	* ElevationGrid.d:
	* ElevationGrid.o:
	* X3DLayoutNode.d:
	* X3DDamperNode.o:
	* NodeTypeArray.d:
	* Array.h:
	* BooleanFilter.o:
	* MetadataFloat.o:
	* MetadataFloat.d:
	* BooleanFilter.d:
	* EaseInEaseOut.d:
	* EaseInEaseOut.o:
	* GeoCoordinate.o:
	* BooleanToggle.d:
	* BooleanToggle.o:
	* Hit.h:
	* FogCoordinate.o:
	* X3DSensorNode.o:
	* FogCoordinate.d:
	* TriangleSet2D.o:
	* TriangleSet2D.d:
	* IndexedFaceSet.o:
	* MetadataString.o:
	* NavigationInfo.d:
	* SupportedNodes.d:
	* ShapeContainer.d:
	* X3DTriggerNode.d:
	* X3DTriggerNode.o:
	* IndexedFaceSet.d:
	* NavigationInfo.o:
	* SupportedNodes.o:
	* ShapeContainer.o:
	* MetadataDouble.o:
	* IntegerTrigger.o:
	* IntegerTrigger.d:
	* RegEx.h:
	* X3DBase.h:
	* MetadataDouble.d:
	* MetadataString.d:
	* BooleanTrigger.d:
	* BooleanTrigger.o:
	* JavaScript.cpp:
	* IndexedQuadSet.o:
	* IndexedQuadSet.d:
	* PositionChaser.d:
	* GeoTouchSensor.d:
	* HAnimDisplacer.d:
	* PositionChaser.o:
	* HAnimDisplacer.o:
	* ViewpointGroup.o:
	* GeoTouchSensor.o:
	* TransmitterPdu.d:
	* PointingDevice.d:
	* Error.cpp:
	* EspduTransform.d:
	* PointingDevice.o:
	* EspduTransform.o:
	* OrthoViewpoint.d:
	* PositionDamper.o:
	* OrthoViewpoint.o:
	* X3DType.h:
	* PositionDamper.d:
	* ViewpointGroup.d:
	* TransmitterPdu.o:
	* ScreenFontStyle.o:
	* X3DGroupingNode.d:
	* Parser.h:
	* ScreenFontStyle.d:
	* Output.cpp:
	* Image.cpp:
	* SFVec4.h:
	* SFVec3.h:
	* SFVec2.h:
	* MetadataInteger.d:
	* SFTime.h:
	* X3DGroupingNode.o:
	* MetadataInteger.o:
	* X3DFollowerNode.d:
	* SupportedFields.d:
	* ProximitySensor.o:
	* X3DViewportNode.d:
	* ProximitySensor.d:
	* X3DPropertyNode.d:
	* SFNode.h:
	* X3DFollowerNode.o:
	* SupportedFields.o:
	* X3DPropertyNode.o:
	* X3DBindableNode.d:
	* X3DViewportNode.o:
	* TransformSensor.d:
	* MFNode.h:
	* Numbers.h:
	* X3DInput.h:
	* Route.h:
	* TransformSensor.o:
	* X3DBindableNode.o:
	* TexCoordDamper2D.d:
	* TexCoordDamper2D.o:
	* X3DBoundedObject.d:
	* ObjectSet.h:
	* CoordinateDamper.d:
	* X3DType.cpp:
	* Requester.h:
	* GeoElevationGrid.o:
	* CoordinateDamper.o:
	* DISEntityManager.o:
	* ExternProtoArray.d:
	* X3DSequencerNode.o:
	* JavaScriptEngine.d:
	* JavaScriptEngine.o:
	* X3DSequencerNode.d:
	* RegEx.cpp:
	* X3DOutput.h:
	* DirectionalLight.o:
	* ExternProtoArray.o:
	* GeoElevationGrid.d:
	* DirectionalLight.d:
	* DISEntityManager.d:
	* Router.h:
	* IntegerSequencer.d:
	* IntegerSequencer.o:
	* X3DBoundedObject.o:
	* X3DBase.cpp:
	* Geometry.h:
	* VisibilitySensor.d:
	* MFInt32.h:
	* SFColor.h:
	* PositionDamper2D.o:
	* VisibilitySensor.o:
	* X3DViewpointNode.d:
	* X3DViewpointNode.o:
	* BooleanSequencer.d:
	* BooleanSequencer.o:
	* DIS.h:
	* PositionChaser2D.d:
	* PositionChaser2D.o:
	* SFImage.h:
	* PositionDamper2D.d:
	* Time.h:
	* World.h:
	* SFVec2.cpp:
	* Route.cpp:
	* SFNode.cpp:
	* ColorInterpolator.o:
	* SFString.h:
	* SFTime.cpp:
	* X3DMetadataObject.d:
	* GarbargeCollector.d:
	* ColorInterpolator.d:
	* Text.h:
	* X3DInput.cpp:
	* Core.h:
	* X3DBackgroundNode.o:
	* Parser.cpp:
	* Scene.h:
	* X3DMetadataObject.o:
	* Proto.h:
	* GarbargeCollector.o:
	* Surface.h:
	* OrientationChaser.d:
	* SupportedProfiles.d:
	* OrientationDamper.d:
	* Browser.h:
	* OrientationChaser.o:
	* SupportedProfiles.o:
	* OrientationDamper.o:
	* TextureBackground.d:
	* TextureBackground.o:
	* SFVec3.cpp:
	* X3DBackgroundNode.d:
	* MFNode.cpp:
	* SFVec4.cpp:
	* SFColor.cpp:
	* SFMatrix3.h:
	* Viewer.cpp:
	* X3DParser.h:
	* X3DRoute.h:
	* Matrix.h:
	* X3DBaseNode.h:
	* GeoProximitySensor.o:
	* Router.cpp:
	* ObjectSet.cpp:
	* BaseNodeSet.h:
	* HitArray.h:
	* X3DFieldDefinition.o:
	* SFImage.cpp:
	* SFMatrix4.h:
	* RequesterId.h:
	* MFInt32.cpp:
	* GeoProximitySensor.d:
	* RouteSet.h:
	* NURBS.h:
	* Shape.h:
	* X3DObject.cpp:
	* ScalarInterpolator.d:
	* X3DContext.h:
	* X3DOutput.cpp:
	* NormalInterpolator.d:
	* X3DScalar.h:
	* ScalarInterpolator.o:
	* X3DFieldDefinition.d:
	* NormalInterpolator.o:
	* FieldDefinitionSet.o:
	* Sound.h:
	* X3DExecutionContext.o:
	* X3DInterpolatorNode.d:
	* SFString.cpp:
	* X3DExecutionContext.d:
	* Browser.cpp:
	* Surface.cpp:
	* H-Anim.h:
	* Proto.cpp:
	* ImageCubeMapTexture.o:
	* ImageCubeMapTexture.d:
	* X3DConstants.h:
	* X3DInterpolatorNode.o:
	* Layout.h:
	* SupportedComponents.d:
	* SupportedComponents.o:
	* World.cpp:
	* Scene.cpp:
	* SFRotation4.h:
	* PositionInterpolator.d:
	* FieldDefinitionArray.o:
	* InterfaceDeclaration.o:
	* FieldDefinitionArray.d:
	* DISEntityTypeMapping.o:
	* geturl.h:
	* ArrayFields.h:
	* SFColorRGBA.h:
	* SFMatrix3.cpp:
	* X3DScalar.cpp:
	* X3DBasicNode.h:
	* Picking.h:
	* X3DBrowser.h:
	* MotionBlur.h:
	* DISEntityTypeMapping.d:
	* X3DBaseNode.cpp:
	* X3DParser.cpp:
	* X3DContext.cpp:
	* SFMatrix4.cpp:
	* X3DProto.h:
	* RouteSet.cpp:
	* InterfaceDeclaration.d:
	* X3DScene.h:
	* Shaders.h:
	* RouteArray.h:
	* X3DPrototypeInstance.o:
	* X3DPrototypeInstance.d:
	* HitArray.cpp:
	* X3DNetworkSensorNode.o:
	* PositionInterpolator.o:
	* jsfield.h:
	* BaseNodeSet.cpp:
	* NodeTypeArray.h:
	* jsFields.h:
	* jsstring.h:
	* X3DArrayField.h:
	* Lighting.h:
	* Layering.h:
	* X3DConstants.cpp:
	* Grouping.h:
	* NodeArray.h:
	* Scripting.h:
	* RouteArray.cpp:
	* X3DKeyDeviceSensorNode.o:
	* X3DKeyDeviceSensorNode.d:
	* Text.h:
	* Texturing.h:
	* PositionInterpolator2D.o:
	* ViewVolume.h:
	* geturl.cpp:
	* X3DProto.cpp:
	* Followers.h:
	* PositionInterpolator2D.d:
	* BasicNodeArray.h:
	* SFColorRGBA.cpp:
	* X3DBasicNode.cpp:
	* SFRotation4.cpp:
	* X3DScene.cpp:
	* MotionBlur.cpp:
	* ArrayFields.cpp:
	* ProtoArray.h:
	* CoordinateInterpolator.o:
	* CoordinateInterpolator.d:
	* X3DBrowser.cpp:
	* jsfield.cpp:
	* ComposedCubeMapTexture.o:
	* Rendering.h:
	* jsGlobals.h:
	* jsBrowser.h:
	* ComposedCubeMapTexture.d:
	* Geometry3D.h:
	* jsstring.cpp:
	* Geometry2D.h:
	* ExternProto.h:
	* Generator.h:
	* GarbageCollector.h:
	* jsX3DField.h:
	* jsX3DScene.h:
	* Geospatial.h:
	* Navigation.h:
	* GeoPositionInterpolator.o:
	* GeneratedCubeMapTexture.o:
	* OrientationInterpolator.o:
	* Networking.h:
	* OrientationInterpolator.d:
	* NodeTypeArray.cpp:
	* GeneratedCubeMapTexture.d:
	* NodeArray.cpp:
	* X3DRenderer.h:
	* GeoPositionInterpolator.d:
	* Text.cpp:
	* Texturing3D.h:
	* jsGlobals.cpp:
	* CoordinateInterpolator2D.d:
	* CoordinateInterpolator2D.o:
	* CADGeometry.h:
	* jsX3DObject.h:
	* Sound.h:
	* Shape.h:
	* jsBrowser.cpp:
	* BasicNodeArray.cpp:
	* PointingDevice.h:
	* SplineScalarInterpolator.o:
	* uncompress.h:
	* SplineScalarInterpolator.d:
	* ViewVolume.cpp:
	* ProtoArray.cpp:
	* X3DEnvironmentTextureNode.o:
	* jsX3DScene.cpp:
	* ExternProto.cpp:
	* X3DRenderer.cpp:
	* Generator.cpp:
	* X3DEnvironmentTextureNode.d:
	* jsX3DField.cpp:
	* X3DNode.h:
	* jsX3DObject.cpp:
	* ShapeContainer.h:
	* LightContainer.h:
	* Sound.cpp:
	* uncompress.cpp:
	* PointingDevice.cpp:
	* X3DEnvironmentalSensorNode.d:
	* GarbargeCollector.cpp:
	* SplinePositionInterpolator.o:
	* SplinePositionInterpolator.d:
	* X3DEnvironmentalSensorNode.o:
	* Layout.h:
	* Interpolation.h:
	* X3DFieldDefinition.h:
	* FieldDefinitionSet.h:
	* SignalPdu.h:
	* Shape.cpp:
	* Layer.h:
	* Group.h:
	* X3DBrowserContext.h:
	* NurbsSet.h:
	* WorldInfo.h:
	* LOD.h:
	* ProfileInfo.h:
	* X3DNode.cpp:
	* Box.h:
	* EventUtilities.h:
	* Material.h:
	* FontStyle.h:
	* jsMFTime.h:
	* SplinePositionInterpolator2D.o:
	* jsMFNode.h:
	* SplinePositionInterpolator2D.d:
	* Layout.cpp:
	* Contour2D.h:
	* SquadOrientationInterpolator.d:
	* ReceiverPdu.h:
	* TimeSensor.h:
	* jsX3DArrayField.h:
	* jsMFBool.h:
	* KeyDeviceSensor.h:
	* InterfaceDeclaration.h:
	* Switch.h:
	* SquadOrientationInterpolator.o:
	* Cone.h:
	* SignalPdu.cpp:
	* X3DFieldDefinition.cpp:
	* FieldDefinitionArray.h:
	* X3DProductStructureChildNode.o:
	* X3DProductStructureChildNode.d:
	* ShapeContainer.cpp:
	* jsSFNode.h:
	* FieldDefinitionSet.cpp:
	* AudioClip.h:
	* BindableNodeList.h:
	* ExternProtoArray.h:
	* BrowserEnvironment.h:
	* ParticleSystems.h:
	* Color.h:
	* jsSFVec3d.h:
	* Normal.h:
	* Group.cpp:
	* BindableNodeStack.h:
	* jsSFVec2d.h:
	* jsSFVec2f.h:
	* RigidBodyPhysics.h:
	* jsSFVec4d.h:
	* HAnimSite.h:
	* jsSFVec4f.h:
	* Layer.cpp:
	* ExportedNodeArray.h:
	* jsSFVec3f.h:
	* ImportedNodeArray.h:
	* Box.cpp:
	* jsMFVec3d.h:
	* jsMFVec3f.h:
	* jsMFVec2d.h:
	* jsMFVec2f.h:
	* jsSFColor.h:
	* jsSFImage.h:
	* jsMFVec4d.h:
	* jsMFVec4f.h:
	* jsMFInt32.h:
	* Appearance.h:
	* FontStyle.cpp:
	* Script.h:
	* Arc2D.h:
	* jsMFFloat.h:
	* jsMFImage.h:
	* jsMFColor.h:
	* Material.cpp:
	* ProfileInfo.cpp:
	* X3DInfoNode.h:
	* NurbsSet.cpp:
	* NurbsCurve.h:
	* ComponentInfo.h:
	* JavaScriptEngine.h:
	* X3DBrowserContext.cpp:
	* WorldInfo.cpp:
	* CubeMapTexturing.h:
	* MetadataSet.h:
	* LOD.cpp:
	* Sphere.h:
	* jsMFNode.cpp:
	* Inline.h:
	* GeoLOD.h:
	* jsMFString.h:
	* jsMFTime.cpp:
	* Anchor.h:
	* jsMFBool.cpp:
	* jsSFNode.cpp:
	* TimeSensor.cpp:
	* ExternProtoArray.cpp:
	* jsMFDouble.h:
	* Contour2D.cpp:
	* Cone.cpp:
	* AudioClip.cpp:
	* X3DChildNode.h:
	* Disk2D.h:
	* MetadataBool.h:
	* FieldDefinitionArray.cpp:
	* HAnimJoint.h:
	* BrowserEnvironment.cpp:
	* SupportedNodes.h:
	* LayerSet.h:
	* Color.cpp:
	* ReceiverPdu.cpp:
	* InterfaceDeclaration.cpp:
	* LineSet.h:
	* Switch.cpp:
	* BindableNodeList.cpp:
	* Viewport.h:
	* jsMFImage.cpp:
	* TransmitterPdu.h:
	* jsMFInt32.cpp:
	* jsSFColor.cpp:
	* LightContainerArray.h:
	* jsMFFloat.cpp:
	* jsMFVec2f.cpp:
	* jsSFImage.cpp:
	* ScreenGroup.h:
	* X3DInfoNode.cpp:
	* NurbsCurve.cpp:
	* jsMFVec2d.cpp:
	* jsMFVec4d.cpp:
	* jsMFVec3f.cpp:
	* jsMFVec3d.cpp:
	* X3DShapeNode.h:
	* X3DSoundNode.h:
	* NurbsCurve2D.h:
	* jsMFVec4f.cpp:
	* SpotLight.h:
	* Normal.cpp:
	* FieldTypesArray.h:
	* Transform.h:
	* jsSFVec3f.cpp:
	* MetadataSet.cpp:
	* PointSet.h:
	* jsSFVec3d.cpp:
	* X3DSensorNode.h:
	* jsSFVec4d.cpp:
	* JavaScriptEngine.cpp:
	* SupportedFields.h:
	* BindableNodeStack.cpp:
	* MetadataFloat.h:
	* HAnimSite.cpp:
	* jsSFVec4f.cpp:
	* X3DExecutionContext.h:
	* EspduTransform.h:
	* Arc2D.cpp:
	* jsProfileInfoArray.h:
	* LayoutGroup.h:
	* ShaderPart.h:
	* LayoutLayer.h:
	* jsMFColor.cpp:
	* Appearance.cpp:
	* jsSFVec2d.cpp:
	* jsSFVec2f.cpp:
	* ComponentInfo.cpp:
	* Script.cpp:
	* MetadataString.h:
	* jsSFMatrix3f.h:
	* jsSFMatrix3d.h:
	* CADPart.h:
	* jsVrmlMatrix.h:
	* MetadataDouble.h:
	* CADFace.h:
	* jsSFRotation.h:
	* jsSFMatrix4f.h:
	* jsSFMatrix4d.h:
	* X3DChildNode.cpp:
	* MetadataBool.cpp:
	* QuadSet.h:
	* Sphere.cpp:
	* GeoLOD.cpp:
	* SupportedNodes.cpp:
	* Disk2D.cpp:
	* Cylinder.h:
	* Anchor.cpp:
	* HAnimJoint.cpp:
	* HAnimSegment.h:
	* ColorRGBA.h:
	* ClipPlane.h:
	* LineSet.cpp:
	* LayerSet.cpp:
	* Circle2D.h:
	* Inline.cpp:
	* ProfileInfoArray.h:
	* jsMFMatrix4f.h:
	* PointLight.h:
	* jsMFString.cpp:
	* jsMFRotation.h:
	* jsMFMatrix3d.h:
	* jsMFDouble.cpp:
	* Viewport.cpp:
	* jsMFMatrix4d.h:
	* EnvironmentalSensor.h:
	* jsMFMatrix3f.h:
	* X3DBindableNode.h:
	* NurbsCurve2D.cpp:
	* SpotLight.cpp:
	* jsX3DFieldDefinition.h:
	* Viewpoint.h:
	* Collision.h:
	* Billboard.h:
	* CADLayer.h:
	* FillProperties.h:
	* LineProperties.h:
	* X3DShapeNode.cpp:
	* X3DSoundNode.cpp:
	* ShaderPart.cpp:
	* PointingDeviceSensor.h:
	* MetadataInteger.h:
	* MetadataFloat.cpp:
	* PointSet.cpp:
	* Coordinate.h:
	* Transform.cpp:
	* StaticGroup.h:
	* HAnimHumanoid.h:
	* SupportedProfiles.h:
	* X3DExecutionContext.cpp:
	* GeoOrigin.h:
	* TransmitterPdu.cpp:
	* jsSFColorRGBA.h:
	* EnvironmentalEffects.h:
	* Extrusion.h:
	* jsMFColorRGBA.h:
	* SupportedFields.cpp:
	* jsProfileInfoArray.cpp:
	* LayoutGroup.cpp:
	* LayoutLayer.cpp:
	* X3DLayoutNode.h:
	* ScreenGroup.cpp:
	* X3DPropertyNode.h:
	* DISEntityManager.h:
	* EspduTransform.cpp:
	* jsComponentInfoArray.h:
	* X3DSensorNode.cpp:
	* FieldTypesArray.cpp:
	* PointLight.cpp:
	* X3DLightNode.h:
	* HAnimDisplacer.h:
	* HAnimSegment.cpp:
	* LoadSensor.h:
	* ColorRGBA.cpp:
	* TriangleSet.h:
	* PickableGroup.h:
	* ClipPlane.cpp:
	* Cylinder.cpp:
	* QuadSet.cpp:
	* MetadataDouble.cpp:
	* CADFace.cpp:
	* CADPart.cpp:
	* MetadataString.cpp:
	* Circle2D.cpp:
	* Polyline2D.h:
	* ColorDamper.h:
	* ArcClose2D.h:
	* jsSFMatrix3d.cpp:
	* jsSFMatrix3f.cpp:
	* jsMFMatrix4f.cpp:
	* jsMFRotation.cpp:
	* jsSFMatrix4d.cpp:
	* jsVrmlMatrix.cpp:
	* jsX3DExecutionContext.h:
	* jsSFMatrix4f.cpp:
	* jsSFRotation.cpp:
	* jsMFMatrix4d.cpp:
	* X3DShaderNode.h:
	* X3DMaterialNode.h:
	* ProgramShader.h:
	* ShaderProgram.h:
	* X3DFontStyleNode.h:
	* jsMFMatrix3d.cpp:
	* jsMFMatrix3f.cpp:
	* ComponentInfoArray.h:
	* ProfileInfoArray.cpp:
	* DISEntityManager.cpp:
	* PackagedShader.h:
	* DISEntityMapping.cpp:
	* GeoMetadata.h:
	* LinePickSensor.h:
	* ScreenFontStyle.h:
	* X3DMetadataObject.h:
	* ScalarChaser.h:
	* X3DPropertyNode.cpp:
	* X3DLayoutNode.cpp:
	* GeoLocation.h:
	* X3DColorNode.h:
	* StaticGroup.cpp:
	* MultiTexture.h:
	* MovieTexture.h:
	* ImageTexture.h:
	* Coordinate.cpp:
	* GeoOrigin.cpp:
	* FillProperties.cpp:
	* PixelTexture.h:
	* LineProperties.cpp:
	* TwoSidedMaterial.h:
	* HAnimHumanoid.cpp:
	* Collision.cpp:
	* SupportedComponents.h:
	* SupportedProfiles.cpp:
	* Polypoint2D.h:
	* BrowserOptions.h:
	* Billboard.cpp:
	* Viewpoint.cpp:
	* jsFieldDefinitionArray.h:
	* jsX3DFieldDefinition.cpp:
	* jsMFColorRGBA.cpp:
	* jsSFColorRGBA.cpp:
	* jsComponentInfoArray.cpp:
	* CADLayer.cpp:
	* ComposedShader.h:
	* MetadataInteger.cpp:
	* X3DBindableNode.cpp:
	* CoordinateDouble.h:
	* Rectangle2D.h:
	* X3DNormalNode.h:
	* Polyline2D.cpp:
	* ShaderProgram.cpp:
	* X3DMaterialNode.cpp:
	* X3DAppearanceNode.h:
	* TriangleSet.cpp:
	* X3DDamperNode.h:
	* ArcClose2D.cpp:
	* X3DScriptNode.h:
	* X3DShaderNode.cpp:
	* ProgramShader.cpp:
	* X3DChaserNode.h:
	* GeoTransform.h:
	* NurbsPatchSurface.h:
	* CADAssembly.h:
	* ContourPolyline2D.h:
	* PickableGroup.cpp:
	* X3DLightNode.cpp:
	* NurbsSweptSurface.h:
	* ComponentInfoArray.cpp:
	* jsX3DExecutionContext.cpp:
	* LoadSensor.cpp:
	* NurbsSwungSurface.h:
	* X3DUrlObject.h:
	* ColorDamper.cpp:
	* X3DLayerNode.cpp:
	* HAnimDisplacer.cpp:
	* GeoViewpoint.h:
	* X3DFontStyleNode.cpp:
	* PointPickSensor.h:
	* Rectangle2D.cpp:
	* IndexedLineSet.h:
	* LinePickSensor.cpp:
	* X3DGroupingNode.h:
	* GeoMetadata.cpp:
	* Polypoint2D.cpp:
	* Contact.h:
	* TriangleFanSet.h:
	* GeoCoordinate.h:
	* VolumePickSensor.h:
	* ScreenFontStyle.cpp:
	* GeoLocation.cpp:
	* CoordinateDouble.cpp:
	* X3DColorNode.cpp:
	* TriangleSet2D.h:
	* ElevationGrid.h:
	* X3DViewportNode.h:
	* PositionChaser.h:
	* TwoSidedMaterial.cpp:
	* ImageTexture.cpp:
	* X3DSoundSourceNode.h:
	* jsFieldDefinitionArray.cpp:
	* ScalarChaser.cpp:
	* PositionDamper.h:
	* PackagedShader.cpp:
	* DISEntityTypeMapping.h:
	* Fog.h:
	* X3DMetadataObject.cpp:
	* X3DTextureNode.h:
	* MultiTexture.cpp:
	* MovieTexture.cpp:
	* PixelTexture.cpp:
	* SupportedComponents.cpp:
	* ComposedShader.cpp:
	* NurbsTrimmedSurface.h:
	* X3DPickSensorNode.h:
	* X3DDamperNode.cpp:
	* PointPickSensor.cpp:
	* KeySensor.h:
	* X3DBoundedObject.h:
	* ViewpointGroup.h:
	* X3DScriptNode.cpp:
	* X3DPickableObject.h:
	* X3DTimeDependentNode.h:
	* NurbsSweptSurface.cpp:
	* NurbsPatchSurface.cpp:
	* CADAssembly.cpp:
	* BrowserProperties.h:
	* NurbsSwungSurface.cpp:
	* ContourPolyline2D.cpp:
	* X3DFollowerNode.h:
	* NavigationInfo.h:
	* X3DPrototypeInstance.h:
	* X3DUrlObject.cpp:
	* DirectionalLight.h:
	* X3DAppearanceNode.cpp:
	* GeoTouchSensor.h:
	* GeoTransform.cpp:
	* OrthoViewpoint.h:
	* X3DGeometryNode.h:
	* X3DNormalNode.cpp:
	* IndexedFaceSet.h:
	* GeoViewpoint.cpp:
	* X3DChaserNode.cpp:
	* PositionDamper.cpp:
	* BallJoint.h:
	* RigidBody.h:
	* PositionChaser2D.h:
	* ElevationGrid.cpp:
	* TriangleStripSet.h:
	* ImageTexture3D.h:
	* TexCoordDamper2D.h:
	* TriangleSet2D.cpp:
	* IndexedLineSet.cpp:
	* PositionDamper2D.h:
	* PixelTexture3D.h:
	* GeoCoordinate.cpp:
	* IndexedQuadSet.h:
	* X3DTextureNode.cpp:
	* VolumePickSensor.cpp:
	* X3DGroupingNode.cpp:
	* TimeTrigger.h:
	* CoordinateDamper.h:
	* X3DSoundSourceNode.cpp:
	* TriangleFanSet.cpp:
	* Contact.cpp:
	* TextureTransform.h:
	* X3DViewportNode.cpp:
	* DISEntityTypeMapping.cpp:
	* PositionChaser.cpp:
	* Fog.cpp:
	* BrowserProperties.cpp:
	* NurbsTrimmedSurface.cpp:
	* NavigationInfo.cpp:
	* GeoTouchSensor.cpp:
	* X3DBoundedObject.cpp:
	* OrientationDamper.h:
	* X3DFollowerNode.cpp:
	* IndexedFaceSet.cpp:
	* GeoElevationGrid.h:
	* DirectionalLight.cpp:
	* X3DPrototypeInstance.cpp:
	* RenderingProperties.h:
	* OrientationChaser.h:
	* EaseInEaseOut.h:
	* KeySensor.cpp:
	* MotorJoint.h:
	* X3DGeometryNode.cpp:
	* X3DTimeDependentNode.cpp:
	* X3DCoordinateNode.h:
	* PrimitivePickSensor.h:
	* X3DPickSensorNode.cpp:
	* TextureCoordinate.h:
	* X3DPickableObject.cpp:
	* ViewpointGroup.cpp:
	* OrthoViewpoint.cpp:
	* ConeEmitter.h:
	* TextureProperties.h:
	* X3DViewpointNode.h:
	* PointEmitter.h:
	* SliderJoint.h:
	* TextureTransform.cpp:
	* RigidBody.cpp:
	* X3DTexture2DNode.cpp:
	* IndexedTriangleSet.h:
	* PixelTexture3D.cpp:
	* IndexedQuadSet.cpp:
	* ImageTexture3D.cpp:
	* BallJoint.cpp:
	* StringSensor.h:
	* TriangleStripSet.cpp:
	* FloatVertexAttribute.h:
	* NurbsTextureCoordinate.h:
	* CoordinateDamper.cpp:
	* X3DTexture3DNode.h:
	* BooleanFilter.h:
	* BooleanToggle.h:
	* TimeTrigger.cpp:
	* X3DAppearanceChildNode.h:
	* PositionChaser2D.cpp:
	* PositionDamper2D.cpp:
	* TexCoordDamper2D.cpp:
	* QuadSphereProperties.h:
	* ComposedTexture3D.h:
	* LocalFog.h:
	* GeoProximitySensor.h:
	* BooleanTrigger.h:
	* IntegerTrigger.h:
	* MotorJoint.cpp:
	* GeoElevationGrid.cpp:
	* OrientationDamper.cpp:
	* OrientationChaser.cpp:
	* X3DTriggerNode.h:
	* TextureCoordinate.cpp:
	* TextureProperties.cpp:
	* X3DCoordinateNode.cpp:
	* EaseInEaseOut.cpp:
	* VolumeEmitter.h:
	* ConeEmitter.cpp:
	* X3DSpherePropertyNode.h:
	* PrimitivePickSensor.cpp:
	* X3DViewpointNode.cpp:
	* ParticleSystem.h:
	* QuadSphereProperties.cpp:
	* FloatVertexAttribute.cpp:
	* PointEmitter.cpp:
	* TextureTransform3D.h:
	* SurfaceEmitter.h:
	* SliderJoint.cpp:
	* NurbsTextureCoordinate.cpp:
	* X3DTexture3DNode.cpp:
	* X3DNurbsControlCurveNode.h:
	* BooleanFilter.cpp:
	* BooleanToggle.cpp:
	* Matrix4VertexAttribute.h:
	* Matrix3VertexAttribute.h:
	* X3DVertexAttributeNode.h:
	* NurbsSurfaceInterpolator.h:
	* X3DAppearanceChildNode.cpp:
	* IndexedTriangleSet.cpp:
	* StringSensor.cpp:
	* IntegerTrigger.cpp:
	* IntegerSequencer.h:
	* PolylineEmitter.h:
	* BooleanSequencer.h:
	* GeoProximitySensor.cpp:
	* IndexedTriangleFanSet.h:
	* BooleanTrigger.cpp:
	* NurbsPositionInterpolator.h:
	* UniversalJoint.h:
	* TextureCoordinate4D.h:
	* CollisionSpace.h:
	* X3DSequencerNode.h:
	* VolumeEmitter.cpp:
	* TextureCoordinate3D.h:
	* LocalFog.cpp:
	* ComposedTexture3D.cpp:
	* MultiTextureTransform.h:
	* X3DNetworkSensorNode.h:
	* ColorInterpolator.h:
	* X3DTriggerNode.cpp:
	* X3DParametricGeometryNode.h:
	* X3DVertexAttributeNode.cpp:
	* X3DNurbsControlCurveNode.cpp:
	* MultiTextureCoordinate.h:
	* PlaneSensor.h:
	* NormalInterpolator.h:
	* TouchSensor.h:
	* NurbsSurfaceInterpolator.cpp:
	* CollidableShape.h:
	* TextureTransform3D.cpp:
	* ScalarInterpolator.h:
	* CollisionSensor.h:
	* SurfaceEmitter.cpp:
	* Matrix4VertexAttribute.cpp:
	* WindPhysicsModel.h:
	* ExplosionEmitter.h:
	* Matrix3VertexAttribute.cpp:
	* ParticleSystem.cpp:
	* X3DFogObject.h:
	* ColorInterpolator.cpp:
	* IntegerSequencer.cpp:
	* X3DNurbsSurfaceGeometryNode.h:
	* X3DParametricGeometryNode.cpp:
	* BooleanSequencer.cpp:
	* TextureCoordinate4D.cpp:
	* CollisionSpace.cpp:
	* PolylineEmitter.cpp:
	* UniversalJoint.cpp:
	* X3DInterpolatorNode.h:
	* X3DTextureTransformNode.h:
	* X3DComposedGeometryNode.h:
	* CollidableOffset.h:
	* IndexedTriangleStripSet.h:
	* MultiTextureTransform.cpp:
	* X3DSequencerNode.cpp:
	* X3DNetworkSensorNode.cpp:
	* TextureCoordinate3D.cpp:
	* IndexedTriangleFanSet.cpp:
	* NurbsPositionInterpolator.cpp:
	* SphereSensor.h:
	* FogCoordinate.h:
	* X3DTextureCoordinateNode.h:
	* GeoPositionInterpolator.h:
	* ScalarInterpolator.cpp:
	* WindPhysicsModel.cpp:
	* X3DGeometricPropertyNode.h:
	* PlaneSensor.cpp:
	* NormalInterpolator.cpp:
	* TouchSensor.cpp:
	* PositionInterpolator.h:
	* NurbsOrientationInterpolator.h:
	* X3DRigidJointNode.h:
	* MultiTextureCoordinate.cpp:
	* ExplosionEmitter.cpp:
	* CollisionSensor.cpp:
	* CollidableShape.cpp:
	* X3DNurbsSurfaceGeometryNode.cpp:
	* BoundedPhysicsModel.h:
	* X3DInterpolatorNode.cpp:
	* GravityPhysicsModel.h:
	* X3DProgrammableShaderObject.h:
	* CollidableOffset.cpp:
	* TransformSensor.h:
	* X3DFogObject.cpp:
	* ProximitySensor.h:
	* SphereSensor.cpp:
	* CylinderSensor.h:
	* IndexedTriangleStripSet.cpp:
	* X3DTextureTransformNode.cpp:
	* X3DComposedGeometryNode.cpp:
	* VisibilitySensor.h:
	* GeoPositionInterpolator.cpp:
	* CollisionCollection.h:
	* X3DGeometricPropertyNode.cpp:
	* PositionInterpolator.cpp:
	* CoordinateInterpolator.h:
	* NurbsOrientationInterpolator.cpp:
	* PositionInterpolator2D.h:
	* TextureCoordinateGenerator.h:
	* ImageCubeMapTexture.h:
	* TextureTransformMatrix3D.h:
	* X3DTextureCoordinateNode.cpp:
	* X3DRigidJointNode.cpp:
	* RigidBodyCollection.h:
	* FogCoordinate.cpp:
	* ProximitySensor.cpp:
	* TransformSensor.cpp:
	* DoubleAxisHingeJoint.h:
	* SingleAxisHingeJoint.h:
	* X3DProgrammableShaderObject.cpp:
	* CylinderSensor.cpp:
	* OrientationInterpolator.h:
	* BoundedPhysicsModel.cpp:
	* GravityPhysicsModel.cpp:
	* X3DBackgroundNode.h:
	* VisibilitySensor.cpp:
	* X3DDragSensorNode.h:
	* ImageCubeMapTexture.cpp:
	* TextureBackground.h:
	* X3DParticleEmitterNode.h:
	* SplineScalarInterpolator.h:
	* PositionInterpolator2D.cpp:
	* CoordinateInterpolator2D.h:
	* CoordinateInterpolator.cpp:
	* X3DKeyDeviceSensorNode.h:
	* TextureTransformMatrix3D.cpp:
	* RigidBodyCollection.cpp:
	* TextureCoordinateGenerator.cpp:
	* CollisionCollection.cpp:
	* X3DNBodyCollidableNode.h:
	* ComposedCubeMapTexture.h:
	* OrientationInterpolator.cpp:
	* X3DTouchSensorNode.h:
	* DoubleAxisHingeJoint.cpp:
	* SingleAxisHingeJoint.cpp:
	* SplinePositionInterpolator.h:
	* X3DProductStructureChildNode.h:
	* X3DBackgroundNode.cpp:
	* TextureBackground.cpp:
	* CoordinateInterpolator2D.cpp:
	* GeneratedCubeMapTexture.h:
	* X3DKeyDeviceSensorNode.cpp:
	* X3DParticleEmitterNode.cpp:
	* X3DDragSensorNode.cpp:
	* SplineScalarInterpolator.cpp:
	* ComposedCubeMapTexture.cpp:
	* X3DNBodyCollidableNode.cpp:
	* X3DTouchSensorNode.cpp:
	* SquadOrientationInterpolator.h:
	* X3DProductStructureChildNode.cpp:
	* X3DEnvironmentTextureNode.h:
	* SplinePositionInterpolator.cpp:
	* SplinePositionInterpolator2D.h:
	* GeneratedCubeMapTexture.cpp:
	* X3DNBodyCollisionSpaceNode.h:
	* X3DParticlePhysicsModelNode.h:
	* X3DEnvironmentTextureNode.cpp:
	* SplinePositionInterpolator2D.cpp:
	* SquadOrientationInterpolator.cpp:
	* X3DNBodyCollisionSpaceNode.cpp:
	* X3DParticlePhysicsModelNode.cpp:
	* X3DEnvironmentalSensorNode.h:
	* X3DPointingDeviceSensorNode.h:
	* X3DEnvironmentalSensorNode.cpp:
	* X3DPointingDeviceSensorNode.cpp: 

2012-10-29  Holger Seelig  <holger.seelig@yahoo.de>

	* Route.cpp:
	* BrowserEnvironment.cpp:
	* Extrusion.cpp:
	* BrowserOptions.cpp:
	* NavigationInfo.cpp:
	* RenderingProperties.cpp:
	* Background.cpp: 

2012-10-29  Holger Seelig  <holger.seelig@yahoo.de>

	* BrowserEnvironment.cpp: 

2012-10-29  Holger Seelig  <holger.seelig@yahoo.de>

	* Fog.o:
	* Fog.d:
	* X3D.d:
	* X3D.o:
	* World.d:
	* Proto.d:
	* World.o:
	* Scene.d:
	* Layer.o:
	* Layer.d:
	* Scene.o:
	* Parser.d:
	* Viewer.o:
	* Anchor.o:
	* Parser.o:
	* Viewer.d:
	* Inline.o:
	* X3DNode.d:
	* X3DNode.o:
	* Browser.o:
	* Browser.d:
	* Viewport.d:
	* libtitania-x3d.cproj:
	* libtitania-x3d.md.pc:
	* LayerSet.d:
	* LocalFog.d:
	* LayerSet.o:
	* SpotLight.d:
	* Transform.o:
	* Transform.d:
	* Generator.d:
	* Collision.o:
	* Generator.o:
	* SignalPdu.o:
	* KeySensor.o:
	* Viewpoint.d:
	* Viewpoint.o:
	* Background.d:
	* X3DBrowser.o:
	* PointLight.d:
	* LoadSensor.o:
	* X3DBrowser.d:
	* Background.o:
	* LayoutLayer.o:
	* X3DRenderer.d:
	* X3DRenderer.o:
	* ExternProto.d:
	* ExternProto.o:
	* LayoutLayer.d:
	* ReceiverPdu.o:
	* X3DLayerNode.o:
	* X3DLightNode.d:
	* X3DLightNode.o:
	* StringSensor.o:
	* X3DLayerNode.d:
	* X3DUrlObject.o:
	* X3DSensorNode.o:
	* EspduTransform.o:
	* SupportedNodes.d:
	* NavigationInfo.d:
	* NavigationInfo.o:
	* PointingDevice.d:
	* GeoTouchSensor.o:
	* TransmitterPdu.o:
	* PointingDevice.o:
	* TransformSensor.o:
	* ProximitySensor.d:
	* ProximitySensor.o:
	* X3DBindableNode.d:
	* X3DBindableNode.o:
	* X3DGroupingNode.d:
	* X3DGroupingNode.o:
	* DirectionalLight.d:
	* X3DViewpointNode.d:
	* X3DViewpointNode.o:
	* VisibilitySensor.d:
	* VisibilitySensor.o:
	* X3DBackgroundNode.d:
	* X3DBackgroundNode.o:
	* GeoProximitySensor.o:
	* X3DExecutionContext.d:
	* X3DExecutionContext.o:
	* Surface.cpp:
	* ImageCubeMapTexture.o:
	* ImageCubeMapTexture.d:
	* X3DBrowser.h:
	* X3DNetworkSensorNode.o:
	* X3DPrototypeInstance.d:
	* X3DBrowser.cpp:
	* X3DKeyDeviceSensorNode.o:
	* SignalPdu.h:
	* PointingDevice.cpp:
	* X3DEnvironmentalSensorNode.o:
	* ReceiverPdu.h:
	* TimeSensor.h:
	* SignalPdu.cpp:
	* BindableNodeStack.h:
	* TimeSensor.cpp:
	* BrowserEnvironment.cpp:
	* ReceiverPdu.cpp:
	* TransmitterPdu.h:
	* BindableNodeStack.cpp:
	* X3DSensorNode.h:
	* EspduTransform.h:
	* Collision.h:
	* TransmitterPdu.cpp:
	* EspduTransform.cpp:
	* X3DLayerNode.h:
	* LoadSensor.h:
	* LinePickSensor.h:
	* Collision.cpp:
	* PointPickSensor.h:
	* LoadSensor.cpp:
	* X3DLayerNode.cpp:
	* VolumePickSensor.h:
	* LinePickSensor.cpp:
	* GeoTouchSensor.h:
	* PointPickSensor.cpp:
	* KeySensor.h:
	* VolumePickSensor.cpp:
	* PrimitivePickSensor.h:
	* GeoTouchSensor.cpp:
	* KeySensor.cpp:
	* RenderingProperties.h:
	* StringSensor.h:
	* RenderingProperties.cpp:
	* PrimitivePickSensor.cpp:
	* GeoProximitySensor.h:
	* StringSensor.cpp:
	* GeoProximitySensor.cpp:
	* PlaneSensor.h:
	* TouchSensor.h:
	* CollisionSensor.h:
	* SphereSensor.h:
	* TouchSensor.cpp:
	* CollisionSensor.cpp:
	* PlaneSensor.cpp:
	* TransformSensor.h:
	* ProximitySensor.h:
	* CylinderSensor.h:
	* SphereSensor.cpp:
	* VisibilitySensor.h:
	* ProximitySensor.cpp:
	* CylinderSensor.cpp:
	* TransformSensor.cpp:
	* BindableNodeStack.h:
	* VisibilitySensor.cpp:
	* X3DPointingDeviceSensorNode.h: 

2012-10-28  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DBrowser.o:
	* Surface.h:
	* Surface.cpp: 

2012-10-27  Holger Seelig  <holger.seelig@yahoo.de>

	* Surface.h:
	* Surface.cpp: 

2012-10-26  Holger Seelig  <holger.seelig@yahoo.de>

	* Surface.cpp: 

2012-10-26  Holger Seelig  <holger.seelig@yahoo.de>

	* LOD.o:
	* X3D.o:
	* Box.o:
	* Fog.o:
	* Cone.o:
	* Type.o:
	* Route.o:
	* Group.o:
	* Arc2D.o:
	* Error.o:
	* Scene.o:
	* RegEx.o:
	* Proto.d:
	* Proto.o:
	* Layer.o:
	* Layer.d:
	* World.o:
	* Image.o:
	* MFNode.o:
	* SFVec3.o:
	* SFTime.o:
	* SFVec4.o:
	* SFVec2.o:
	* Disk2D.o:
	* Router.o:
	* Viewer.o:
	* Layout.o:
	* Switch.o:
	* Parser.o:
	* GeoLOD.o:
	* SFNode.o:
	* Anchor.o:
	* Inline.o:
	* Sphere.o:
	* QuadSet.o:
	* X3DNode.o:
	* MFInt32.o:
	* SFImage.o:
	* SFColor.o:
	* X3DBase.d:
	* CADPart.o:
	* CADFace.o:
	* X3DType.o:
	* Browser.o:
	* X3DBase.o:
	* RouteSet.d:
	* SFString.o:
	* X3DProto.o:
	* LocalFog.o:
	* X3DInput.o:
	* X3DInput.d:
	* RouteSet.o:
	* strfsize.o:
	* Circle2D.o:
	* LayerSet.o:
	* Cylinder.o:
	* strfsize.d:
	* CADLayer.o:
	* HitArray.o:
	* Viewport.o:
	* Generator.o:
	* Viewpoint.o:
	* X3DScalar.o:
	* GeoOrigin.o:
	* Transform.o:
	* KeySensor.o:
	* SpotLight.o:
	* HAnimSite.o:
	* SignalPdu.o:
	* X3DObject.o:
	* X3DOutput.d:
	* X3DObject.d:
	* Billboard.o:
	* Extrusion.o:
	* SFMatrix3.o:
	* Collision.o:
	* SFMatrix4.o:
	* WorldInfo.o:
	* X3DOutput.o:
	* X3DParser.o:
	* Polyline2D.o:
	* X3DContext.d:
	* PointLight.o:
	* ProtoArray.o:
	* X3DBrowser.o:
	* Statistics.d:
	* Statistics.o:
	* X3DContext.o:
	* ViewVolume.o:
	* LoadSensor.o:
	* ArcClose2D.o:
	* Background.o:
	* MotionBlur.o:
	* HAnimJoint.o:
	* RouteArray.o:
	* uncompress.o:
	* Polypoint2D.o:
	* ProfileInfo.o:
	* MetadataSet.o:
	* LayoutGroup.o:
	* LayoutLayer.o:
	* ArrayFields.o:
	* X3DRenderer.o:
	* CADAssembly.o:
	* ScreenGroup.o:
	* DrawingArea.d:
	* Type.h:
	* TimeTrigger.o:
	* DrawingArea.o:
	* StaticGroup.o:
	* ColorDamper.o:
	* GeoMetadata.o:
	* GeoLocation.o:
	* ReceiverPdu.o:
	* Rectangle2D.o:
	* SFColorRGBA.o:
	* ExternProto.o:
	* SFRotation4.o:
	* X3DInfoNode.o:
	* ScalarChaser.o:
	* StringSensor.o:
	* HAnimSegment.o:
	* GeoViewpoint.o:
	* X3DConstants.o:
	* MetadataBool.o:
	* X3DChildNode.o:
	* X3DLightNode.o:
	* X3DUrlObject.o:
	* X3DLayerNode.o:
	* GeoTransform.o:
	* X3DFogObject.o:
	* GeoCoordinate.o:
	* HAnimHumanoid.o:
	* BooleanToggle.o:
	* TriangleSet2D.o:
	* X3DDamperNode.o:
	* EaseInEaseOut.o:
	* NodeTypeArray.o:
	* ComponentInfo.o:
	* ElevationGrid.o:
	* Type.cpp:
	* FogCoordinate.o:
	* MetadataFloat.o:
	* X3DLayoutNode.o:
	* X3DSensorNode.o:
	* BooleanFilter.o:
	* X3DChaserNode.o:
	* EspduTransform.o:
	* X3DType.h:
	* X3DTriggerNode.o:
	* RequesterStack.d:
	* ShapeContainer.o:
	* OrthoViewpoint.o:
	* ViewpointGroup.o:
	* BooleanTrigger.o:
	* PositionChaser.o:
	* TransmitterPdu.o:
	* IndexedFaceSet.o:
	* IndexedQuadSet.o:
	* RequesterStack.o:
	* MetadataDouble.o:
	* IntegerTrigger.o:
	* PositionDamper.o:
	* MetadataString.o:
	* GeoTouchSensor.o:
	* SupportedNodes.o:
	* X3DBase.h:
	* PointingDevice.o:
	* HAnimDisplacer.o:
	* NavigationInfo.o:
	* SupportedFields.o:
	* TransformSensor.o:
	* SupportedFields.d:
	* X3DViewportNode.o:
	* ProximitySensor.o:
	* X3DFollowerNode.o:
	* X3DBindableNode.o:
	* MetadataInteger.o:
	* X3DGroupingNode.o:
	* ScreenFontStyle.o:
	* X3DPropertyNode.o:
	* X3DBoundedObject.o:
	* X3DViewpointNode.o:
	* VisibilitySensor.o:
	* X3DSequencerNode.o:
	* JavaScriptEngine.o:
	* BooleanSequencer.o:
	* DirectionalLight.o:
	* CoordinateDamper.o:
	* DISEntityManager.o:
	* PositionChaser2D.o:
	* PositionDamper2D.o:
	* ExternProtoArray.o:
	* X3DObject.h:
	* GeoElevationGrid.o:
	* TexCoordDamper2D.o:
	* IntegerSequencer.o:
	* X3DOutput.h:
	* OrientationChaser.o:
	* X3DMetadataObject.o:
	* GarbargeCollector.d:
	* GarbargeCollector.o:
	* Browser.h:
	* World.h:
	* TextureBackground.o:
	* SupportedProfiles.o:
	* OrientationDamper.o:
	* ColorInterpolator.o:
	* X3DBackgroundNode.o:
	* X3DFieldDefinition.d:
	* X3DFieldDefinition.o:
	* Viewer.cpp:
	* FieldDefinitionSet.o:
	* X3DOutput.cpp:
	* ScalarInterpolator.d:
	* GeoProximitySensor.o:
	* NormalInterpolator.o:
	* ScalarInterpolator.o:
	* X3DInterpolatorNode.o:
	* Scene.cpp:
	* World.cpp:
	* SupportedComponents.o:
	* X3DExecutionContext.d:
	* Browser.cpp:
	* X3DExecutionContext.o:
	* ImageCubeMapTexture.o:
	* DISEntityTypeMapping.o:
	* X3DPrototypeInstance.o:
	* X3DPrototypeInstance.d:
	* PositionInterpolator.o:
	* FieldDefinitionArray.d:
	* FieldDefinitionArray.o:
	* X3DBrowser.h:
	* InterfaceDeclaration.o:
	* X3DNetworkSensorNode.o:
	* InterfaceDeclaration.d:
	* X3DBasicNode.cpp:
	* X3DBrowser.cpp:
	* X3DScene.cpp:
	* CoordinateInterpolator.o:
	* X3DKeyDeviceSensorNode.o:
	* ComposedCubeMapTexture.o:
	* PositionInterpolator2D.o:
	* OrientationInterpolator.o:
	* GeoPositionInterpolator.o:
	* GarbageCollector.h:
	* GeneratedCubeMapTexture.o:
	* SplineScalarInterpolator.o:
	* CoordinateInterpolator2D.o:
	* X3DEnvironmentTextureNode.o:
	* X3DEnvironmentalSensorNode.o:
	* SplinePositionInterpolator.o:
	* GarbargeCollector.cpp:
	* SquadOrientationInterpolator.o:
	* X3DProductStructureChildNode.o:
	* SplinePositionInterpolator2D.o:
	* X3DUrlObject.cpp:
	* RenderingProperties.cpp:
	* BindableNodeStack.h: 

2012-10-26  Holger Seelig  <holger.seelig@yahoo.de>

	* LOD.o:
	* X3D.o:
	* Box.o:
	* Fog.o:
	* Type.o:
	* Cone.o:
	* Proto.o:
	* Route.o:
	* RegEx.o:
	* Image.o:
	* Group.o:
	* Layer.o:
	* Error.o:
	* Arc2D.o:
	* Scene.o:
	* World.o:
	* Anchor.o:
	* SFVec4.o:
	* SFVec3.o:
	* Layout.o:
	* Disk2D.o:
	* Parser.o:
	* MFNode.o:
	* Sphere.o:
	* SFVec2.o:
	* Switch.o:
	* SFNode.o:
	* SFTime.o:
	* GeoLOD.o:
	* Inline.o:
	* Router.o:
	* Viewer.o:
	* X3DType.o:
	* X3DNode.o:
	* SFColor.o:
	* CADPart.o:
	* CADFace.o:
	* Browser.o:
	* SFImage.o:
	* X3DBase.o:
	* QuadSet.o:
	* MFInt32.o:
	* LocalFog.o:
	* X3DInput.o:
	* SFString.o:
	* LayerSet.o:
	* RouteSet.o:
	* HitArray.o:
	* Viewport.o:
	* Cylinder.o:
	* Circle2D.o:
	* CADLayer.o:
	* X3DProto.o:
	* Collision.o:
	* WorldInfo.o:
	* SFMatrix3.o:
	* HAnimSite.o:
	* X3DScalar.o:
	* X3DParser.o:
	* Extrusion.o:
	* SFMatrix4.o:
	* Viewpoint.o:
	* SpotLight.o:
	* X3DObject.o:
	* Transform.o:
	* Generator.o:
	* X3DOutput.o:
	* KeySensor.o:
	* Billboard.o:
	* SignalPdu.o:
	* GeoOrigin.o:
	* X3DBrowser.o:
	* MotionBlur.o:
	* LoadSensor.o:
	* ArcClose2D.o:
	* Background.o:
	* uncompress.o:
	* ViewVolume.o:
	* Polyline2D.o:
	* PointLight.o:
	* RouteArray.o:
	* ProtoArray.o:
	* X3DContext.o:
	* HAnimJoint.o:
	* Rectangle2D.o:
	* SFColorRGBA.o:
	* ColorDamper.o:
	* Polypoint2D.o:
	* ExternProto.o:
	* X3DRenderer.o:
	* ReceiverPdu.o:
	* ProfileInfo.o:
	* StaticGroup.o:
	* GeoLocation.o:
	* TimeTrigger.o:
	* X3DInfoNode.o:
	* GeoMetadata.o:
	* SFRotation4.o:
	* CADAssembly.o:
	* ScreenGroup.o:
	* ArrayFields.o:
	* LayoutGroup.o:
	* LayoutLayer.o:
	* MetadataSet.o:
	* X3DChildNode.o:
	* StringSensor.o:
	* HAnimSegment.o:
	* X3DUrlObject.o:
	* X3DFogObject.o:
	* X3DLightNode.o:
	* MetadataBool.o:
	* X3DLayerNode.o:
	* ScalarChaser.o:
	* X3DConstants.o:
	* GeoTransform.o:
	* GeoViewpoint.o:
	* HAnimHumanoid.o:
	* X3DLayoutNode.o:
	* BooleanToggle.o:
	* MetadataFloat.o:
	* BooleanFilter.o:
	* X3DSensorNode.o:
	* NodeTypeArray.o:
	* X3DDamperNode.o:
	* TriangleSet2D.o:
	* GeoCoordinate.o:
	* X3DChaserNode.o:
	* ComponentInfo.o:
	* ElevationGrid.o:
	* FogCoordinate.o:
	* EaseInEaseOut.o:
	* TransmitterPdu.o:
	* X3DTriggerNode.o:
	* ViewpointGroup.o:
	* EspduTransform.o:
	* ShapeContainer.o:
	* SupportedNodes.o:
	* IntegerTrigger.o:
	* MetadataString.o:
	* HAnimDisplacer.o:
	* NavigationInfo.o:
	* PositionDamper.o:
	* IndexedFaceSet.o:
	* PositionChaser.o:
	* IndexedQuadSet.o:
	* PointingDevice.o:
	* OrthoViewpoint.o:
	* GeoTouchSensor.o:
	* BooleanTrigger.o:
	* MetadataDouble.o:
	* X3DBindableNode.o:
	* TransformSensor.o:
	* X3DViewportNode.o:
	* X3DPropertyNode.o:
	* SupportedFields.o:
	* ScreenFontStyle.o:
	* X3DGroupingNode.o:
	* X3DFollowerNode.o:
	* MetadataInteger.o:
	* ProximitySensor.o:
	* X3DViewpointNode.o:
	* X3DBoundedObject.o:
	* VisibilitySensor.o:
	* X3DSequencerNode.o:
	* JavaScriptEngine.o:
	* ExternProtoArray.o:
	* GeoElevationGrid.o:
	* PositionChaser2D.o:
	* PositionDamper2D.o:
	* DirectionalLight.o:
	* IntegerSequencer.o:
	* TexCoordDamper2D.o:
	* BooleanSequencer.o:
	* DISEntityManager.o:
	* CoordinateDamper.o:
	* ColorInterpolator.o:
	* OrientationChaser.o:
	* OrientationDamper.o:
	* Parser.cpp:
	* World.h:
	* SupportedProfiles.o:
	* TextureBackground.o:
	* X3DMetadataObject.o:
	* X3DBackgroundNode.o:
	* GarbargeCollector.o:
	* X3DFieldDefinition.o:
	* FieldDefinitionSet.o:
	* GeoProximitySensor.o:
	* NormalInterpolator.o:
	* ScalarInterpolator.o:
	* Router.cpp:
	* X3DInterpolatorNode.o:
	* X3DExecutionContext.o:
	* SupportedComponents.o:
	* ImageCubeMapTexture.o:
	* World.cpp:
	* DISEntityTypeMapping.o:
	* X3DNetworkSensorNode.o:
	* FieldDefinitionArray.o:
	* InterfaceDeclaration.o:
	* X3DPrototypeInstance.o:
	* PositionInterpolator.o:
	* X3DBasicNode.cpp:
	* CoordinateInterpolator.o:
	* X3DKeyDeviceSensorNode.o:
	* ComposedCubeMapTexture.o:
	* X3DBrowser.cpp:
	* PositionInterpolator2D.o:
	* GeoPositionInterpolator.o:
	* OrientationInterpolator.o:
	* GeneratedCubeMapTexture.o:
	* CoordinateInterpolator2D.o:
	* SplineScalarInterpolator.o:
	* X3DEnvironmentTextureNode.o:
	* SplinePositionInterpolator.o:
	* X3DEnvironmentalSensorNode.o:
	* SquadOrientationInterpolator.o:
	* X3DProductStructureChildNode.o:
	* SplinePositionInterpolator2D.o: 

2012-10-26  Holger Seelig  <holger.seelig@yahoo.de>

	* X3D.h:
	* X3D.d:
	* Fog.d:
	* Box.d:
	* Box.o:
	* Fog.o:
	* X3D.o:
	* X3D.cpp:
	* LOD.o:
	* LOD.d:
	* Cone.o:
	* Cone.d:
	* World.d:
	* Arc2D.o:
	* Arc2D.d:
	* Proto.d:
	* Scene.o:
	* Scene.d:
	* Route.o:
	* Proto.o:
	* Route.d:
	* Group.d:
	* Layer.o:
	* Image.o:
	* Group.o:
	* World.o:
	* Layer.d:
	* Inline.o:
	* Router.o:
	* Disk2D.d:
	* Switch.o:
	* Switch.d:
	* Disk2D.o:
	* SFTime.o:
	* SFVec2.o:
	* SFVec3.o:
	* Sphere.d:
	* Sphere.o:
	* SFNode.o:
	* SFVec4.o:
	* Anchor.o:
	* Layout.o:
	* Parser.o:
	* GeoLOD.o:
	* GeoLOD.d:
	* Layout.d:
	* Parser.d:
	* MFNode.o:
	* Viewer.d:
	* Viewer.o:
	* CADPart.d:
	* SFImage.o:
	* CADPart.o:
	* MFInt32.o:
	* SFColor.o:
	* QuadSet.o:
	* Browser.d:
	* X3DNode.o:
	* QuadSet.d:
	* X3DNode.d:
	* CADFace.d:
	* CADFace.o:
	* Browser.o:
	* LocalFog.o:
	* LayerSet.d:
	* SFString.o:
	* Cylinder.d:
	* Cylinder.o:
	* HitArray.o:
	* LayerSet.o:
	* LocalFog.d:
	* CADLayer.o:
	* Circle2D.d:
	* Circle2D.o:
	* Viewport.d:
	* Viewport.o:
	* CADLayer.d:
	* libtitania-x3d.cproj:
	* libtitania-x3d.md.pc:
	* X3DProto.o:
	* GeoOrigin.d:
	* GeoOrigin.o:
	* Viewpoint.o:
	* Viewpoint.d:
	* Billboard.o:
	* Generator.d:
	* Billboard.d:
	* Transform.o:
	* Generator.o:
	* X3DObject.o:
	* HAnimSite.o:
	* X3DParser.o:
	* X3DScalar.o:
	* HAnimSite.d:
	* KeySensor.o:
	* KeySensor.d:
	* WorldInfo.o:
	* WorldInfo.d:
	* Extrusion.o:
	* SFMatrix4.o:
	* Collision.d:
	* SFMatrix3.o:
	* SpotLight.d:
	* SpotLight.o:
	* Extrusion.d:
	* Transform.d:
	* SignalPdu.d:
	* Collision.o:
	* SignalPdu.o:
	* LoadSensor.o:
	* MotionBlur.o:
	* MotionBlur.d:
	* RouteArray.o:
	* X3DBrowser.o:
	* X3DContext.o:
	* HAnimJoint.o:
	* X3DBrowser.d:
	* HAnimJoint.d:
	* PointLight.o:
	* PointLight.d:
	* Polyline2D.d:
	* Polyline2D.o:
	* ArcClose2D.o:
	* Background.d:
	* ArcClose2D.d:
	* ProtoArray.o:
	* Background.o:
	* ReceiverPdu.d:
	* X3DInfoNode.o:
	* ScreenGroup.d:
	* SFColorRGBA.o:
	* ProfileInfo.d:
	* TimeTrigger.o:
	* X3DRenderer.d:
	* X3DRenderer.o:
	* ScreenGroup.o:
	* ProfileInfo.o:
	* SFRotation4.o:
	* MetadataSet.d:
	* StaticGroup.o:
	* StaticGroup.d:
	* MetadataSet.o:
	* Rectangle2D.o:
	* TimeTrigger.d:
	* Rectangle2D.d:
	* LayoutGroup.d:
	* Polypoint2D.d:
	* Polypoint2D.o:
	* LayoutGroup.o:
	* ReceiverPdu.o:
	* LayoutLayer.o:
	* LayoutLayer.d:
	* ColorDamper.d:
	* ColorDamper.o:
	* CADAssembly.o:
	* ArrayFields.o:
	* CADAssembly.d:
	* ExternProto.d:
	* GeoLocation.o:
	* GeoMetadata.d:
	* GeoMetadata.o:
	* GeoLocation.d:
	* ExternProto.o:
	* GeoViewpoint.d:
	* MetadataBool.d:
	* GeoTransform.o:
	* GeoTransform.d:
	* ScalarChaser.o:
	* ScalarChaser.d:
	* StringSensor.d:
	* MetadataBool.o:
	* StringSensor.o:
	* X3DFogObject.o:
	* X3DLayerNode.d:
	* X3DChildNode.o:
	* X3DConstants.o:
	* X3DLightNode.o:
	* X3DUrlObject.o:
	* X3DLayerNode.o:
	* X3DLightNode.d:
	* HAnimSegment.o:
	* HAnimSegment.d:
	* GeoViewpoint.o:
	* FogCoordinate.o:
	* FogCoordinate.d:
	* X3DLayoutNode.o:
	* BooleanToggle.d:
	* BooleanFilter.o:
	* X3DSensorNode.o:
	* BooleanFilter.d:
	* GeoCoordinate.d:
	* GeoCoordinate.o:
	* ElevationGrid.o:
	* X3DDamperNode.o:
	* ComponentInfo.d:
	* TriangleSet2D.o:
	* BooleanToggle.o:
	* X3DChaserNode.o:
	* EaseInEaseOut.o:
	* ElevationGrid.d:
	* EaseInEaseOut.d:
	* ComponentInfo.o:
	* TriangleSet2D.d:
	* MetadataFloat.d:
	* MetadataFloat.o:
	* HAnimHumanoid.o:
	* HAnimHumanoid.d:
	* IndexedFaceSet.d:
	* IndexedFaceSet.o:
	* MetadataString.o:
	* GeoTouchSensor.d:
	* ShapeContainer.o:
	* MetadataString.d:
	* NavigationInfo.o:
	* EspduTransform.d:
	* EspduTransform.o:
	* IndexedQuadSet.d:
	* IndexedQuadSet.o:
	* NavigationInfo.d:
	* ViewpointGroup.o:
	* MetadataDouble.d:
	* MetadataDouble.o:
	* BooleanTrigger.d:
	* GeoTouchSensor.o:
	* SupportedNodes.o:
	* SupportedNodes.d:
	* HAnimDisplacer.o:
	* HAnimDisplacer.d:
	* ViewpointGroup.d:
	* TransmitterPdu.d:
	* TransmitterPdu.o:
	* BooleanTrigger.o:
	* PositionDamper.o:
	* PositionDamper.d:
	* IntegerTrigger.d:
	* IntegerTrigger.o:
	* X3DTriggerNode.o:
	* PositionChaser.o:
	* OrthoViewpoint.d:
	* OrthoViewpoint.o:
	* PointingDevice.d:
	* PositionChaser.d:
	* PointingDevice.o:
	* MetadataInteger.d:
	* SFNode.h:
	* X3DGroupingNode.o:
	* ScreenFontStyle.d:
	* ScreenFontStyle.o:
	* MetadataInteger.o:
	* X3DViewportNode.o:
	* ProximitySensor.o:
	* TransformSensor.d:
	* ProximitySensor.d:
	* TransformSensor.o:
	* SupportedFields.o:
	* X3DBindableNode.d:
	* X3DFollowerNode.o:
	* X3DBindableNode.o:
	* X3DGroupingNode.d:
	* X3DPropertyNode.o:
	* GeoElevationGrid.d:
	* X3DViewpointNode.o:
	* BooleanSequencer.d:
	* GeoElevationGrid.o:
	* X3DField.h:
	* PositionChaser2D.d:
	* IntegerSequencer.d:
	* X3DObject.h:
	* TexCoordDamper2D.d:
	* BooleanSequencer.o:
	* IntegerSequencer.o:
	* TexCoordDamper2D.o:
	* DISEntityManager.o:
	* DISEntityManager.d:
	* ExternProtoArray.o:
	* JavaScriptEngine.o:
	* VisibilitySensor.d:
	* DirectionalLight.o:
	* X3DBoundedObject.o:
	* X3DViewpointNode.d:
	* X3DSequencerNode.o:
	* DirectionalLight.d:
	* VisibilitySensor.o:
	* SFImage.h:
	* CoordinateDamper.d:
	* PositionDamper2D.d:
	* JavaScriptEngine.d:
	* PositionChaser2D.o:
	* PositionDamper2D.o:
	* CoordinateDamper.o:
	* X3DBackgroundNode.d:
	* X3DBackgroundNode.o:
	* X3DMetadataObject.o:
	* Surface.h:
	* Parser.cpp:
	* OrientationDamper.o:
	* ColorInterpolator.o:
	* ColorInterpolator.d:
	* OrientationDamper.d:
	* OrientationChaser.o:
	* OrientationChaser.d:
	* TextureBackground.o:
	* TextureBackground.d:
	* SupportedProfiles.o:
	* NormalInterpolator.o:
	* NormalInterpolator.d:
	* GeoProximitySensor.o:
	* SFImage.cpp:
	* GeoProximitySensor.d:
	* X3DFieldDefinition.o:
	* ScalarInterpolator.o:
	* ScalarInterpolator.d:
	* Router.cpp:
	* X3DExecutionContext.d:
	* X3DInterpolatorNode.o:
	* ImageCubeMapTexture.o:
	* ImageCubeMapTexture.d:
	* Surface.cpp:
	* X3DExecutionContext.o:
	* SupportedComponents.o:
	* X3DBasicNode.h:
	* DISEntityTypeMapping.d:
	* X3DPrototypeInstance.o:
	* DISEntityTypeMapping.o:
	* PositionInterpolator.d:
	* X3DScene.h:
	* PositionInterpolator.o:
	* X3DBrowser.h:
	* InterfaceDeclaration.o:
	* X3DPrototypeInstance.d:
	* X3DNetworkSensorNode.o:
	* X3DArrayField.h:
	* X3DBrowser.cpp:
	* X3DKeyDeviceSensorNode.o:
	* ComposedCubeMapTexture.d:
	* ComposedCubeMapTexture.o:
	* X3DBasicNode.cpp:
	* X3DScene.cpp:
	* PositionInterpolator2D.d:
	* PositionInterpolator2D.o:
	* CoordinateInterpolator.d:
	* CoordinateInterpolator.o:
	* OrientationInterpolator.d:
	* GeoPositionInterpolator.d:
	* GeneratedCubeMapTexture.d:
	* OrientationInterpolator.o:
	* GeneratedCubeMapTexture.o:
	* GeoPositionInterpolator.o:
	* SplineScalarInterpolator.o:
	* SplineScalarInterpolator.d:
	* CoordinateInterpolator2D.o:
	* CoordinateInterpolator2D.d:
	* X3DEnvironmentTextureNode.o:
	* ExternProto.cpp:
	* X3DEnvironmentalSensorNode.o:
	* SplinePositionInterpolator.o:
	* SplinePositionInterpolator.d:
	* X3DFieldDefinition.h:
	* X3DProductStructureChildNode.o:
	* SplinePositionInterpolator2D.o:
	* SplinePositionInterpolator2D.d:
	* SquadOrientationInterpolator.o:
	* SquadOrientationInterpolator.d:
	* X3DFieldDefinition.cpp:
	* X3DExecutionContext.h:
	* SupportedNodes.cpp:
	* SupportedFields.cpp:
	* X3DExecutionContext.cpp:
	* SupportedProfiles.cpp:
	* PixelTexture.cpp:
	* SupportedComponents.cpp: 

2012-10-25  Holger Seelig  <holger.seelig@yahoo.de>

	* Fog.o:
	* X3D.o:
	* X3D.d:
	* Box.o:
	* LOD.o:
	* Cone.o:
	* Route.o:
	* Group.o:
	* Layer.o:
	* World.o:
	* Scene.o:
	* Arc2D.o:
	* Proto.o:
	* Switch.o:
	* Anchor.o:
	* Viewer.o:
	* Disk2D.o:
	* Layout.o:
	* Parser.o:
	* Sphere.o:
	* GeoLOD.o:
	* Inline.o:
	* QuadSet.o:
	* X3DNode.o:
	* CADPart.o:
	* CADFace.o:
	* Browser.o:
	* LayerSet.o:
	* LocalFog.o:
	* Viewport.o:
	* Cylinder.o:
	* libtitania-x3d.md.pc:
	* CADLayer.o:
	* Circle2D.o:
	* libtitania-x3d.cproj:
	* Viewpoint.o:
	* Generator.o:
	* SignalPdu.o:
	* GeoOrigin.o:
	* SpotLight.o:
	* KeySensor.o:
	* Billboard.o:
	* HAnimSite.o:
	* WorldInfo.o:
	* SFMatrix4.o:
	* Collision.o:
	* Extrusion.o:
	* Transform.o:
	* LoadSensor.o:
	* HAnimJoint.o:
	* X3DBrowser.o:
	* Background.d:
	* ArcClose2D.o:
	* Polyline2D.o:
	* PointLight.o:
	* Background.o:
	* MotionBlur.o:
	* ReceiverPdu.o:
	* MetadataSet.o:
	* StaticGroup.o:
	* Polypoint2D.o:
	* LayoutLayer.o:
	* ScreenGroup.o:
	* ProfileInfo.o:
	* Rectangle2D.o:
	* LayoutGroup.o:
	* GeoLocation.o:
	* GeoMetadata.o:
	* X3DRenderer.o:
	* ExternProto.o:
	* ColorDamper.o:
	* CADAssembly.o:
	* TimeTrigger.o:
	* ArrayFields.o:
	* X3DLightNode.o:
	* X3DUrlObject.o:
	* StringSensor.o:
	* ScalarChaser.o:
	* X3DLayerNode.o:
	* GeoViewpoint.o:
	* GeoTransform.o:
	* MetadataBool.o:
	* HAnimSegment.o:
	* EaseInEaseOut.o:
	* BooleanToggle.o:
	* ComponentInfo.o:
	* BooleanFilter.o:
	* MetadataFloat.o:
	* GeoCoordinate.o:
	* HAnimHumanoid.o:
	* TriangleSet2D.o:
	* ElevationGrid.o:
	* FogCoordinate.o:
	* SupportedNodes.o:
	* SupportedNodes.d:
	* ShapeContainer.o:
	* ViewpointGroup.o:
	* TransmitterPdu.o:
	* IntegerTrigger.o:
	* MetadataDouble.o:
	* OrthoViewpoint.o:
	* HAnimDisplacer.o:
	* NavigationInfo.o:
	* MetadataString.o:
	* GeoTouchSensor.o:
	* PointingDevice.o:
	* IndexedQuadSet.o:
	* PositionDamper.o:
	* BooleanTrigger.o:
	* PositionChaser.o:
	* EspduTransform.o:
	* IndexedFaceSet.o:
	* MetadataInteger.o:
	* TransformSensor.o:
	* X3DGroupingNode.o:
	* ProximitySensor.o:
	* ScreenFontStyle.o:
	* X3DBindableNode.o:
	* TexCoordDamper2D.o:
	* CoordinateDamper.o:
	* BooleanSequencer.o:
	* X3DViewpointNode.o:
	* DISEntityManager.o:
	* GeoElevationGrid.o:
	* DirectionalLight.o:
	* VisibilitySensor.o:
	* JavaScriptEngine.o:
	* PositionDamper2D.o:
	* PositionChaser2D.o:
	* IntegerSequencer.o:
	* ColorInterpolator.o:
	* OrientationChaser.o:
	* X3DBackgroundNode.o:
	* TextureBackground.o:
	* OrientationDamper.o:
	* NormalInterpolator.o:
	* ScalarInterpolator.o:
	* GeoProximitySensor.o:
	* X3DExecutionContext.o:
	* ImageCubeMapTexture.o:
	* PositionInterpolator.o:
	* DISEntityTypeMapping.o:
	* X3DPrototypeInstance.o:
	* ComposedCubeMapTexture.o:
	* PositionInterpolator2D.o:
	* CoordinateInterpolator.o:
	* GeneratedCubeMapTexture.o:
	* OrientationInterpolator.o:
	* GeoPositionInterpolator.o:
	* SplineScalarInterpolator.o:
	* CoordinateInterpolator2D.o:
	* SplinePositionInterpolator.o:
	* SquadOrientationInterpolator.o:
	* SplinePositionInterpolator2D.o:
	* ImageTexture.cpp:
	* PixelTexture.cpp:
	* X3DGeometryNode.cpp: 

2012-10-25  Holger Seelig  <holger.seelig@yahoo.de>

	* Fog.o:
	* LOD.o:
	* Box.o:
	* X3D.d:
	* X3D.o:
	* Type.o:
	* Cone.o:
	* Layer.o:
	* RegEx.o:
	* Proto.o:
	* Arc2D.o:
	* Error.o:
	* Group.o:
	* Image.o:
	* Route.o:
	* Scene.o:
	* World.o:
	* GeoLOD.o:
	* SFVec4.o:
	* Sphere.o:
	* Viewer.o:
	* Disk2D.o:
	* Switch.o:
	* Inline.o:
	* Parser.o:
	* MFNode.o:
	* Router.o:
	* SFNode.o:
	* SFVec2.o:
	* SFVec3.o:
	* Layout.o:
	* SFTime.o:
	* Anchor.o:
	* X3DType.o:
	* SFColor.o:
	* X3DNode.o:
	* MFInt32.o:
	* QuadSet.o:
	* X3DBase.o:
	* Browser.o:
	* CADFace.o:
	* SFImage.o:
	* CADPart.o:
	* X3DInput.o:
	* SFString.o:
	* Viewport.o:
	* RouteSet.o:
	* Cylinder.o:
	* Circle2D.o:
	* LocalFog.o:
	* libtitania-x3d.cproj:
	* CADLayer.o:
	* LayerSet.o:
	* HitArray.o:
	* X3DProto.o:
	* HAnimSite.o:
	* Billboard.o:
	* SignalPdu.o:
	* Generator.o:
	* GeoOrigin.o:
	* KeySensor.o:
	* SFMatrix4.o:
	* SFMatrix3.o:
	* WorldInfo.o:
	* Viewpoint.o:
	* Extrusion.o:
	* X3DObject.o:
	* X3DOutput.o:
	* X3DParser.o:
	* X3DScalar.o:
	* Collision.o:
	* Transform.o:
	* SpotLight.o:
	* ProtoArray.o:
	* Background.d:
	* LoadSensor.o:
	* Polyline2D.o:
	* uncompress.o:
	* ArcClose2D.o:
	* PointLight.o:
	* MotionBlur.o:
	* X3DContext.o:
	* RouteArray.o:
	* ViewVolume.o:
	* X3DBrowser.o:
	* Background.o:
	* HAnimJoint.o:
	* X3DInfoNode.o:
	* X3DRenderer.o:
	* SFRotation4.o:
	* ScreenGroup.o:
	* StaticGroup.o:
	* TimeTrigger.o:
	* Rectangle2D.o:
	* Polypoint2D.o:
	* ProfileInfo.o:
	* SFColorRGBA.o:
	* MetadataSet.o:
	* ReceiverPdu.o:
	* LayoutLayer.o:
	* GeoMetadata.o:
	* GeoLocation.o:
	* ColorDamper.o:
	* ExternProto.o:
	* CADAssembly.o:
	* LayoutGroup.o:
	* ArrayFields.o:
	* GeoTransform.o:
	* StringSensor.o:
	* ScalarChaser.o:
	* X3DLayerNode.o:
	* X3DFogObject.o:
	* GeoViewpoint.o:
	* X3DLightNode.o:
	* MetadataBool.o:
	* HAnimSegment.o:
	* X3DUrlObject.o:
	* X3DConstants.o:
	* X3DChildNode.o:
	* HAnimHumanoid.o:
	* X3DSensorNode.o:
	* ComponentInfo.o:
	* GeoCoordinate.o:
	* X3DChaserNode.o:
	* BooleanToggle.o:
	* EaseInEaseOut.o:
	* ElevationGrid.o:
	* TriangleSet2D.o:
	* FogCoordinate.o:
	* X3DLayoutNode.o:
	* X3DDamperNode.o:
	* BooleanFilter.o:
	* MetadataFloat.o:
	* NodeTypeArray.o:
	* IndexedQuadSet.o:
	* SupportedNodes.o:
	* PositionChaser.o:
	* ViewpointGroup.o:
	* SupportedNodes.d:
	* ShapeContainer.o:
	* MetadataDouble.o:
	* OrthoViewpoint.o:
	* PointingDevice.o:
	* EspduTransform.o:
	* HAnimDisplacer.o:
	* IndexedFaceSet.o:
	* TransmitterPdu.o:
	* IntegerTrigger.o:
	* NavigationInfo.o:
	* X3DTriggerNode.o:
	* BooleanTrigger.o:
	* GeoTouchSensor.o:
	* PositionDamper.o:
	* MetadataString.o:
	* MetadataInteger.o:
	* X3DGroupingNode.o:
	* X3DFollowerNode.o:
	* SupportedFields.o:
	* TransformSensor.o:
	* X3DViewportNode.o:
	* ScreenFontStyle.o:
	* X3DBindableNode.o:
	* ProximitySensor.o:
	* X3DPropertyNode.o:
	* TexCoordDamper2D.o:
	* CoordinateDamper.o:
	* PositionChaser2D.o:
	* JavaScriptEngine.o:
	* X3DSequencerNode.o:
	* PositionDamper2D.o:
	* ExternProtoArray.o:
	* X3DBoundedObject.o:
	* BooleanSequencer.o:
	* X3DViewpointNode.o:
	* DirectionalLight.o:
	* X3DField.h:
	* DISEntityManager.o:
	* GeoElevationGrid.o:
	* VisibilitySensor.o:
	* IntegerSequencer.o:
	* X3DBackgroundNode.o:
	* Route.cpp:
	* X3DMetadataObject.o:
	* GarbargeCollector.o:
	* OrientationDamper.o:
	* OrientationChaser.o:
	* TextureBackground.o:
	* ColorInterpolator.o:
	* SupportedProfiles.o:
	* Browser.h:
	* GeoProximitySensor.o:
	* ScalarInterpolator.o:
	* NormalInterpolator.o:
	* FieldDefinitionSet.o:
	* X3DFieldDefinition.o:
	* X3DInterpolatorNode.o:
	* X3DExecutionContext.o:
	* SupportedComponents.o:
	* Browser.cpp:
	* Surface.cpp:
	* ImageCubeMapTexture.o:
	* DISEntityTypeMapping.o:
	* X3DBrowser.h:
	* X3DPrototypeInstance.o:
	* PositionInterpolator.o:
	* InterfaceDeclaration.o:
	* X3DNetworkSensorNode.o:
	* FieldDefinitionArray.o:
	* X3DKeyDeviceSensorNode.o:
	* CoordinateInterpolator.o:
	* PositionInterpolator2D.o:
	* ComposedCubeMapTexture.o:
	* X3DBrowser.cpp:
	* OrientationInterpolator.o:
	* GeneratedCubeMapTexture.o:
	* GeoPositionInterpolator.o:
	* CoordinateInterpolator2D.o:
	* SplineScalarInterpolator.o:
	* X3DEnvironmentTextureNode.o:
	* GarbargeCollector.cpp:
	* SplinePositionInterpolator.o:
	* X3DFieldDefinition.h:
	* X3DEnvironmentalSensorNode.o:
	* SplinePositionInterpolator2D.o:
	* X3DFieldDefinition.cpp:
	* X3DProductStructureChildNode.o:
	* SquadOrientationInterpolator.o:
	* Material.cpp:
	* X3DShapeNode.cpp:
	* X3DLayerNode.h:
	* X3DLayerNode.cpp:
	* X3DTexture2DNode.h:
	* X3DGeometryNode.cpp:
	* X3DTexture2DNode.cpp:
	* Background.h:
	* Background.cpp:
	* BindableNodeStack.h: 

2012-10-24  Holger Seelig  <holger.seelig@yahoo.de>

	* LOD.d:
	* Fog.o:
	* LOD.o:
	* X3D.d:
	* X3D.o:
	* Box.o:
	* Box.d:
	* Fog.d:
	* Type.o:
	* Cone.d:
	* Cone.o:
	* Text.d:
	* Text.o:
	* Shape.d:
	* Route.o:
	* Sound.d:
	* RegEx.o:
	* Shape.o:
	* Layer.o:
	* Group.d:
	* Layer.d:
	* Image.o:
	* Arc2D.o:
	* Arc2D.d:
	* Sound.o:
	* Scene.o:
	* Scene.d:
	* World.o:
	* Group.o:
	* Error.o:
	* Color.d:
	* Proto.o:
	* Color.o:
	* Normal.o:
	* Parser.o:
	* Inline.o:
	* Inline.d:
	* Router.o:
	* Layout.d:
	* SFVec4.o:
	* Layout.o:
	* Viewer.o:
	* Viewer.d:
	* SFNode.o:
	* Normal.d:
	* SFTime.o:
	* SFVec3.o:
	* SFVec2.o:
	* Parser.d:
	* Switch.o:
	* Anchor.o:
	* MFNode.o:
	* Sphere.d:
	* Disk2D.o:
	* GeoLOD.o:
	* GeoLOD.d:
	* Script.d:
	* Script.o:
	* Disk2D.d:
	* Switch.d:
	* Anchor.d:
	* Sphere.o:
	* Contact.d:
	* LineSet.d:
	* LineSet.o:
	* X3DBase.o:
	* CADPart.o:
	* CADFace.o:
	* Browser.o:
	* X3DNode.o:
	* X3DType.o:
	* Contact.o:
	* Browser.d:
	* QuadSet.o:
	* SFColor.o:
	* SFImage.o:
	* X3DNode.d:
	* MFInt32.o:
	* X3DScene.o:
	* X3DScene.d:
	* Viewport.o:
	* libtitania-x3d.cproj:
	* X3DInput.o:
	* Viewport.d:
	* X3DProto.o:
	* Cylinder.o:
	* Cylinder.d:
	* LayerSet.d:
	* LayerSet.o:
	* Circle2D.o:
	* NurbsSet.d:
	* SFString.o:
	* RouteSet.o:
	* PointSet.o:
	* HitArray.o:
	* NurbsSet.o:
	* PointSet.d:
	* Circle2D.d:
	* LocalFog.o:
	* Material.o:
	* Material.d:
	* CADLayer.o:
	* LocalFog.d:
	* Collision.d:
	* AudioClip.o:
	* GeoOrigin.o:
	* FontStyle.o:
	* GeoOrigin.d:
	* Generator.o:
	* Contour2D.o:
	* AudioClip.d:
	* Generator.d:
	* Extrusion.d:
	* Billboard.o:
	* Billboard.d:
	* SpotLight.o:
	* SpotLight.d:
	* SignalPdu.d:
	* Extrusion.o:
	* FontStyle.d:
	* BallJoint.o:
	* BallJoint.d:
	* Contour2D.d:
	* Viewpoint.o:
	* Viewpoint.d:
	* Collision.o:
	* Transform.o:
	* Transform.d:
	* SFMatrix3.o:
	* X3DObject.o:
	* ClipPlane.d:
	* KeySensor.o:
	* SignalPdu.o:
	* ColorRGBA.o:
	* WorldInfo.o:
	* SFMatrix4.o:
	* NodeArray.o:
	* NodeArray.d:
	* ClipPlane.o:
	* X3DScalar.o:
	* ObjectSet.o:
	* RigidBody.o:
	* RigidBody.d:
	* ColorRGBA.d:
	* KeySensor.d:
	* X3DParser.o:
	* X3DOutput.o:
	* HAnimSite.d:
	* HAnimSite.o:
	* ObjectSet.d:
	* NurbsCurve.o:
	* PointLight.d:
	* MotorJoint.o:
	* NurbsCurve.d:
	* PointLight.o:
	* ShaderPart.d:
	* ShaderPart.o:
	* Polyline2D.d:
	* Polyline2D.o:
	* HAnimJoint.d:
	* HAnimJoint.o:
	* Coordinate.d:
	* Coordinate.o:
	* LoadSensor.d:
	* TimeSensor.d:
	* MotorJoint.d:
	* LoadSensor.o:
	* TimeSensor.o:
	* ArcClose2D.d:
	* Appearance.o:
	* Appearance.d:
	* ArcClose2D.o:
	* Background.o:
	* MotionBlur.o:
	* Background.d:
	* ProtoArray.o:
	* ViewVolume.o:
	* RouteArray.o:
	* X3DBrowser.d:
	* uncompress.o:
	* X3DContext.o:
	* X3DBrowser.o:
	* TimeTrigger.d:
	* TimeTrigger.o:
	* TouchSensor.d:
	* X3DRenderer.d:
	* X3DRenderer.o:
	* Polypoint2D.d:
	* Polypoint2D.o:
	* ReceiverPdu.d:
	* Rectangle2D.d:
	* Rectangle2D.o:
	* ProfileInfo.o:
	* TouchSensor.o:
	* TriangleSet.d:
	* X3DInfoNode.o:
	* GeoLocation.o:
	* GeoLocation.d:
	* ColorDamper.o:
	* GeoMetadata.d:
	* PlaneSensor.o:
	* ColorDamper.d:
	* GeoMetadata.o:
	* BaseNodeSet.o:
	* MetadataSet.o:
	* StaticGroup.o:
	* StaticGroup.d:
	* CADAssembly.o:
	* PlaneSensor.d:
	* BaseNodeSet.d:
	* LayoutGroup.d:
	* ReceiverPdu.o:
	* SliderJoint.o:
	* ExternProto.o:
	* X3DBaseNode.o:
	* X3DBaseNode.d:
	* SliderJoint.d:
	* ConeEmitter.o:
	* ConeEmitter.d:
	* SFColorRGBA.o:
	* SFRotation4.o:
	* LayoutLayer.o:
	* ScreenGroup.o:
	* ScreenGroup.d:
	* TriangleSet.o:
	* ArrayFields.o:
	* LayoutGroup.o:
	* LayoutLayer.d:
	* GeoTransform.o:
	* GeoViewpoint.d:
	* GeoViewpoint.o:
	* PointEmitter.d:
	* MultiTexture.d:
	* MultiTexture.o:
	* X3DSoundNode.d:
	* X3DShapeNode.d:
	* GeoTransform.d:
	* X3DShapeNode.o:
	* PixelTexture.o:
	* StringSensor.o:
	* NurbsCurve2D.d:
	* X3DFogObject.d:
	* NurbsCurve2D.o:
	* X3DChildNode.o:
	* X3DConstants.o:
	* StringSensor.d:
	* ImageTexture.o:
	* PixelTexture.d:
	* MovieTexture.d:
	* MovieTexture.o:
	* X3DSoundNode.o:
	* ImageTexture.d:
	* HAnimSegment.o:
	* HAnimSegment.d:
	* X3DLightNode.d:
	* X3DColorNode.d:
	* X3DColorNode.o:
	* X3DUrlObject.d:
	* SphereSensor.d:
	* X3DLayerNode.o:
	* ScalarChaser.d:
	* ScalarChaser.o:
	* X3DLightNode.o:
	* X3DFogObject.o:
	* X3DUrlObject.o:
	* MetadataBool.o:
	* X3DBasicNode.d:
	* X3DLayerNode.d:
	* SphereSensor.o:
	* X3DBasicNode.o:
	* PointEmitter.o:
	* X3DNormalNode.o:
	* EaseInEaseOut.d:
	* X3DChaserNode.d:
	* X3DScriptNode.d:
	* ShaderProgram.o:
	* TriangleSet2D.o:
	* X3DDamperNode.d:
	* X3DChaserNode.o:
	* X3DDamperNode.o:
	* BooleanToggle.o:
	* ComponentInfo.o:
	* BooleanToggle.d:
	* ShaderProgram.d:
	* X3DShaderNode.d:
	* TriangleSet2D.d:
	* X3DNormalNode.d:
	* X3DScriptNode.o:
	* BooleanFilter.o:
	* X3DShaderNode.o:
	* ProgramShader.o:
	* ProgramShader.d:
	* FogCoordinate.o:
	* VolumeEmitter.o:
	* BooleanFilter.d:
	* X3DLayoutNode.d:
	* VolumeEmitter.d:
	* X3DSensorNode.o:
	* FogCoordinate.d:
	* MetadataFloat.o:
	* PickableGroup.o:
	* HAnimHumanoid.o:
	* HAnimHumanoid.d:
	* X3DLayoutNode.o:
	* ElevationGrid.o:
	* GeoCoordinate.o:
	* ElevationGrid.d:
	* NodeTypeArray.o:
	* EaseInEaseOut.o:
	* GeoCoordinate.d:
	* PickableGroup.d:
	* NavigationInfo.d:
	* SurfaceEmitter.o:
	* ShapeContainer.o:
	* EspduTransform.o:
	* NavigationInfo.o:
	* SurfaceEmitter.d:
	* PositionDamper.d:
	* PositionChaser.o:
	* PositionDamper.o:
	* ParticleSystem.d:
	* ParticleSystem.o:
	* PixelTexture3D.d:
	* PixelTexture3D.o:
	* MetadataString.o:
	* PositionChaser.d:
	* MetadataDouble.o:
	* TriangleFanSet.d:
	* TransmitterPdu.d:
	* TriangleFanSet.o:
	* IndexedQuadSet.o:
	* PointingDevice.o:
	* PackagedShader.d:
	* PackagedShader.o:
	* OrthoViewpoint.o:
	* PointingDevice.d:
	* OrthoViewpoint.d:
	* ImageTexture3D.o:
	* IndexedFaceSet.d:
	* IndexedFaceSet.o:
	* ImageTexture3D.d:
	* GeoTouchSensor.o:
	* HAnimDisplacer.d:
	* HAnimDisplacer.o:
	* ViewpointGroup.o:
	* X3DTextureNode.o:
	* X3DTextureNode.d:
	* ComposedShader.d:
	* IndexedLineSet.d:
	* IndexedLineSet.o:
	* ComposedShader.o:
	* BasicNodeArray.o:
	* FillProperties.d:
	* FillProperties.o:
	* BooleanTrigger.d:
	* CylinderSensor.o:
	* CylinderSensor.d:
	* EspduTransform.d:
	* BrowserOptions.d:
	* BrowserOptions.o:
	* GeoTouchSensor.d:
	* BooleanTrigger.o:
	* X3DTriggerNode.o:
	* BasicNodeArray.d:
	* X3DTriggerNode.d:
	* LinePickSensor.o:
	* LineProperties.d:
	* LinePickSensor.d:
	* ViewpointGroup.d:
	* UniversalJoint.o:
	* LineProperties.o:
	* SupportedNodes.o:
	* CollisionSpace.d:
	* CollisionSpace.o:
	* TransmitterPdu.o:
	* UniversalJoint.d:
	* IntegerTrigger.d:
	* IntegerTrigger.o:
	* X3DGroupingNode.o:
	* CollisionSensor.o:
	* libtitania-x3d.so:
	* CollisionSensor.d:
	* X3DMaterialNode.d:
	* PolylineEmitter.o:
	* PolylineEmitter.d:
	* X3DPropertyNode.o:
	* FieldTypesArray.d:
	* FieldTypesArray.o:
	* X3DViewportNode.o:
	* X3DFollowerNode.d:
	* ProximitySensor.o:
	* X3DMaterialNode.o:
	* CollidableShape.o:
	* SupportedFields.o:
	* ScreenFontStyle.d:
	* ScreenFontStyle.o:
	* X3DViewportNode.d:
	* ProximitySensor.d:
	* X3DFollowerNode.o:
	* TransformSensor.o:
	* X3DBindableNode.o:
	* X3DBindableNode.d:
	* X3DGeometryNode.o:
	* X3DGeometryNode.d:
	* CollidableShape.d:
	* PointPickSensor.o:
	* PointPickSensor.d:
	* TransformSensor.d:
	* X3DGroupingNode.d:
	* MetadataInteger.o:
	* CollidableOffset.d:
	* X3DFontStyleNode.d:
	* BooleanSequencer.o:
	* ExternProtoArray.o:
	* DISEntityManager.o:
	* CollidableOffset.o:
	* X3DFontStyleNode.o:
	* TexCoordDamper2D.o:
	* JavaScriptEngine.o:
	* CoordinateDouble.d:
	* CoordinateDamper.o:
	* TexCoordDamper2D.d:
	* CoordinateDouble.o:
	* X3DBoundedObject.d:
	* X3DViewpointNode.o:
	* X3DBoundedObject.o:
	* CoordinateDamper.d:
	* WindPhysicsModel.o:
	* GeoElevationGrid.o:
	* X3DTexture2DNode.o:
	* X3DSequencerNode.d:
	* PositionChaser2D.o:
	* ExplosionEmitter.o:
	* GeoElevationGrid.d:
	* PositionChaser2D.d:
	* WindPhysicsModel.d:
	* IntegerSequencer.o:
	* X3DTexture3DNode.d:
	* X3DTexture3DNode.o:
	* IntegerSequencer.d:
	* VolumePickSensor.d:
	* VolumePickSensor.o:
	* VisibilitySensor.d:
	* VisibilitySensor.o:
	* ExplosionEmitter.d:
	* TwoSidedMaterial.d:
	* ProfileInfoArray.o:
	* ProfileInfoArray.d:
	* TwoSidedMaterial.o:
	* TriangleStripSet.o:
	* DISEntityManager.d:
	* DirectionalLight.o:
	* DirectionalLight.d:
	* X3DTexture2DNode.d:
	* BooleanSequencer.d:
	* TextureTransform.o:
	* X3DViewpointNode.d:
	* PositionDamper2D.d:
	* PositionDamper2D.o:
	* X3DSequencerNode.o:
	* TriangleStripSet.d:
	* TextureTransform.d:
	* X3DCoordinateNode.d:
	* X3DCoordinateNode.o:
	* TextureProperties.o:
	* TextureBackground.o:
	* TextureBackground.d:
	* TextureProperties.d:
	* TextureCoordinate.o:
	* TextureCoordinate.d:
	* X3DAppearanceNode.d:
	* X3DDragSensorNode.o:
	* X3DDragSensorNode.d:
	* Browser.h:
	* X3DAppearanceNode.o:
	* X3DBackgroundNode.d:
	* X3DBackgroundNode.o:
	* NurbsSwungSurface.d:
	* NurbsSwungSurface.o:
	* X3DRigidJointNode.d:
	* X3DRigidJointNode.o:
	* NurbsSweptSurface.d:
	* NurbsSweptSurface.o:
	* OrientationDamper.d:
	* OrientationDamper.o:
	* X3DPickableObject.d:
	* X3DPickableObject.o:
	* OrientationChaser.d:
	* OrientationChaser.o:
	* ComposedTexture3D.d:
	* ComposedTexture3D.o:
	* BrowserProperties.d:
	* ColorInterpolator.d:
	* ColorInterpolator.o:
	* BrowserProperties.o:
	* SupportedProfiles.o:
	* NurbsPatchSurface.d:
	* NurbsPatchSurface.o:
	* ContourPolyline2D.d:
	* ContourPolyline2D.o:
	* X3DMetadataObject.o:
	* GarbargeCollector.o:
	* X3DPickSensorNode.d:
	* X3DPickSensorNode.o:
	* GeoProximitySensor.d:
	* NormalInterpolator.o:
	* GeoProximitySensor.o:
	* X3DFieldDefinition.o:
	* NormalInterpolator.d:
	* ScalarInterpolator.d:
	* X3DTouchSensorNode.o:
	* X3DSoundSourceNode.o:
	* ScalarInterpolator.o:
	* X3DSoundSourceNode.d:
	* X3DTouchSensorNode.d:
	* IndexedTriangleSet.d:
	* TextureTransform3D.o:
	* TextureTransform3D.d:
	* ComponentInfoArray.o:
	* ComponentInfoArray.d:
	* FieldDefinitionSet.o:
	* IndexedTriangleSet.o:
	* GravityPhysicsModel.d:
	* GravityPhysicsModel.o:
	* X3DInterpolatorNode.d:
	* X3DInterpolatorNode.o:
	* CollisionCollection.d:
	* CollisionCollection.o:
	* BoundedPhysicsModel.o:
	* BoundedPhysicsModel.d:
	* ImageCubeMapTexture.o:
	* Surface.cpp:
	* TextureCoordinate4D.o:
	* RenderingProperties.o:
	* TextureCoordinate3D.o:
	* TextureCoordinate4D.d:
	* RenderingProperties.d:
	* NurbsTrimmedSurface.d:
	* NurbsTrimmedSurface.o:
	* PrimitivePickSensor.o:
	* PrimitivePickSensor.d:
	* X3DExecutionContext.o:
	* RigidBodyCollection.o:
	* Browser.cpp:
	* X3DExecutionContext.d:
	* SupportedComponents.o:
	* TextureCoordinate3D.d:
	* RigidBodyCollection.d:
	* X3DTimeDependentNode.o:
	* X3DNetworkSensorNode.o:
	* X3DNetworkSensorNode.d:
	* X3DTimeDependentNode.d:
	* PositionInterpolator.o:
	* X3DPrototypeInstance.d:
	* FloatVertexAttribute.o:
	* X3DPrototypeInstance.o:
	* SingleAxisHingeJoint.o:
	* DISEntityTypeMapping.o:
	* FieldDefinitionArray.o:
	* SingleAxisHingeJoint.d:
	* DoubleAxisHingeJoint.d:
	* InterfaceDeclaration.o:
	* PositionInterpolator.d:
	* QuadSphereProperties.o:
	* QuadSphereProperties.d:
	* X3DBrowser.h:
	* FloatVertexAttribute.d:
	* DoubleAxisHingeJoint.o:
	* MultiTextureTransform.d:
	* MultiTextureTransform.o:
	* IndexedTriangleFanSet.o:
	* IndexedTriangleFanSet.d:
	* X3DParticleEmitterNode.d:
	* X3DNBodyCollidableNode.o:
	* PositionInterpolator2D.o:
	* PositionInterpolator2D.d:
	* X3DParticleEmitterNode.o:
	* X3DVertexAttributeNode.d:
	* Matrix3VertexAttribute.d:
	* Matrix3VertexAttribute.o:
	* CoordinateInterpolator.d:
	* CoordinateInterpolator.o:
	* X3DVertexAttributeNode.o:
	* MultiTextureCoordinate.o:
	* NurbsTextureCoordinate.d:
	* NurbsTextureCoordinate.o:
	* Matrix4VertexAttribute.d:
	* Matrix4VertexAttribute.o:
	* MultiTextureCoordinate.d:
	* X3DKeyDeviceSensorNode.d:
	* X3DKeyDeviceSensorNode.o:
	* X3DAppearanceChildNode.d:
	* X3DAppearanceChildNode.o:
	* X3DBrowser.cpp:
	* X3DNBodyCollidableNode.d:
	* ComposedCubeMapTexture.o:
	* X3DComposedGeometryNode.d:
	* GeoPositionInterpolator.d:
	* OrientationInterpolator.d:
	* OrientationInterpolator.o:
	* X3DComposedGeometryNode.o:
	* IndexedTriangleStripSet.d:
	* IndexedTriangleStripSet.o:
	* GeneratedCubeMapTexture.o:
	* X3DTextureTransformNode.o:
	* X3DTextureTransformNode.d:
	* GeoPositionInterpolator.o:
	* TextureTransformMatrix3D.d:
	* NurbsSurfaceInterpolator.d:
	* CoordinateInterpolator2D.d:
	* CoordinateInterpolator2D.o:
	* X3DGeometricPropertyNode.d:
	* X3DTextureCoordinateNode.o:
	* X3DTextureCoordinateNode.d:
	* TextureTransformMatrix3D.o:
	* X3DGeometricPropertyNode.o:
	* SplineScalarInterpolator.d:
	* X3DNurbsControlCurveNode.o:
	* X3DNurbsControlCurveNode.d:
	* NurbsSurfaceInterpolator.o:
	* SplineScalarInterpolator.o:
	* X3DParametricGeometryNode.d:
	* NurbsPositionInterpolator.o:
	* X3DParametricGeometryNode.o:
	* X3DEnvironmentTextureNode.o:
	* NurbsPositionInterpolator.d:
	* X3DEnvironmentalSensorNode.o:
	* X3DEnvironmentalSensorNode.d:
	* X3DNBodyCollisionSpaceNode.d:
	* SplinePositionInterpolator.d:
	* X3DNBodyCollisionSpaceNode.o:
	* SplinePositionInterpolator.o:
	* TextureCoordinateGenerator.d:
	* TextureCoordinateGenerator.o:
	* X3DPointingDeviceSensorNode.o:
	* X3DPointingDeviceSensorNode.d:
	* X3DProgrammableShaderObject.o:
	* X3DProgrammableShaderObject.d:
	* X3DNurbsSurfaceGeometryNode.d:
	* X3DNurbsSurfaceGeometryNode.o:
	* X3DParticlePhysicsModelNode.o:
	* X3DParticlePhysicsModelNode.d:
	* SquadOrientationInterpolator.d:
	* BrowserEnvironment.h:
	* NurbsOrientationInterpolator.o:
	* NurbsOrientationInterpolator.d:
	* SplinePositionInterpolator2D.d:
	* X3DProductStructureChildNode.o:
	* SplinePositionInterpolator2D.o:
	* SquadOrientationInterpolator.o:
	* BrowserEnvironment.cpp:
	* ImageTexture.cpp:
	* BrowserOptions.cpp:
	* X3DTexture2DNode.h:
	* X3DTexture2DNode.cpp: 

2012-10-24  Holger Seelig  <holger.seelig@yahoo.de>

	* Fog.o:
	* Box.o:
	* Fog.d:
	* X3D.o:
	* X3D.d:
	* Box.d:
	* X3D.cpp:
	* LOD.o:
	* LOD.d:
	* Cone.o:
	* Cone.d:
	* Text.o:
	* Text.d:
	* Sound.o:
	* World.o:
	* World.d:
	* Color.d:
	* Color.o:
	* Group.d:
	* Proto.d:
	* Proto.o:
	* Layer.o:
	* Layer.d:
	* Group.o:
	* Route.d:
	* Shape.d:
	* Shape.o:
	* Sound.d:
	* Route.o:
	* Scene.d:
	* Scene.o:
	* Arc2D.o:
	* Arc2D.d:
	* Layout.o:
	* Layout.d:
	* GeoLOD.o:
	* Disk2D.o:
	* Disk2D.d:
	* Inline.o:
	* Anchor.o:
	* Script.o:
	* Normal.o:
	* Normal.d:
	* Script.d:
	* GeoLOD.d:
	* Switch.d:
	* Switch.o:
	* Viewer.d:
	* Sphere.o:
	* Parser.o:
	* Sphere.d:
	* Inline.d:
	* Anchor.d:
	* Parser.d:
	* Viewer.o:
	* CADPart.o:
	* CADPart.d:
	* QuadSet.o:
	* Contact.d:
	* QuadSet.d:
	* X3DNode.o:
	* Contact.o:
	* Browser.o:
	* Browser.d:
	* LineSet.d:
	* X3DNode.d:
	* CADFace.o:
	* CADFace.d:
	* LineSet.o:
	* NurbsSet.d:
	* X3DScene.o:
	* libtitania-x3d.md.pc:
	* NurbsSet.o:
	* LayerSet.o:
	* LayerSet.d:
	* CADLayer.d:
	* LocalFog.o:
	* Circle2D.d:
	* CADLayer.o:
	* Material.d:
	* X3DScene.d:
	* Material.o:
	* Viewport.d:
	* Viewport.o:
	* Circle2D.o:
	* LocalFog.d:
	* PointSet.d:
	* Cylinder.d:
	* Cylinder.o:
	* PointSet.o:
	* FontStyle.d:
	* FontStyle.o:
	* RigidBody.d:
	* SignalPdu.o:
	* Extrusion.o:
	* KeySensor.o:
	* Extrusion.d:
	* KeySensor.d:
	* Generator.o:
	* GeoOrigin.o:
	* Generator.d:
	* RigidBody.o:
	* SignalPdu.d:
	* GeoOrigin.d:
	* Transform.o:
	* Transform.d:
	* Viewpoint.o:
	* Viewpoint.d:
	* ClipPlane.o:
	* HAnimSite.d:
	* HAnimSite.o:
	* ClipPlane.d:
	* BallJoint.o:
	* Billboard.d:
	* AudioClip.o:
	* BallJoint.d:
	* WorldInfo.d:
	* AudioClip.d:
	* Billboard.o:
	* WorldInfo.o:
	* SpotLight.o:
	* SpotLight.d:
	* ColorRGBA.d:
	* ColorRGBA.o:
	* Contour2D.d:
	* Contour2D.o:
	* Collision.d:
	* Collision.o:
	* Polyline2D.o:
	* Polyline2D.d:
	* MotionBlur.d:
	* LoadSensor.d:
	* PointLight.d:
	* MotorJoint.o:
	* PointLight.o:
	* LoadSensor.o:
	* HAnimJoint.o:
	* MotionBlur.o:
	* NurbsCurve.o:
	* NurbsCurve.d:
	* MotorJoint.d:
	* HAnimJoint.d:
	* ShaderPart.o:
	* X3DBrowser.o:
	* ShaderPart.d:
	* TimeSensor.o:
	* TimeSensor.d:
	* X3DBrowser.d:
	* Coordinate.d:
	* Coordinate.o:
	* Appearance.o:
	* Appearance.d:
	* ArcClose2D.o:
	* ArcClose2D.d:
	* Background.d:
	* Background.o:
	* StaticGroup.d:
	* MetadataSet.o:
	* ColorDamper.o:
	* StaticGroup.o:
	* MetadataSet.d:
	* TouchSensor.o:
	* ConeEmitter.d:
	* ConeEmitter.o:
	* TriangleSet.d:
	* TriangleSet.o:
	* CADAssembly.o:
	* CADAssembly.d:
	* TouchSensor.d:
	* ColorDamper.d:
	* TimeTrigger.d:
	* TimeTrigger.o:
	* ReceiverPdu.o:
	* ReceiverPdu.d:
	* Polypoint2D.d:
	* Rectangle2D.d:
	* LayoutGroup.d:
	* LayoutGroup.o:
	* Rectangle2D.o:
	* ProfileInfo.o:
	* X3DRenderer.d:
	* ExternProto.o:
	* ProfileInfo.d:
	* Polypoint2D.o:
	* ExternProto.d:
	* X3DRenderer.o:
	* ScreenGroup.d:
	* LayoutLayer.d:
	* SliderJoint.o:
	* LayoutLayer.o:
	* PlaneSensor.d:
	* PlaneSensor.o:
	* GeoMetadata.o:
	* GeoLocation.d:
	* SliderJoint.d:
	* ScreenGroup.o:
	* GeoLocation.o:
	* GeoMetadata.d:
	* X3DUrlObject.o:
	* X3DUrlObject.d:
	* X3DShapeNode.o:
	* MetadataBool.d:
	* X3DLightNode.d:
	* X3DLayerNode.o:
	* X3DLayerNode.d:
	* X3DLightNode.o:
	* ScalarChaser.d:
	* ScalarChaser.o:
	* SphereSensor.o:
	* StringSensor.d:
	* StringSensor.o:
	* X3DBasicNode.o:
	* X3DBasicNode.d:
	* SphereSensor.d:
	* MultiTexture.d:
	* MultiTexture.o:
	* X3DShapeNode.d:
	* MetadataBool.o:
	* MovieTexture.d:
	* MovieTexture.o:
	* PixelTexture.o:
	* PointEmitter.d:
	* PointEmitter.o:
	* NurbsCurve2D.d:
	* NurbsCurve2D.o:
	* PixelTexture.d:
	* GeoViewpoint.d:
	* GeoTransform.o:
	* HAnimSegment.d:
	* HAnimSegment.o:
	* ImageTexture.d:
	* ImageTexture.o:
	* GeoTransform.d:
	* GeoViewpoint.o:
	* ComponentInfo.d:
	* HAnimHumanoid.o:
	* FogCoordinate.o:
	* ShaderProgram.o:
	* ComponentInfo.o:
	* GeoCoordinate.d:
	* HAnimHumanoid.d:
	* BooleanFilter.o:
	* ElevationGrid.o:
	* MetadataFloat.d:
	* MetadataFloat.o:
	* GeoCoordinate.o:
	* VolumeEmitter.o:
	* TriangleSet2D.o:
	* PickableGroup.d:
	* ProgramShader.o:
	* VolumeEmitter.d:
	* EaseInEaseOut.d:
	* EaseInEaseOut.o:
	* TriangleSet2D.d:
	* ProgramShader.d:
	* X3DScriptNode.o:
	* ShaderProgram.d:
	* FogCoordinate.d:
	* BooleanFilter.d:
	* X3DScriptNode.d:
	* PickableGroup.o:
	* BooleanToggle.d:
	* ElevationGrid.d:
	* BooleanToggle.o:
	* ComposedShader.d:
	* ComposedShader.o:
	* EspduTransform.o:
	* ViewpointGroup.o:
	* OrthoViewpoint.d:
	* PackagedShader.o:
	* ParticleSystem.d:
	* OrthoViewpoint.o:
	* PackagedShader.d:
	* ParticleSystem.o:
	* PositionDamper.d:
	* PositionDamper.o:
	* BooleanTrigger.o:
	* PositionChaser.d:
	* PositionChaser.o:
	* BooleanTrigger.d:
	* ViewpointGroup.d:
	* FillProperties.o:
	* CylinderSensor.d:
	* CylinderSensor.o:
	* UniversalJoint.o:
	* PixelTexture3D.o:
	* UniversalJoint.d:
	* PixelTexture3D.d:
	* GeoTouchSensor.o:
	* GeoTouchSensor.d:
	* PointingDevice.d:
	* PointingDevice.o:
	* ShapeContainer.d:
	* FillProperties.d:
	* ShapeContainer.o:
	* IndexedFaceSet.d:
	* MetadataString.d:
	* IndexedFaceSet.o:
	* MetadataDouble.d:
	* MetadataDouble.o:
	* EspduTransform.d:
	* CollisionSpace.d:
	* ImageTexture3D.d:
	* MetadataString.o:
	* ImageTexture3D.o:
	* IndexedLineSet.d:
	* LinePickSensor.o:
	* LineProperties.d:
	* LinePickSensor.d:
	* IntegerTrigger.o:
	* IntegerTrigger.d:
	* TransmitterPdu.d:
	* IndexedLineSet.o:
	* IndexedQuadSet.d:
	* LineProperties.o:
	* IndexedQuadSet.o:
	* SupportedNodes.d:
	* SupportedNodes.o:
	* HAnimDisplacer.d:
	* BrowserOptions.o:
	* TriangleFanSet.o:
	* TriangleFanSet.d:
	* TransmitterPdu.o:
	* NavigationInfo.o:
	* SurfaceEmitter.o:
	* SurfaceEmitter.d:
	* NavigationInfo.d:
	* HAnimDisplacer.o:
	* BrowserOptions.d:
	* CollisionSpace.o:
	* X3DViewportNode.o:
	* X3DViewportNode.d:
	* TransformSensor.d:
	* libtitania-x3d.so:
	* CollidableShape.o:
	* CollidableShape.d:
	* X3DBindableNode.d:
	* X3DBindableNode.o:
	* ScreenFontStyle.o:
	* ScreenFontStyle.d:
	* X3DGroupingNode.d:
	* MetadataInteger.d:
	* X3DGroupingNode.o:
	* ProximitySensor.o:
	* PointPickSensor.o:
	* ProximitySensor.d:
	* MetadataInteger.o:
	* PointPickSensor.d:
	* CollisionSensor.d:
	* TransformSensor.o:
	* PolylineEmitter.o:
	* CollisionSensor.o:
	* PolylineEmitter.d:
	* DirectionalLight.o:
	* DirectionalLight.d:
	* TexCoordDamper2D.d:
	* TexCoordDamper2D.o:
	* TriangleStripSet.o:
	* TriangleStripSet.d:
	* CollidableOffset.o:
	* CollidableOffset.d:
	* TextureTransform.d:
	* TextureTransform.o:
	* CoordinateDouble.o:
	* CoordinateDouble.d:
	* DISEntityManager.o:
	* DISEntityManager.d:
	* CoordinateDamper.d:
	* TwoSidedMaterial.d:
	* TwoSidedMaterial.o:
	* CoordinateDamper.o:
	* X3DViewpointNode.o:
	* PositionChaser2D.d:
	* WindPhysicsModel.o:
	* PositionChaser2D.o:
	* WindPhysicsModel.d:
	* PositionDamper2D.o:
	* PositionDamper2D.d:
	* BooleanSequencer.d:
	* X3DTexture2DNode.o:
	* X3DTexture2DNode.d:
	* GeoElevationGrid.o:
	* X3DViewpointNode.d:
	* BooleanSequencer.o:
	* GeoElevationGrid.d:
	* VisibilitySensor.d:
	* ExplosionEmitter.d:
	* ExplosionEmitter.o:
	* JavaScriptEngine.o:
	* JavaScriptEngine.d:
	* IntegerSequencer.o:
	* IntegerSequencer.d:
	* VolumePickSensor.o:
	* VolumePickSensor.d:
	* VisibilitySensor.o:
	* NurbsPatchSurface.d:
	* ColorInterpolator.d:
	* ColorInterpolator.o:
	* NurbsPatchSurface.o:
	* NurbsSwungSurface.d:
	* NurbsSweptSurface.o:
	* NurbsSweptSurface.d:
	* NurbsSwungSurface.o:
	* BrowserProperties.d:
	* TextureCoordinate.o:
	* TextureProperties.d:
	* TextureProperties.o:
	* TextureBackground.d:
	* BrowserProperties.o:
	* TextureCoordinate.d:
	* TextureBackground.o:
	* ContourPolyline2D.d:
	* ComposedTexture3D.o:
	* ComposedTexture3D.d:
	* ContourPolyline2D.o:
	* X3DBackgroundNode.d:
	* OrientationDamper.o:
	* OrientationDamper.d:
	* OrientationChaser.d:
	* X3DBackgroundNode.o:
	* OrientationChaser.o:
	* ScalarInterpolator.o:
	* GeoProximitySensor.d:
	* GeoProximitySensor.o:
	* TextureTransform3D.d:
	* TextureTransform3D.o:
	* IndexedTriangleSet.o:
	* ScalarInterpolator.d:
	* IndexedTriangleSet.d:
	* NormalInterpolator.d:
	* NormalInterpolator.o:
	* BoundedPhysicsModel.d:
	* PrimitivePickSensor.d:
	* PrimitivePickSensor.o:
	* RigidBodyCollection.o:
	* RigidBodyCollection.d:
	* RenderingProperties.o:
	* RenderingProperties.d:
	* Browser.cpp:
	* CollisionCollection.o:
	* CollisionCollection.d:
	* GravityPhysicsModel.o:
	* ImageCubeMapTexture.d:
	* ImageCubeMapTexture.o:
	* X3DExecutionContext.o:
	* X3DExecutionContext.d:
	* GravityPhysicsModel.d:
	* NurbsTrimmedSurface.o:
	* TextureCoordinate4D.d:
	* TextureCoordinate3D.o:
	* BoundedPhysicsModel.o:
	* TextureCoordinate4D.o:
	* TextureCoordinate3D.d:
	* NurbsTrimmedSurface.d:
	* X3DPrototypeInstance.d:
	* X3DPrototypeInstance.o:
	* X3DBrowser.h:
	* DoubleAxisHingeJoint.o:
	* DoubleAxisHingeJoint.d:
	* QuadSphereProperties.d:
	* QuadSphereProperties.o:
	* DISEntityTypeMapping.o:
	* DISEntityTypeMapping.d:
	* SingleAxisHingeJoint.o:
	* SingleAxisHingeJoint.d:
	* FloatVertexAttribute.d:
	* PositionInterpolator.d:
	* PositionInterpolator.o:
	* FloatVertexAttribute.o:
	* IndexedTriangleFanSet.o:
	* MultiTextureTransform.o:
	* IndexedTriangleFanSet.d:
	* MultiTextureTransform.d:
	* PositionInterpolator2D.o:
	* NurbsTextureCoordinate.o:
	* PositionInterpolator2D.d:
	* NurbsTextureCoordinate.d:
	* ComposedCubeMapTexture.o:
	* Matrix4VertexAttribute.d:
	* ComposedCubeMapTexture.d:
	* Matrix3VertexAttribute.d:
	* Matrix3VertexAttribute.o:
	* Matrix4VertexAttribute.o:
	* CoordinateInterpolator.d:
	* CoordinateInterpolator.o:
	* MultiTextureCoordinate.o:
	* X3DBrowser.cpp:
	* MultiTextureCoordinate.d:
	* OrientationInterpolator.d:
	* OrientationInterpolator.o:
	* IndexedTriangleStripSet.d:
	* IndexedTriangleStripSet.o:
	* GeoPositionInterpolator.o:
	* GeneratedCubeMapTexture.o:
	* GeneratedCubeMapTexture.d:
	* GeoPositionInterpolator.d:
	* SplineScalarInterpolator.o:
	* NurbsSurfaceInterpolator.o:
	* SplineScalarInterpolator.d:
	* CoordinateInterpolator2D.d:
	* NurbsSurfaceInterpolator.d:
	* TextureTransformMatrix3D.d:
	* TextureTransformMatrix3D.o:
	* CoordinateInterpolator2D.o:
	* NurbsPositionInterpolator.d:
	* NurbsPositionInterpolator.o:
	* SplinePositionInterpolator.d:
	* TextureCoordinateGenerator.d:
	* TextureCoordinateGenerator.o:
	* SplinePositionInterpolator.o:
	* X3DPointingDeviceSensorNode.d:
	* X3DPointingDeviceSensorNode.o:
	* SplinePositionInterpolator2D.d:
	* NurbsOrientationInterpolator.o:
	* SplinePositionInterpolator2D.o:
	* SquadOrientationInterpolator.o:
	* SquadOrientationInterpolator.d:
	* NurbsOrientationInterpolator.d:
	* Inline.cpp:
	* Anchor.cpp:
	* SpotLight.cpp:
	* X3DLightNode.h:
	* PointLight.cpp:
	* PixelTexture.h:
	* ImageTexture.h:
	* X3DLightNode.cpp:
	* X3DUrlObject.h:
	* PixelTexture.cpp:
	* ImageTexture.cpp:
	* X3DUrlObject.cpp:
	* X3DTexture2DNode.h:
	* X3DGroupingNode.cpp:
	* RenderingProperties.h:
	* DirectionalLight.cpp:
	* X3DTexture2DNode.cpp:
	* RenderingProperties.cpp: 

2012-10-23  Holger Seelig  <holger.seelig@yahoo.de>

	* X3D.h:
	* libtitania-x3d.cproj:
	* Viewer.h:
	* Surface.h:
	* Viewer.cpp:
	* Surface.cpp:
	* Browser.cpp:
	* X3DBrowser.h:
	* DrawingArea.h:
	* X3DBrowser.cpp:
	* DrawingArea.cpp:
	* PointingDevice.h:
	* PointingDevice.cpp:
	* ShapeContainer.cpp:
	* X3DShapeNode.cpp:
	* RenderingProperties.h:
	* X3DTexture2DNode.cpp: 

2012-10-23  Holger Seelig  <holger.seelig@yahoo.de>

	* X3D.o:
	* Viewer.o:
	* libtitania-x3d.md.pc:
	* DrawingArea.o:
	* PointingDevice.o:
	* libtitania-x3d.so:
	* DrawingArea.cpp:
	* X3DLightNode.cpp: 

2012-10-22  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DBrowser.o:
	* libtitania-x3d.so:
	* RenderingProperties.cpp: 

2012-10-22  Holger Seelig  <holger.seelig@yahoo.de>

	* RenderingProperties.cpp: 

2012-10-22  Holger Seelig  <holger.seelig@yahoo.de>

	* RenderingProperties.cpp: 

2012-10-22  Holger Seelig  <holger.seelig@yahoo.de>

	* RenderingProperties.cpp: 

2012-10-22  Holger Seelig  <holger.seelig@yahoo.de>

	* info.h:
	* ChangeLog:
	* X3D.h:
	* Box.o:
	* Box.d:
	* LOD.o:
	* Fog.d:
	* Fog.o:
	* LOD.d:
	* X3D.d:
	* X3D.o:
	* X3D.cpp:
	* Cone.d:
	* Cone.o:
	* Type.o:
	* Type.d:
	* Text.o:
	* Text.d:
	* Group.o:
	* Image.d:
	* Group.d:
	* Proto.d:
	* Route.d:
	* Scene.d:
	* Scene.o:
	* Layer.o:
	* RegEx.d:
	* RegEx.o:
	* Layer.d:
	* Image.o:
	* Proto.o:
	* Route.o:
	* Error.o:
	* Arc2D.o:
	* Arc2D.d:
	* Sound.o:
	* World.d:
	* Color.o:
	* Color.d:
	* World.o:
	* Error.d:
	* Shape.d:
	* Shape.o:
	* Sound.d:
	* Router.d:
	* Parser.d:
	* Router.o:
	* SFNode.o:
	* SFNode.d:
	* Script.o:
	* Script.d:
	* Parser.o:
	* Viewer.d:
	* Viewer.o:
	* SFVec3.d:
	* SFVec2.o:
	* Sphere.o:
	* SFVec4.d:
	* SFVec3.o:
	* Sphere.d:
	* SFTime.o:
	* SFTime.d:
	* SFVec4.o:
	* Switch.d:
	* Switch.o:
	* SFVec2.d:
	* Normal.o:
	* Inline.o:
	* Inline.d:
	* Layout.d:
	* MFNode.d:
	* Layout.o:
	* GeoLOD.o:
	* Anchor.d:
	* Anchor.o:
	* Disk2D.d:
	* GeoLOD.d:
	* Disk2D.o:
	* Normal.d:
	* MFNode.o:
	* Contact.o:
	* CADPart.o:
	* Contact.d:
	* X3DBase.o:
	* X3DBase.d:
	* CADPart.d:
	* X3DType.d:
	* X3DType.o:
	* CADFace.o:
	* Browser.o:
	* libtitania-x3d.pidb:
	* CADFace.d:
	* MFInt32.d:
	* X3DNode.o:
	* X3DNode.d:
	* QuadSet.o:
	* QuadSet.d:
	* MFInt32.o:
	* Browser.d:
	* SFImage.d:
	* SFImage.o:
	* LineSet.d:
	* SFColor.o:
	* LineSet.o:
	* SFColor.d:
	* NurbsSet.d:
	* Circle2D.o:
	* Circle2D.d:
	* X3DInput.o:
	* X3DInput.d:
	* CADLayer.o:
	* CADLayer.d:
	* Viewport.o:
	* Viewport.d:
	* Material.d:
	* SFString.o:
	* LayerSet.d:
	* LayerSet.o:
	* SFString.d:
	* RouteSet.d:
	* LocalFog.o:
	* LocalFog.d:
	* RouteSet.o:
	* PointSet.o:
	* Cylinder.d:
	* Cylinder.o:
	* NurbsSet.o:
	* findNode:
	* Material.o:
	* HitArray.o:
	* PointSet.d:
	* Fields.h:
	* HitArray.d:
	* strfsize.o:
	* X3DScene.d:
	* X3DProto.o:
	* strfsize.d:
	* libtitania-x3d.md.pc:
	* libtitania-x3d.cproj:
	* X3DProto.d:
	* X3DScene.o:
	* ClipPlane.d:
	* WorldInfo.o:
	* Extrusion.o:
	* ClipPlane.o:
	* HAnimSite.d:
	* Billboard.o:
	* GeoOrigin.d:
	* GeoOrigin.o:
	* Extrusion.d:
	* KeySensor.d:
	* SFMatrix3.d:
	* RigidBody.o:
	* KeySensor.o:
	* WorldInfo.d:
	* SFMatrix4.o:
	* SFMatrix3.o:
	* SFMatrix4.d:
	* Billboard.d:
	* FontStyle.o:
	* BallJoint.o:
	* FontStyle.d:
	* BallJoint.d:
	* SpotLight.o:
	* Contour2D.o:
	* Contour2D.d:
	* SpotLight.d:
	* AudioClip.o:
	* SignalPdu.d:
	* Generator.o:
	* HAnimSite.o:
	* AudioClip.d:
	* X3DScalar.o:
	* X3DScalar.d:
	* SignalPdu.o:
	* Generator.d:
	* Collision.d:
	* X3DOutput.o:
	* X3DOutput.d:
	* ColorRGBA.d:
	* Viewpoint.d:
	* X3DParser.d:
	* X3DObject.o:
	* NodeArray.d:
	* Transform.o:
	* Transform.d:
	* X3DObject.d:
	* NodeArray.o:
	* X3DParser.o:
	* Viewpoint.o:
	* ColorRGBA.o:
	* ObjectSet.o:
	* Collision.o:
	* ObjectSet.d:
	* RigidBody.d:
	* LoadSensor.o:
	* X3DBrowser.o:
	* Background.d:
	* MotionBlur.o:
	* HAnimJoint.d:
	* Polyline2D.d:
	* Polyline2D.o:
	* X3DBrowser.d:
	* Coordinate.d:
	* PointLight.d:
	* Coordinate.o:
	* Statistics.d:
	* Statistics.o:
	* PointLight.o:
	* Background.o:
	* MotorJoint.d:
	* MotorJoint.o:
	* HAnimJoint.o:
	* ViewVolume.o:
	* Appearance.o:
	* ViewVolume.d:
	* Appearance.d:
	* ProtoArray.o:
	* NurbsCurve.o:
	* MotionBlur.d:
	* NurbsCurve.d:
	* TimeSensor.d:
	* uncompress.o:
	* TimeSensor.o:
	* ArcClose2D.d:
	* X3DContext.o:
	* ShaderPart.o:
	* X3DContext.d:
	* LoadSensor.d:
	* uncompress.d:
	* ShaderPart.d:
	* RouteArray.o:
	* ArcClose2D.o:
	* RouteArray.d:
	* ProtoArray.d:
	* TriangleSet.o:
	* TimeTrigger.d:
	* GeoMetadata.d:
	* GeoLocation.o:
	* TriangleSet.d:
	* GeoMetadata.o:
	* TouchSensor.o:
	* TouchSensor.d:
	* TimeTrigger.o:
	* GeoLocation.d:
	* X3DRenderer.d:
	* X3DRenderer.o:
	* LayoutGroup.d:
	* LayoutGroup.o:
	* LayoutLayer.d:
	* ReceiverPdu.d:
	* Rectangle2D.o:
	* Rectangle2D.d:
	* ReceiverPdu.o:
	* LayoutLayer.o:
	* PlaneSensor.o:
	* PlaneSensor.d:
	* MetadataSet.d:
	* Polypoint2D.d:
	* ProfileInfo.o:
	* ProfileInfo.d:
	* Polypoint2D.o:
	* SliderJoint.o:
	* SliderJoint.d:
	* ScreenGroup.o:
	* BaseNodeSet.d:
	* StaticGroup.o:
	* StaticGroup.d:
	* BaseNodeSet.o:
	* ScreenGroup.d:
	* SFColorRGBA.o:
	* SFColorRGBA.d:
	* MetadataSet.o:
	* SFRotation4.d:
	* ArrayFields.o:
	* ArrayFields.d:
	* SFRotation4.o:
	* DrawingArea.o:
	* X3DInfoNode.o:
	* X3DInfoNode.d:
	* DrawingArea.d:
	* ConeEmitter.o:
	* ColorDamper.o:
	* ColorDamper.d:
	* CADAssembly.d:
	* CADAssembly.o:
	* Type.h:
	* X3DBaseNode.o:
	* ExternProto.d:
	* ExternProto.o:
	* X3DBaseNode.d:
	* ConeEmitter.d:
	* NurbsCurve2D.o:
	* X3DSoundNode.o:
	* NurbsCurve2D.d:
	* X3DSoundNode.d:
	* X3DShapeNode.o:
	* StringSensor.o:
	* StringSensor.d:
	* X3DFogObject.d:
	* HAnimSegment.o:
	* X3DUrlObject.o:
	* X3DUrlObject.d:
	* HAnimSegment.d:
	* MultiTexture.d:
	* X3DFogObject.o:
	* Time.h:
	* Error.h:
	* MultiTexture.o:
	* X3DChildNode.d:
	* X3DChildNode.o:
	* ImageTexture.d:
	* ImageTexture.o:
	* X3DConstants.d:
	* X3DConstants.o:
	* X3DColorNode.d:
	* X3DColorNode.o:
	* X3DBasicNode.d:
	* X3DBasicNode.o:
	* MovieTexture.d:
	* X3DShapeNode.d:
	* SphereSensor.o:
	* SphereSensor.d:
	* ScalarChaser.d:
	* ScalarChaser.o:
	* GeoTransform.d:
	* MovieTexture.o:
	* GeoTransform.o:
	* GeoViewpoint.o:
	* GeoViewpoint.d:
	* Components.h:
	* MetadataBool.d:
	* PixelTexture.d:
	* PixelTexture.o:
	* MetadataBool.o:
	* PointEmitter.o:
	* X3DLayerNode.d:
	* X3DLayerNode.o:
	* X3DLightNode.d:
	* X3DLightNode.o:
	* PointEmitter.d:
	* JavaScript.h:
	* X3DDamperNode.o:
	* X3DNormalNode.d:
	* ShaderProgram.o:
	* X3DNormalNode.o:
	* FogCoordinate.d:
	* ShaderProgram.d:
	* X3DScriptNode.d:
	* ComponentInfo.d:
	* NodeTypeArray.o:
	* ComponentInfo.o:
	* X3DScriptNode.o:
	* X3DDamperNode.d:
	* ElevationGrid.d:
	* ElevationGrid.o:
	* ProgramShader.d:
	* ProgramShader.o:
	* X3DLayoutNode.o:
	* Hit.h:
	* PickableGroup.d:
	* X3DLayoutNode.d:
	* Image.h:
	* EaseInEaseOut.o:
	* X3DSensorNode.d:
	* X3DSensorNode.o:
	* NodeTypeArray.d:
	* MetadataFloat.o:
	* PickableGroup.o:
	* X3DShaderNode.d:
	* X3DShaderNode.o:
	* EaseInEaseOut.d:
	* MetadataFloat.d:
	* VolumeEmitter.d:
	* VolumeEmitter.o:
	* TriangleSet2D.d:
	* X3DChaserNode.d:
	* TriangleSet2D.o:
	* GeoCoordinate.d:
	* HAnimHumanoid.o:
	* BooleanFilter.d:
	* HAnimHumanoid.d:
	* GeoCoordinate.o:
	* BooleanFilter.o:
	* Array.h:
	* FogCoordinate.o:
	* BooleanToggle.o:
	* BooleanToggle.d:
	* Type.cpp:
	* X3DChaserNode.o:
	* HAnimDisplacer.o:
	* PixelTexture3D.d:
	* ComposedShader.o:
	* NavigationInfo.o:
	* HAnimDisplacer.d:
	* ParticleSystem.o:
	* PixelTexture3D.o:
	* UniversalJoint.d:
	* RequesterStack.o:
	* RegEx.h:
	* EspduTransform.o:
	* JavaScript.cpp:
	* TransmitterPdu.o:
	* TransmitterPdu.d:
	* PointingDevice.o:
	* EspduTransform.d:
	* RequesterStack.d:
	* ViewpointGroup.d:
	* X3DTriggerNode.o:
	* BooleanTrigger.o:
	* X3DTriggerNode.d:
	* ViewpointGroup.o:
	* PositionChaser.d:
	* X3DType.h:
	* PositionChaser.o:
	* PositionDamper.o:
	* PositionDamper.d:
	* LinePickSensor.o:
	* LineProperties.d:
	* GeoTouchSensor.d:
	* LinePickSensor.d:
	* GeoTouchSensor.o:
	* CollisionSpace.d:
	* CollisionSpace.o:
	* PointingDevice.d:
	* UniversalJoint.o:
	* LineProperties.o:
	* BasicNodeArray.o:
	* ComposedShader.d:
	* BasicNodeArray.d:
	* IndexedLineSet.d:
	* IndexedLineSet.o:
	* IndexedQuadSet.d:
	* IndexedQuadSet.o:
	* MetadataDouble.d:
	* TriangleFanSet.o:
	* BrowserOptions.o:
	* MetadataDouble.o:
	* ImageTexture3D.d:
	* FillProperties.o:
	* ImageTexture3D.o:
	* ShapeContainer.d:
	* ShapeContainer.o:
	* CylinderSensor.d:
	* CylinderSensor.o:
	* Error.cpp:
	* IndexedFaceSet.o:
	* FillProperties.d:
	* IndexedFaceSet.d:
	* TriangleFanSet.d:
	* IntegerTrigger.d:
	* X3DTextureNode.o:
	* PackagedShader.d:
	* SurfaceEmitter.d:
	* MetadataString.d:
	* X3DTextureNode.d:
	* PackagedShader.o:
	* IntegerTrigger.o:
	* BooleanTrigger.d:
	* MetadataString.o:
	* X3DBase.h:
	* SupportedNodes.d:
	* OrthoViewpoint.o:
	* BrowserOptions.d:
	* OrthoViewpoint.d:
	* NavigationInfo.d:
	* SupportedNodes.o:
	* ParticleSystem.d:
	* SurfaceEmitter.o:
	* MetadataInteger.o:
	* Numbers.h:
	* TransformSensor.d:
	* TransformSensor.o:
	* MFNode.h:
	* X3DPropertyNode.o:
	* PointPickSensor.d:
	* PointPickSensor.o:
	* MetadataInteger.d:
	* SFNode.h:
	* X3DFollowerNode.d:
	* X3DFollowerNode.o:
	* X3DInput.h:
	* SupportedFields.o:
	* X3DGeometryNode.d:
	* X3DGroupingNode.o:
	* CollidableShape.d:
	* X3DGeometryNode.o:
	* X3DGroupingNode.d:
	* ScreenFontStyle.d:
	* FieldTypesArray.o:
	* Route.h:
	* ScreenFontStyle.o:
	* X3DBindableNode.o:
	* Image.cpp:
	* SupportedFields.d:
	* X3DBindableNode.d:
	* FieldTypesArray.d:
	* libtitania-x3d.so:
	* X3DViewportNode.o:
	* CollisionSensor.o:
	* SFVec2.h:
	* X3DViewportNode.d:
	* PolylineEmitter.o:
	* PolylineEmitter.d:
	* SFTime.h:
	* X3DPropertyNode.d:
	* SFVec4.h:
	* SFVec3.h:
	* CollidableShape.o:
	* Parser.h:
	* X3DMaterialNode.d:
	* X3DMaterialNode.o:
	* CollisionSensor.d:
	* ProximitySensor.o:
	* ProximitySensor.d:
	* CoordinateDouble.o:
	* ExternProtoArray.o:
	* ExternProtoArray.d:
	* CoordinateDamper.d:
	* CoordinateDamper.o:
	* CoordinateDouble.d:
	* DirectionalLight.d:
	* DISEntityManager.o:
	* DISEntityManager.d:
	* ExplosionEmitter.o:
	* ExplosionEmitter.d:
	* DirectionalLight.o:
	* GeoElevationGrid.d:
	* IntegerSequencer.o:
	* IntegerSequencer.d:
	* X3DField.h:
	* RegEx.cpp:
	* JavaScriptEngine.o:
	* JavaScriptEngine.d:
	* MFInt32.h:
	* SFColor.h:
	* SFImage.h:
	* X3DOutput.h:
	* X3DType.cpp:
	* GeoElevationGrid.o:
	* TextureTransform.d:
	* TextureTransform.o:
	* X3DBase.cpp:
	* BooleanSequencer.d:
	* Viewer.h:
	* ProfileInfoArray.d:
	* TexCoordDamper2D.d:
	* X3DObject.h:
	* TexCoordDamper2D.o:
	* ProfileInfoArray.o:
	* DIS.h:
	* BooleanSequencer.o:
	* PositionDamper2D.o:
	* VolumePickSensor.d:
	* VisibilitySensor.o:
	* VisibilitySensor.d:
	* PositionDamper2D.d:
	* PositionChaser2D.d:
	* WindPhysicsModel.o:
	* WindPhysicsModel.d:
	* PositionChaser2D.o:
	* VolumePickSensor.o:
	* X3DBoundedObject.d:
	* X3DTexture2DNode.o:
	* X3DTexture2DNode.d:
	* X3DTexture3DNode.d:
	* CollidableOffset.d:
	* CollidableOffset.o:
	* TriangleStripSet.o:
	* X3DViewpointNode.d:
	* X3DViewpointNode.o:
	* TriangleStripSet.d:
	* X3DSequencerNode.d:
	* X3DSequencerNode.o:
	* X3DFontStyleNode.o:
	* Requester.h:
	* TwoSidedMaterial.d:
	* X3DBoundedObject.o:
	* TwoSidedMaterial.o:
	* Geometry.h:
	* ObjectSet.h:
	* X3DFontStyleNode.d:
	* Router.h:
	* X3DTexture3DNode.o:
	* Scene.h:
	* World.h:
	* TextureProperties.o:
	* SupportedProfiles.d:
	* SupportedProfiles.o:
	* Time.h:
	* X3DInput.cpp:
	* X3DRigidJointNode.o:
	* X3DRigidJointNode.d:
	* TextureBackground.d:
	* ComposedTexture3D.d:
	* ComposedTexture3D.o:
	* TextureProperties.d:
	* TextureBackground.o:
	* TextureCoordinate.d:
	* TextureCoordinate.o:
	* X3DCoordinateNode.o:
	* X3DDragSensorNode.d:
	* X3DDragSensorNode.o:
	* X3DCoordinateNode.d:
	* X3DPickableObject.o:
	* GarbargeCollector.o:
	* GarbargeCollector.d:
	* ColorInterpolator.o:
	* X3DPickSensorNode.d:
	* X3DPickSensorNode.o:
	* ColorInterpolator.d:
	* X3DMetadataObject.d:
	* X3DMetadataObject.o:
	* X3DPickableObject.d:
	* BrowserProperties.o:
	* SFVec2.cpp:
	* SFVec3.cpp:
	* SFVec4.cpp:
	* SFTime.cpp:
	* MFNode.cpp:
	* SFNode.cpp:
	* SFString.h:
	* X3DBackgroundNode.d:
	* BrowserProperties.d:
	* X3DBackgroundNode.o:
	* X3DAppearanceNode.o:
	* ContourPolyline2D.d:
	* ContourPolyline2D.o:
	* X3DAppearanceNode.d:
	* OrientationChaser.d:
	* OrientationChaser.o:
	* OrientationDamper.d:
	* NurbsSwungSurface.o:
	* NurbsSweptSurface.d:
	* NurbsSweptSurface.o:
	* NurbsSwungSurface.d:
	* Parser.cpp:
	* Text.h:
	* Core.h:
	* Browser.h:
	* OrientationDamper.o:
	* Route.cpp:
	* Proto.h:
	* NurbsPatchSurface.o:
	* NurbsPatchSurface.d:
	* X3DTouchSensorNode.d:
	* ComponentInfoArray.d:
	* SFColor.cpp:
	* SFImage.cpp:
	* BaseNodeSet.h:
	* SFMatrix4.h:
	* SFMatrix3.h:
	* NormalInterpolator.d:
	* TextureTransform3D.o:
	* TextureTransform3D.d:
	* NormalInterpolator.o:
	* X3DParser.h:
	* HitArray.h:
	* Sound.h:
	* MFInt32.cpp:
	* X3DTouchSensorNode.o:
	* RequesterId.h:
	* FieldDefinitionSet.d:
	* X3DFieldDefinition.d:
	* ObjectSet.cpp:
	* X3DRoute.h:
	* Router.cpp:
	* FieldDefinitionSet.o:
	* X3DFieldDefinition.o:
	* X3DScalar.h:
	* RouteSet.h:
	* Viewer.cpp:
	* Shape.h:
	* Matrix.h:
	* X3DBaseNode.h:
	* ComponentInfoArray.o:
	* X3DOutput.cpp:
	* NURBS.h:
	* ScalarInterpolator.d:
	* X3DObject.cpp:
	* X3DSoundSourceNode.d:
	* X3DSoundSourceNode.o:
	* X3DContext.h:
	* IndexedTriangleSet.d:
	* ScalarInterpolator.o:
	* IndexedTriangleSet.o:
	* GeoProximitySensor.d:
	* GeoProximitySensor.o:
	* ImageCubeMapTexture.d:
	* Proto.cpp:
	* ImageCubeMapTexture.o:
	* BoundedPhysicsModel.d:
	* GravityPhysicsModel.d:
	* X3DConstants.h:
	* GravityPhysicsModel.o:
	* X3DExecutionContext.o:
	* PrimitivePickSensor.o:
	* SFString.cpp:
	* BoundedPhysicsModel.o:
	* Browser.cpp:
	* X3DExecutionContext.d:
	* PrimitivePickSensor.d:
	* H-Anim.h:
	* NurbsTrimmedSurface.o:
	* World.cpp:
	* TextureCoordinate4D.o:
	* RigidBodyCollection.o:
	* NurbsTrimmedSurface.d:
	* Layout.h:
	* RenderingProperties.d:
	* SupportedComponents.o:
	* SupportedComponents.d:
	* Scene.cpp:
	* X3DInterpolatorNode.o:
	* CollisionCollection.d:
	* X3DInterpolatorNode.d:
	* RenderingProperties.o:
	* TextureCoordinate3D.d:
	* TextureCoordinate3D.o:
	* CollisionCollection.o:
	* TextureCoordinate4D.d:
	* RigidBodyCollection.d:
	* InterfaceDeclaration.d:
	* FloatVertexAttribute.o:
	* FloatVertexAttribute.d:
	* DoubleAxisHingeJoint.o:
	* RouteArray.h:
	* X3DNetworkSensorNode.o:
	* DoubleAxisHingeJoint.d:
	* DISEntityTypeMapping.d:
	* DISEntityTypeMapping.o:
	* BaseNodeSet.cpp:
	* X3DNetworkSensorNode.d:
	* FieldDefinitionArray.o:
	* SingleAxisHingeJoint.d:
	* SingleAxisHingeJoint.o:
	* FieldDefinitionArray.d:
	* RouteSet.cpp:
	* jsfield.h:
	* Shaders.h:
	* SFMatrix3.cpp:
	* X3DContext.cpp:
	* X3DScene.h:
	* X3DTimeDependentNode.d:
	* X3DScalar.cpp:
	* X3DBasicNode.h:
	* X3DPrototypeInstance.o:
	* SFRotation4.h:
	* X3DParser.cpp:
	* SFMatrix4.cpp:
	* PositionInterpolator.d:
	* PositionInterpolator.o:
	* X3DPrototypeInstance.d:
	* InterfaceDeclaration.o:
	* HitArray.cpp:
	* ArrayFields.h:
	* QuadSphereProperties.o:
	* Picking.h:
	* MotionBlur.h:
	* X3DBaseNode.cpp:
	* geturl.h:
	* X3DProto.h:
	* X3DBrowser.h:
	* X3DTimeDependentNode.o:
	* SFColorRGBA.h:
	* QuadSphereProperties.d:
	* X3DArrayField.h:
	* NodeArray.h:
	* MultiTextureTransform.o:
	* IndexedTriangleFanSet.o:
	* IndexedTriangleFanSet.d:
	* jsFields.h:
	* MultiTextureTransform.d:
	* Grouping.h:
	* Layering.h:
	* X3DConstants.cpp:
	* jsstring.h:
	* DrawingArea.h:
	* NodeTypeArray.h:
	* Lighting.h:
	* ComposedCubeMapTexture.o:
	* MotionBlur.cpp:
	* ViewVolume.h:
	* jsGlobals.h:
	* BasicNodeArray.h:
	* RouteArray.cpp:
	* ProtoArray.h:
	* CoordinateInterpolator.d:
	* ComposedCubeMapTexture.d:
	* jsBrowser.h:
	* CoordinateInterpolator.o:
	* jsfield.cpp:
	* X3DProto.cpp:
	* Rendering.h:
	* PositionInterpolator2D.d:
	* NurbsTextureCoordinate.o:
	* X3DVertexAttributeNode.d:
	* NurbsTextureCoordinate.d:
	* ArrayFields.cpp:
	* SFColorRGBA.cpp:
	* X3DBasicNode.cpp:
	* PositionInterpolator2D.o:
	* X3DScene.cpp:
	* X3DVertexAttributeNode.o:
	* Matrix3VertexAttribute.d:
	* Matrix3VertexAttribute.o:
	* X3DBrowser.cpp:
	* Text.h:
	* Texturing.h:
	* MultiTextureCoordinate.o:
	* Scripting.h:
	* MultiTextureCoordinate.d:
	* Matrix4VertexAttribute.d:
	* Matrix4VertexAttribute.o:
	* X3DKeyDeviceSensorNode.o:
	* X3DNBodyCollidableNode.d:
	* X3DAppearanceChildNode.d:
	* Followers.h:
	* X3DAppearanceChildNode.o:
	* X3DKeyDeviceSensorNode.d:
	* X3DParticleEmitterNode.o:
	* SFRotation4.cpp:
	* X3DParticleEmitterNode.d:
	* geturl.cpp:
	* X3DNBodyCollidableNode.o:
	* GarbageCollector.h:
	* Geometry2D.h:
	* ExternProto.h:
	* X3DRenderer.h:
	* Navigation.h:
	* OrientationInterpolator.o:
	* Networking.h:
	* X3DTextureTransformNode.o:
	* X3DTextureTransformNode.d:
	* DrawingArea.cpp:
	* X3DComposedGeometryNode.d:
	* X3DComposedGeometryNode.o:
	* Geometry3D.h:
	* OrientationInterpolator.d:
	* Geospatial.h:
	* jsstring.cpp:
	* IndexedTriangleStripSet.d:
	* IndexedTriangleStripSet.o:
	* Generator.h:
	* jsX3DScene.h:
	* GeoPositionInterpolator.o:
	* jsX3DField.h:
	* NodeArray.cpp:
	* GeoPositionInterpolator.d:
	* NodeTypeArray.cpp:
	* GeneratedCubeMapTexture.d:
	* GeneratedCubeMapTexture.o:
	* jsGlobals.cpp:
	* X3DGeometricPropertyNode.d:
	* jsBrowser.cpp:
	* X3DGeometricPropertyNode.o:
	* X3DNurbsControlCurveNode.o:
	* NurbsSurfaceInterpolator.o:
	* PointingDevice.h:
	* NurbsSurfaceInterpolator.d:
	* SplineScalarInterpolator.d:
	* TextureTransformMatrix3D.d:
	* CoordinateInterpolator2D.d:
	* CoordinateInterpolator2D.o:
	* SplineScalarInterpolator.o:
	* TextureTransformMatrix3D.o:
	* X3DTextureCoordinateNode.d:
	* X3DTextureCoordinateNode.o:
	* X3DNurbsControlCurveNode.d:
	* uncompress.h:
	* BasicNodeArray.cpp:
	* ViewVolume.cpp:
	* ProtoArray.cpp:
	* Shape.h:
	* Texturing3D.h:
	* Sound.h:
	* Text.cpp:
	* CADGeometry.h:
	* jsX3DObject.h:
	* Generator.cpp:
	* X3DRenderer.cpp:
	* ExternProto.cpp:
	* X3DNode.h:
	* X3DEnvironmentTextureNode.d:
	* jsX3DScene.cpp:
	* NurbsPositionInterpolator.o:
	* NurbsPositionInterpolator.d:
	* jsX3DField.cpp:
	* X3DParametricGeometryNode.o:
	* X3DParametricGeometryNode.d:
	* X3DEnvironmentTextureNode.o:
	* X3DNBodyCollisionSpaceNode.d:
	* X3DNBodyCollisionSpaceNode.o:
	* Layout.h:
	* Shape.cpp:
	* TextureCoordinateGenerator.o:
	* TextureCoordinateGenerator.d:
	* FieldDefinitionSet.h:
	* Interpolation.h:
	* uncompress.cpp:
	* ShapeContainer.h:
	* X3DEnvironmentalSensorNode.o:
	* X3DEnvironmentalSensorNode.d:
	* jsX3DObject.cpp:
	* GarbargeCollector.cpp:
	* X3DFieldDefinition.h:
	* PointingDevice.cpp:
	* SplinePositionInterpolator.d:
	* SignalPdu.h:
	* SplinePositionInterpolator.o:
	* LightContainer.h:
	* Sound.cpp:
	* X3DProgrammableShaderObject.d:
	* X3DPointingDeviceSensorNode.o:
	* X3DPointingDeviceSensorNode.d:
	* Box.h:
	* X3DParticlePhysicsModelNode.o:
	* FontStyle.h:
	* X3DNode.cpp:
	* LOD.h:
	* EventUtilities.h:
	* NurbsSet.h:
	* ProfileInfo.h:
	* X3DNurbsSurfaceGeometryNode.o:
	* WorldInfo.h:
	* X3DNurbsSurfaceGeometryNode.d:
	* Material.h:
	* X3DParticlePhysicsModelNode.d:
	* Group.h:
	* X3DProgrammableShaderObject.o:
	* Layer.h:
	* InterfaceDeclaration.h:
	* SignalPdu.cpp:
	* FieldDefinitionSet.cpp:
	* ReceiverPdu.h:
	* jsSFNode.h:
	* FieldDefinitionArray.h:
	* Color.h:
	* jsX3DArrayField.h:
	* TimeSensor.h:
	* SplinePositionInterpolator2D.d:
	* Contour2D.h:
	* ParticleSystems.h:
	* ShapeContainer.cpp:
	* ExternProtoArray.h:
	* AudioClip.h:
	* X3DFieldDefinition.cpp:
	* NurbsOrientationInterpolator.o:
	* NurbsOrientationInterpolator.d:
	* jsMFBool.h:
	* X3DProductStructureChildNode.d:
	* X3DProductStructureChildNode.o:
	* jsMFTime.h:
	* jsMFNode.h:
	* Cone.h:
	* SquadOrientationInterpolator.o:
	* SquadOrientationInterpolator.d:
	* SplinePositionInterpolator2D.o:
	* Switch.h:
	* KeyDeviceSensor.h:
	* Layout.cpp:
	* jsMFColor.h:
	* jsMFVec4f.h:
	* X3DInfoNode.h:
	* WorldInfo.cpp:
	* jsMFVec3f.h:
	* jsMFVec4d.h:
	* jsSFColor.h:
	* Layer.cpp:
	* Normal.h:
	* jsSFVec2d.h:
	* CubeMapTexturing.h:
	* jsSFImage.h:
	* RigidBodyPhysics.h:
	* FontStyle.cpp:
	* jsMFFloat.h:
	* Material.cpp:
	* jsMFImage.h:
	* Group.cpp:
	* jsMFInt32.h:
	* Appearance.h:
	* Script.h:
	* jsMFVec2f.h:
	* jsMFVec3d.h:
	* HAnimSite.h:
	* MetadataSet.h:
	* jsMFVec2d.h:
	* ImportedNodeArray.h:
	* jsSFVec4d.h:
	* jsSFVec3f.h:
	* jsSFVec3d.h:
	* ComponentInfo.h:
	* JavaScriptEngine.h:
	* Arc2D.h:
	* ProfileInfo.cpp:
	* ExportedNodeArray.h:
	* jsSFVec4f.h:
	* jsSFVec2f.h:
	* LOD.cpp:
	* NurbsSet.cpp:
	* Box.cpp:
	* NurbsCurve.h:
	* Disk2D.h:
	* Inline.h:
	* jsMFTime.cpp:
	* SupportedNodes.h:
	* ExternProtoArray.cpp:
	* Cone.cpp:
	* jsMFString.h:
	* MetadataBool.h:
	* Anchor.h:
	* AudioClip.cpp:
	* jsMFNode.cpp:
	* Switch.cpp:
	* jsMFDouble.h:
	* FieldDefinitionArray.cpp:
	* LineSet.h:
	* ReceiverPdu.cpp:
	* Sphere.h:
	* jsSFNode.cpp:
	* TimeSensor.cpp:
	* Color.cpp:
	* jsMFBool.cpp:
	* Viewport.h:
	* X3DChildNode.h:
	* Contour2D.cpp:
	* HAnimJoint.h:
	* GeoLOD.h:
	* LayerSet.h:
	* InterfaceDeclaration.cpp:
	* ComponentInfo.cpp:
	* HAnimSite.cpp:
	* FieldTypesArray.h:
	* SupportedFields.h:
	* Transform.h:
	* LayoutGroup.h:
	* LayoutLayer.h:
	* Normal.cpp:
	* TransmitterPdu.h:
	* PointSet.h:
	* NurbsCurve.cpp:
	* NurbsCurve2D.h:
	* Arc2D.cpp:
	* ScreenGroup.h:
	* SpotLight.h:
	* MetadataFloat.h:
	* ShaderPart.h:
	* Appearance.cpp:
	* X3DSoundNode.h:
	* X3DShapeNode.h:
	* X3DSensorNode.h:
	* EspduTransform.h:
	* X3DInfoNode.cpp:
	* MetadataSet.cpp:
	* Script.cpp:
	* jsSFImage.cpp:
	* jsMFVec2d.cpp:
	* JavaScriptEngine.cpp:
	* jsMFColor.cpp:
	* jsMFVec3d.cpp:
	* jsMFVec2f.cpp:
	* jsProfileInfoArray.h:
	* jsSFVec4f.cpp:
	* jsSFVec4d.cpp:
	* jsSFVec3f.cpp:
	* jsSFVec3d.cpp:
	* jsMFFloat.cpp:
	* jsMFImage.cpp:
	* jsMFInt32.cpp:
	* LightContainerArray.h:
	* jsSFVec2d.cpp:
	* jsMFVec4d.cpp:
	* jsMFVec4f.cpp:
	* jsSFVec2f.cpp:
	* X3DExecutionContext.h:
	* jsMFVec3f.cpp:
	* jsSFColor.cpp:
	* ProfileInfoArray.h:
	* Sphere.cpp:
	* Viewport.cpp:
	* jsSFMatrix3f.h:
	* jsMFRotation.h:
	* jsMFMatrix3d.h:
	* CADPart.h:
	* PointLight.h:
	* jsMFMatrix4f.h:
	* MetadataDouble.h:
	* ClipPlane.h:
	* jsSFMatrix4f.h:
	* SupportedNodes.cpp:
	* Cylinder.h:
	* jsSFMatrix4d.h:
	* LayerSet.cpp:
	* MetadataBool.cpp:
	* QuadSet.h:
	* X3DChildNode.cpp:
	* jsSFRotation.h:
	* Disk2D.cpp:
	* HAnimJoint.cpp:
	* jsMFMatrix3f.h:
	* EnvironmentalSensor.h:
	* MetadataString.h:
	* Anchor.cpp:
	* Inline.cpp:
	* LineSet.cpp:
	* Circle2D.h:
	* CADFace.h:
	* jsMFDouble.cpp:
	* GeoLOD.cpp:
	* jsMFMatrix4d.h:
	* jsVrmlMatrix.h:
	* HAnimSegment.h:
	* jsSFMatrix3d.h:
	* jsMFString.cpp:
	* ColorRGBA.h:
	* LineProperties.h:
	* FillProperties.h:
	* X3DSensorNode.cpp:
	* jsSFColorRGBA.h:
	* DISEntityManager.h:
	* X3DPropertyNode.h:
	* GeoOrigin.h:
	* X3DBindableNode.h:
	* EspduTransform.cpp:
	* ShaderPart.cpp:
	* MetadataFloat.cpp:
	* PointSet.cpp:
	* MetadataInteger.h:
	* TransmitterPdu.cpp:
	* EnvironmentalEffects.h:
	* Extrusion.h:
	* CADLayer.h:
	* Viewpoint.h:
	* PointingDeviceSensor.h:
	* X3DExecutionContext.cpp:
	* SpotLight.cpp:
	* StaticGroup.h:
	* jsMFColorRGBA.h:
	* jsComponentInfoArray.h:
	* HAnimHumanoid.h:
	* NurbsCurve2D.cpp:
	* Transform.cpp:
	* jsProfileInfoArray.cpp:
	* Collision.h:
	* X3DSoundNode.cpp:
	* jsX3DFieldDefinition.h:
	* SupportedProfiles.h:
	* SupportedFields.cpp:
	* Coordinate.h:
	* X3DShapeNode.cpp:
	* LayoutGroup.cpp:
	* ScreenGroup.cpp:
	* Billboard.h:
	* X3DLayoutNode.h:
	* FieldTypesArray.cpp:
	* LayoutLayer.cpp:
	* Polyline2D.h:
	* Cylinder.cpp:
	* jsX3DExecutionContext.h:
	* LoadSensor.h:
	* jsSFMatrix4f.cpp:
	* ColorDamper.h:
	* PointLight.cpp:
	* TriangleSet.h:
	* ColorRGBA.cpp:
	* X3DLayerNode.h:
	* ClipPlane.cpp:
	* jsSFRotation.cpp:
	* ArcClose2D.h:
	* X3DLightNode.h:
	* jsSFMatrix3d.cpp:
	* Circle2D.cpp:
	* jsVrmlMatrix.cpp:
	* jsSFMatrix4d.cpp:
	* jsSFMatrix3f.cpp:
	* PickableGroup.h:
	* ProfileInfoArray.cpp:
	* HAnimSegment.cpp:
	* jsMFMatrix4d.cpp:
	* QuadSet.cpp:
	* ProgramShader.h:
	* CADFace.cpp:
	* MetadataString.cpp:
	* ComponentInfoArray.h:
	* X3DMaterialNode.h:
	* ShaderProgram.h:
	* jsMFMatrix4f.cpp:
	* jsMFMatrix3f.cpp:
	* X3DShaderNode.h:
	* MetadataDouble.cpp:
	* jsMFRotation.cpp:
	* HAnimDisplacer.h:
	* X3DFontStyleNode.h:
	* jsMFMatrix3d.cpp:
	* CADPart.cpp:
	* Coordinate.cpp:
	* jsMFColorRGBA.cpp:
	* LineProperties.cpp:
	* FillProperties.cpp:
	* Collision.cpp:
	* SupportedProfiles.cpp:
	* TwoSidedMaterial.h:
	* PixelTexture.h:
	* Rectangle2D.h:
	* Extrusion.cpp:
	* Polypoint2D.h:
	* CADLayer.cpp:
	* ScalarChaser.h:
	* StaticGroup.cpp:
	* LinePickSensor.h:
	* Billboard.cpp:
	* MovieTexture.h:
	* ScreenFontStyle.h:
	* jsComponentInfoArray.cpp:
	* ImageTexture.h:
	* X3DLayoutNode.cpp:
	* jsX3DFieldDefinition.cpp:
	* CoordinateDouble.h:
	* MultiTexture.h:
	* DISEntityMapping.cpp:
	* BrowserOptions.h:
	* SupportedComponents.h:
	* DISEntityManager.cpp:
	* MetadataInteger.cpp:
	* PackagedShader.h:
	* ComposedShader.h:
	* jsFieldDefinitionArray.h:
	* Viewpoint.cpp:
	* GeoOrigin.cpp:
	* X3DMetadataObject.h:
	* X3DPropertyNode.cpp:
	* X3DBindableNode.cpp:
	* jsSFColorRGBA.cpp:
	* GeoMetadata.h:
	* GeoLocation.h:
	* X3DColorNode.h:
	* HAnimHumanoid.cpp:
	* ComponentInfoArray.cpp:
	* X3DUrlObject.h:
	* X3DChaserNode.h:
	* X3DDamperNode.h:
	* NurbsPatchSurface.h:
	* X3DShaderNode.cpp:
	* TriangleSet.cpp:
	* PointPickSensor.h:
	* ContourPolyline2D.h:
	* NurbsSwungSurface.h:
	* X3DLightNode.cpp:
	* jsX3DExecutionContext.cpp:
	* PickableGroup.cpp:
	* GeoViewpoint.h:
	* ArcClose2D.cpp:
	* X3DFontStyleNode.cpp:
	* NurbsSweptSurface.h:
	* LoadSensor.cpp:
	* GeoTransform.h:
	* X3DNormalNode.h:
	* Polyline2D.cpp:
	* CADAssembly.h:
	* ColorDamper.cpp:
	* X3DMaterialNode.cpp:
	* X3DLayerNode.cpp:
	* X3DScriptNode.h:
	* X3DAppearanceNode.h:
	* ProgramShader.cpp:
	* ShaderProgram.cpp:
	* HAnimDisplacer.cpp:
	* Rectangle2D.cpp:
	* BrowserOptions.cpp:
	* CoordinateDouble.cpp:
	* Polypoint2D.cpp:
	* jsFieldDefinitionArray.cpp:
	* X3DGroupingNode.h:
	* ScalarChaser.cpp:
	* Fog.h:
	* GeoCoordinate.h:
	* PackagedShader.cpp:
	* X3DColorNode.cpp:
	* IndexedLineSet.h:
	* TwoSidedMaterial.cpp:
	* TriangleFanSet.h:
	* SupportedComponents.cpp:
	* ElevationGrid.h:
	* GeoMetadata.cpp:
	* X3DMetadataObject.cpp:
	* Contact.h:
	* DISEntityTypeMapping.h:
	* ComposedShader.cpp:
	* GeoLocation.cpp:
	* TriangleSet2D.h:
	* PixelTexture.cpp:
	* MultiTexture.cpp:
	* PositionChaser.h:
	* PositionDamper.h:
	* X3DTextureNode.h:
	* VolumePickSensor.h:
	* LinePickSensor.cpp:
	* ImageTexture.cpp:
	* MovieTexture.cpp:
	* X3DSoundSourceNode.h:
	* X3DViewportNode.h:
	* ScreenFontStyle.cpp:
	* X3DTimeDependentNode.h:
	* NurbsPatchSurface.cpp:
	* OrthoViewpoint.h:
	* NurbsTrimmedSurface.h:
	* NurbsSwungSurface.cpp:
	* NurbsSweptSurface.cpp:
	* NavigationInfo.h:
	* X3DAppearanceNode.cpp:
	* GeoTransform.cpp:
	* IndexedFaceSet.h:
	* DirectionalLight.h:
	* X3DPickableObject.h:
	* GeoViewpoint.cpp:
	* GeoTouchSensor.h:
	* X3DScriptNode.cpp:
	* X3DPrototypeInstance.h:
	* KeySensor.h:
	* X3DGeometryNode.h:
	* X3DNormalNode.cpp:
	* X3DPickSensorNode.h:
	* BrowserProperties.h:
	* X3DUrlObject.cpp:
	* CADAssembly.cpp:
	* CosmoWorlds.wrl:
	* ViewpointGroup.h:
	* X3DBoundedObject.h:
	* ContourPolyline2D.cpp:
	* X3DChaserNode.cpp:
	* PointPickSensor.cpp:
	* X3DFollowerNode.h:
	* X3DDamperNode.cpp:
	* GeoCoordinate.cpp:
	* X3DViewportNode.cpp:
	* X3DGroupingNode.cpp:
	* X3DTextureNode.cpp:
	* IndexedLineSet.cpp:
	* TextureTransform.h:
	* X3DTexture2DNode.h:
	* TimeTrigger.h:
	* PixelTexture3D.h:
	* PositionChaser.cpp:
	* ImageTexture3D.h:
	* CoordinateDamper.h:
	* IndexedQuadSet.h:
	* Contact.cpp:
	* X3DSoundSourceNode.cpp:
	* RigidBody.h:
	* DISEntityTypeMapping.cpp:
	* TriangleStripSet.h:
	* TriangleFanSet.cpp:
	* BallJoint.h:
	* Fog.cpp:
	* VolumePickSensor.cpp:
	* PositionDamper.cpp:
	* PositionChaser2D.h:
	* PositionDamper2D.h:
	* TexCoordDamper2D.h:
	* ElevationGrid.cpp:
	* TriangleSet2D.cpp:
	* TextureCoordinate.h:
	* NavigationInfo.cpp:
	* TextureProperties.h:
	* NurbsTrimmedSurface.cpp:
	* IndexedFaceSet.cpp:
	* X3DViewpointNode.h:
	* OrthoViewpoint.cpp:
	* X3DCoordinateNode.h:
	* X3DGeometryNode.cpp:
	* EaseInEaseOut.h:
	* MotorJoint.h:
	* ViewpointGroup.cpp:
	* KeySensor.cpp:
	* GeoElevationGrid.h:
	* ConeEmitter.h:
	* PrimitivePickSensor.h:
	* OrientationDamper.h:
	* RenderingProperties.h:
	* GeoTouchSensor.cpp:
	* X3DPickSensorNode.cpp:
	* X3DPickableObject.cpp:
	* DirectionalLight.cpp:
	* OrientationChaser.h:
	* X3DBoundedObject.cpp:
	* X3DTimeDependentNode.cpp:
	* X3DFollowerNode.cpp:
	* BrowserProperties.cpp:
	* X3DPrototypeInstance.cpp:
	* X3DAppearanceChildNode.h:
	* kopierter Text.txt:
	* ImageTexture3D.cpp:
	* PixelTexture3D.cpp:
	* QuadSphereProperties.h:
	* X3DTexture3DNode.h:
	* IndexedQuadSet.cpp:
	* TextureTransform.cpp:
	* X3DTexture2DNode.cpp:
	* FloatVertexAttribute.h:
	* BooleanToggle.h:
	* IndexedTriangleSet.h:
	* BooleanFilter.h:
	* PositionDamper2D.cpp:
	* CoordinateDamper.cpp:
	* TimeTrigger.cpp:
	* PositionChaser2D.cpp:
	* TriangleStripSet.cpp:
	* RigidBody.cpp:
	* SliderJoint.h:
	* NurbsTextureCoordinate.h:
	* PointEmitter.h:
	* TexCoordDamper2D.cpp:
	* StringSensor.h:
	* BallJoint.cpp:
	* OrientationDamper.cpp:
	* RenderingProperties.cpp:
	* OrientationChaser.cpp:
	* LocalFog.h:
	* GeoElevationGrid.cpp:
	* GeoProximitySensor.h:
	* BooleanTrigger.h:
	* X3DTriggerNode.h:
	* X3DSpherePropertyNode.h:
	* IntegerTrigger.h:
	* ComposedTexture3D.h:
	* X3DCoordinateNode.cpp:
	* ConeEmitter.cpp:
	* X3DViewpointNode.cpp:
	* MotorJoint.cpp:
	* TextureCoordinate.cpp:
	* TextureProperties.cpp:
	* VolumeEmitter.h:
	* PrimitivePickSensor.cpp:
	* EaseInEaseOut.cpp:
	* SliderJoint.cpp:
	* Matrix4VertexAttribute.h:
	* NurbsSurfaceInterpolator.h:
	* FloatVertexAttribute.cpp:
	* Matrix3VertexAttribute.h:
	* StringSensor.cpp:
	* IndexedTriangleSet.cpp:
	* SurfaceEmitter.h:
	* ParticleSystem.h:
	* PointEmitter.cpp:
	* BooleanFilter.cpp:
	* BooleanToggle.cpp:
	* NurbsTextureCoordinate.cpp:
	* X3DNurbsControlCurveNode.h:
	* QuadSphereProperties.cpp:
	* X3DAppearanceChildNode.cpp:
	* X3DTexture3DNode.cpp:
	* TextureTransform3D.h:
	* X3DVertexAttributeNode.h:
	* X3DParametricGeometryNode.h:
	* ComposedTexture3D.cpp:
	* ColorInterpolator.h:
	* BooleanSequencer.h:
	* TextureCoordinate4D.h:
	* TextureCoordinate3D.h:
	* LocalFog.cpp:
	* PolylineEmitter.h:
	* X3DNetworkSensorNode.h:
	* Background.h:
	* VolumeEmitter.cpp:
	* X3DSequencerNode.h:
	* IndexedTriangleFanSet.h:
	* CollisionSpace.h:
	* UniversalJoint.h:
	* IntegerTrigger.cpp:
	* IntegerSequencer.h:
	* NurbsPositionInterpolator.h:
	* MultiTextureTransform.h:
	* GeoProximitySensor.cpp:
	* BooleanTrigger.cpp:
	* X3DTriggerNode.cpp:
	* SurfaceEmitter.cpp:
	* NormalInterpolator.h:
	* TextureTransform3D.cpp:
	* WindPhysicsModel.h:
	* TouchSensor.h:
	* PlaneSensor.h:
	* ScalarInterpolator.h:
	* CollidableShape.h:
	* MultiTextureCoordinate.h:
	* NurbsSurfaceInterpolator.cpp:
	* X3DNurbsControlCurveNode.cpp:
	* CollisionSensor.h:
	* ExplosionEmitter.h:
	* X3DVertexAttributeNode.cpp:
	* Matrix4VertexAttribute.cpp:
	* Matrix3VertexAttribute.cpp:
	* ParticleSystem.cpp:
	* MultiTextureTransform.cpp:
	* IntegerSequencer.cpp:
	* IndexedTriangleFanSet.cpp:
	* UniversalJoint.cpp:
	* X3DSequencerNode.cpp:
	* X3DComposedGeometryNode.h:
	* TextureCoordinate3D.cpp:
	* X3DFogObject.h:
	* TextureCoordinate4D.cpp:
	* IndexedTriangleStripSet.h:
	* X3DTextureTransformNode.h:
	* CollisionSpace.cpp:
	* BooleanSequencer.cpp:
	* Background.cpp:
	* CollidableOffset.h:
	* NurbsPositionInterpolator.cpp:
	* X3DInterpolatorNode.h:
	* SphereSensor.h:
	* X3DNurbsSurfaceGeometryNode.h:
	* PolylineEmitter.cpp:
	* X3DNetworkSensorNode.cpp:
	* X3DParametricGeometryNode.cpp:
	* ColorInterpolator.cpp:
	* CollisionSensor.cpp:
	* ScalarInterpolator.cpp:
	* NormalInterpolator.cpp:
	* WindPhysicsModel.cpp:
	* CollidableShape.cpp:
	* ExplosionEmitter.cpp:
	* FogCoordinate.h:
	* X3DGeometricPropertyNode.h:
	* MultiTextureCoordinate.cpp:
	* PlaneSensor.cpp:
	* X3DTextureCoordinateNode.h:
	* GeoPositionInterpolator.h:
	* NurbsOrientationInterpolator.h:
	* PositionInterpolator.h:
	* TouchSensor.cpp:
	* X3DRigidJointNode.h:
	* X3DComposedGeometryNode.cpp:
	* BoundedPhysicsModel.h:
	* X3DInterpolatorNode.cpp:
	* X3DNurbsSurfaceGeometryNode.cpp:
	* X3DTextureTransformNode.cpp:
	* CollidableOffset.cpp:
	* X3DProgrammableShaderObject.h:
	* X3DFogObject.cpp:
	* CylinderSensor.h:
	* ProximitySensor.h:
	* GravityPhysicsModel.h:
	* SphereSensor.cpp:
	* IndexedTriangleStripSet.cpp:
	* TransformSensor.h:
	* TextureTransformMatrix3D.h:
	* CoordinateInterpolator.h:
	* ImageCubeMapTexture.h:
	* X3DTextureCoordinateNode.cpp:
	* PositionInterpolator2D.h:
	* GeoPositionInterpolator.cpp:
	* X3DRigidJointNode.cpp:
	* NurbsOrientationInterpolator.cpp:
	* RigidBodyCollection.h:
	* TextureCoordinateGenerator.h:
	* CollisionCollection.h:
	* X3DGeometricPropertyNode.cpp:
	* FogCoordinate.cpp:
	* PositionInterpolator.cpp:
	* VisibilitySensor.h:
	* ProximitySensor.cpp:
	* DoubleAxisHingeJoint.h:
	* CylinderSensor.cpp:
	* GravityPhysicsModel.cpp:
	* OrientationInterpolator.h:
	* BoundedPhysicsModel.cpp:
	* SingleAxisHingeJoint.h:
	* TransformSensor.cpp:
	* X3DProgrammableShaderObject.cpp:
	* CoordinateInterpolator2D.h:
	* BindableNodeStack.h:
	* X3DBackgroundNode.h:
	* X3DParticleEmitterNode.h:
	* TextureBackground.h:
	* CoordinateInterpolator.cpp:
	* TextureCoordinateGenerator.cpp:
	* CollisionCollection.cpp:
	* RigidBodyCollection.cpp:
	* ImageCubeMapTexture.cpp:
	* SplineScalarInterpolator.h:
	* X3DDragSensorNode.h:
	* X3DKeyDeviceSensorNode.h:
	* PositionInterpolator2D.cpp:
	* TextureTransformMatrix3D.cpp:
	* VisibilitySensor.cpp:
	* DoubleAxisHingeJoint.cpp:
	* ComposedCubeMapTexture.h:
	* OrientationInterpolator.cpp:
	* X3DNBodyCollidableNode.h:
	* X3DTouchSensorNode.h:
	* SingleAxisHingeJoint.cpp:
	* SplinePositionInterpolator.h:
	* X3DProductStructureChildNode.h:
	* CoordinateInterpolator2D.cpp:
	* TextureBackground.cpp:
	* GeneratedCubeMapTexture.h:
	* X3DKeyDeviceSensorNode.cpp:
	* X3DDragSensorNode.cpp:
	* X3DParticleEmitterNode.cpp:
	* X3DBackgroundNode.cpp:
	* SplineScalarInterpolator.cpp:
	* X3DNBodyCollidableNode.cpp:
	* ComposedCubeMapTexture.cpp:
	* X3DTouchSensorNode.cpp:
	* X3DEnvironmentTextureNode.h:
	* SplinePositionInterpolator2D.h:
	* X3DProductStructureChildNode.cpp:
	* SplinePositionInterpolator.cpp:
	* GeneratedCubeMapTexture.cpp:
	* SquadOrientationInterpolator.h:
	* X3DNBodyCollisionSpaceNode.h:
	* X3DParticlePhysicsModelNode.h:
	* SquadOrientationInterpolator.cpp:
	* X3DEnvironmentTextureNode.cpp:
	* SplinePositionInterpolator2D.cpp:
	* X3DNBodyCollisionSpaceNode.cpp:
	* X3DParticlePhysicsModelNode.cpp:
	* X3DEnvironmentalSensorNode.h:
	* X3DPointingDeviceSensorNode.h:
	* X3DEnvironmentalSensorNode.cpp:
	* X3DPointingDeviceSensorNode.cpp: 

2012-10-22  Holger Seelig  <holger.seelig@yahoo.de>

	* info.h:
	* ChangeLog:
	* X3D.h:
	* Box.o:
	* Box.d:
	* LOD.o:
	* Fog.d:
	* Fog.o:
	* LOD.d:
	* X3D.d:
	* X3D.o:
	* X3D.cpp:
	* Cone.d:
	* Cone.o:
	* Type.o:
	* Type.d:
	* Text.o:
	* Text.d:
	* Group.o:
	* Image.d:
	* Group.d:
	* Proto.d:
	* Route.d:
	* Scene.d:
	* Scene.o:
	* Layer.o:
	* RegEx.d:
	* RegEx.o:
	* Layer.d:
	* Image.o:
	* Proto.o:
	* Route.o:
	* Error.o:
	* Arc2D.o:
	* Arc2D.d:
	* Sound.o:
	* World.d:
	* Color.o:
	* Color.d:
	* World.o:
	* Error.d:
	* Shape.d:
	* Shape.o:
	* Sound.d:
	* Router.d:
	* Parser.d:
	* Router.o:
	* SFNode.o:
	* SFNode.d:
	* Script.o:
	* Script.d:
	* Parser.o:
	* Viewer.d:
	* Viewer.o:
	* SFVec3.d:
	* SFVec2.o:
	* Sphere.o:
	* SFVec4.d:
	* SFVec3.o:
	* Sphere.d:
	* SFTime.o:
	* SFTime.d:
	* SFVec4.o:
	* Switch.d:
	* Switch.o:
	* SFVec2.d:
	* Normal.o:
	* Inline.o:
	* Inline.d:
	* Layout.d:
	* MFNode.d:
	* Layout.o:
	* GeoLOD.o:
	* Anchor.d:
	* Anchor.o:
	* Disk2D.d:
	* GeoLOD.d:
	* Disk2D.o:
	* Normal.d:
	* MFNode.o:
	* Contact.o:
	* CADPart.o:
	* Contact.d:
	* X3DBase.o:
	* X3DBase.d:
	* CADPart.d:
	* X3DType.d:
	* X3DType.o:
	* CADFace.o:
	* Browser.o:
	* libtitania-x3d.pidb:
	* CADFace.d:
	* MFInt32.d:
	* X3DNode.o:
	* X3DNode.d:
	* QuadSet.o:
	* QuadSet.d:
	* MFInt32.o:
	* Browser.d:
	* SFImage.d:
	* SFImage.o:
	* LineSet.d:
	* SFColor.o:
	* LineSet.o:
	* SFColor.d:
	* NurbsSet.d:
	* Circle2D.o:
	* Circle2D.d:
	* X3DInput.o:
	* X3DInput.d:
	* CADLayer.o:
	* CADLayer.d:
	* Viewport.o:
	* Viewport.d:
	* Material.d:
	* SFString.o:
	* LayerSet.d:
	* LayerSet.o:
	* SFString.d:
	* RouteSet.d:
	* LocalFog.o:
	* LocalFog.d:
	* RouteSet.o:
	* PointSet.o:
	* Cylinder.d:
	* Cylinder.o:
	* NurbsSet.o:
	* findNode:
	* Material.o:
	* HitArray.o:
	* PointSet.d:
	* Fields.h:
	* HitArray.d:
	* strfsize.o:
	* X3DScene.d:
	* X3DProto.o:
	* strfsize.d:
	* libtitania-x3d.md.pc:
	* libtitania-x3d.cproj:
	* X3DProto.d:
	* X3DScene.o:
	* ClipPlane.d:
	* WorldInfo.o:
	* Extrusion.o:
	* ClipPlane.o:
	* HAnimSite.d:
	* Billboard.o:
	* GeoOrigin.d:
	* GeoOrigin.o:
	* Extrusion.d:
	* KeySensor.d:
	* SFMatrix3.d:
	* RigidBody.o:
	* KeySensor.o:
	* WorldInfo.d:
	* SFMatrix4.o:
	* SFMatrix3.o:
	* SFMatrix4.d:
	* Billboard.d:
	* FontStyle.o:
	* BallJoint.o:
	* FontStyle.d:
	* BallJoint.d:
	* SpotLight.o:
	* Contour2D.o:
	* Contour2D.d:
	* SpotLight.d:
	* AudioClip.o:
	* SignalPdu.d:
	* Generator.o:
	* HAnimSite.o:
	* AudioClip.d:
	* X3DScalar.o:
	* X3DScalar.d:
	* SignalPdu.o:
	* Generator.d:
	* Collision.d:
	* X3DOutput.o:
	* X3DOutput.d:
	* ColorRGBA.d:
	* Viewpoint.d:
	* X3DParser.d:
	* X3DObject.o:
	* NodeArray.d:
	* Transform.o:
	* Transform.d:
	* X3DObject.d:
	* NodeArray.o:
	* X3DParser.o:
	* Viewpoint.o:
	* ColorRGBA.o:
	* ObjectSet.o:
	* Collision.o:
	* ObjectSet.d:
	* RigidBody.d:
	* LoadSensor.o:
	* X3DBrowser.o:
	* Background.d:
	* MotionBlur.o:
	* HAnimJoint.d:
	* Polyline2D.d:
	* Polyline2D.o:
	* X3DBrowser.d:
	* Coordinate.d:
	* PointLight.d:
	* Coordinate.o:
	* Statistics.d:
	* Statistics.o:
	* PointLight.o:
	* Background.o:
	* MotorJoint.d:
	* MotorJoint.o:
	* HAnimJoint.o:
	* ViewVolume.o:
	* Appearance.o:
	* ViewVolume.d:
	* Appearance.d:
	* ProtoArray.o:
	* NurbsCurve.o:
	* MotionBlur.d:
	* NurbsCurve.d:
	* TimeSensor.d:
	* uncompress.o:
	* TimeSensor.o:
	* ArcClose2D.d:
	* X3DContext.o:
	* ShaderPart.o:
	* X3DContext.d:
	* LoadSensor.d:
	* uncompress.d:
	* ShaderPart.d:
	* RouteArray.o:
	* ArcClose2D.o:
	* RouteArray.d:
	* ProtoArray.d:
	* TriangleSet.o:
	* TimeTrigger.d:
	* GeoMetadata.d:
	* GeoLocation.o:
	* TriangleSet.d:
	* GeoMetadata.o:
	* TouchSensor.o:
	* TouchSensor.d:
	* TimeTrigger.o:
	* GeoLocation.d:
	* X3DRenderer.d:
	* X3DRenderer.o:
	* LayoutGroup.d:
	* LayoutGroup.o:
	* LayoutLayer.d:
	* ReceiverPdu.d:
	* Rectangle2D.o:
	* Rectangle2D.d:
	* ReceiverPdu.o:
	* LayoutLayer.o:
	* PlaneSensor.o:
	* PlaneSensor.d:
	* MetadataSet.d:
	* Polypoint2D.d:
	* ProfileInfo.o:
	* ProfileInfo.d:
	* Polypoint2D.o:
	* SliderJoint.o:
	* SliderJoint.d:
	* ScreenGroup.o:
	* BaseNodeSet.d:
	* StaticGroup.o:
	* StaticGroup.d:
	* BaseNodeSet.o:
	* ScreenGroup.d:
	* SFColorRGBA.o:
	* SFColorRGBA.d:
	* MetadataSet.o:
	* SFRotation4.d:
	* ArrayFields.o:
	* ArrayFields.d:
	* SFRotation4.o:
	* DrawingArea.o:
	* X3DInfoNode.o:
	* X3DInfoNode.d:
	* DrawingArea.d:
	* ConeEmitter.o:
	* ColorDamper.o:
	* ColorDamper.d:
	* CADAssembly.d:
	* CADAssembly.o:
	* Type.h:
	* X3DBaseNode.o:
	* ExternProto.d:
	* ExternProto.o:
	* X3DBaseNode.d:
	* ConeEmitter.d:
	* NurbsCurve2D.o:
	* X3DSoundNode.o:
	* NurbsCurve2D.d:
	* X3DSoundNode.d:
	* X3DShapeNode.o:
	* StringSensor.o:
	* StringSensor.d:
	* X3DFogObject.d:
	* HAnimSegment.o:
	* X3DUrlObject.o:
	* X3DUrlObject.d:
	* HAnimSegment.d:
	* MultiTexture.d:
	* X3DFogObject.o:
	* Time.h:
	* Error.h:
	* MultiTexture.o:
	* X3DChildNode.d:
	* X3DChildNode.o:
	* ImageTexture.d:
	* ImageTexture.o:
	* X3DConstants.d:
	* X3DConstants.o:
	* X3DColorNode.d:
	* X3DColorNode.o:
	* X3DBasicNode.d:
	* X3DBasicNode.o:
	* MovieTexture.d:
	* X3DShapeNode.d:
	* SphereSensor.o:
	* SphereSensor.d:
	* ScalarChaser.d:
	* ScalarChaser.o:
	* GeoTransform.d:
	* MovieTexture.o:
	* GeoTransform.o:
	* GeoViewpoint.o:
	* GeoViewpoint.d:
	* Components.h:
	* MetadataBool.d:
	* PixelTexture.d:
	* PixelTexture.o:
	* MetadataBool.o:
	* PointEmitter.o:
	* X3DLayerNode.d:
	* X3DLayerNode.o:
	* X3DLightNode.d:
	* X3DLightNode.o:
	* PointEmitter.d:
	* JavaScript.h:
	* X3DDamperNode.o:
	* X3DNormalNode.d:
	* ShaderProgram.o:
	* X3DNormalNode.o:
	* FogCoordinate.d:
	* ShaderProgram.d:
	* X3DScriptNode.d:
	* ComponentInfo.d:
	* NodeTypeArray.o:
	* ComponentInfo.o:
	* X3DScriptNode.o:
	* X3DDamperNode.d:
	* ElevationGrid.d:
	* ElevationGrid.o:
	* ProgramShader.d:
	* ProgramShader.o:
	* X3DLayoutNode.o:
	* Hit.h:
	* PickableGroup.d:
	* X3DLayoutNode.d:
	* Image.h:
	* EaseInEaseOut.o:
	* X3DSensorNode.d:
	* X3DSensorNode.o:
	* NodeTypeArray.d:
	* MetadataFloat.o:
	* PickableGroup.o:
	* X3DShaderNode.d:
	* X3DShaderNode.o:
	* EaseInEaseOut.d:
	* MetadataFloat.d:
	* VolumeEmitter.d:
	* VolumeEmitter.o:
	* TriangleSet2D.d:
	* X3DChaserNode.d:
	* TriangleSet2D.o:
	* GeoCoordinate.d:
	* HAnimHumanoid.o:
	* BooleanFilter.d:
	* HAnimHumanoid.d:
	* GeoCoordinate.o:
	* BooleanFilter.o:
	* Array.h:
	* FogCoordinate.o:
	* BooleanToggle.o:
	* BooleanToggle.d:
	* Type.cpp:
	* X3DChaserNode.o:
	* HAnimDisplacer.o:
	* PixelTexture3D.d:
	* ComposedShader.o:
	* NavigationInfo.o:
	* HAnimDisplacer.d:
	* ParticleSystem.o:
	* PixelTexture3D.o:
	* UniversalJoint.d:
	* RequesterStack.o:
	* RegEx.h:
	* EspduTransform.o:
	* JavaScript.cpp:
	* TransmitterPdu.o:
	* TransmitterPdu.d:
	* PointingDevice.o:
	* EspduTransform.d:
	* RequesterStack.d:
	* ViewpointGroup.d:
	* X3DTriggerNode.o:
	* BooleanTrigger.o:
	* X3DTriggerNode.d:
	* ViewpointGroup.o:
	* PositionChaser.d:
	* X3DType.h:
	* PositionChaser.o:
	* PositionDamper.o:
	* PositionDamper.d:
	* LinePickSensor.o:
	* LineProperties.d:
	* GeoTouchSensor.d:
	* LinePickSensor.d:
	* GeoTouchSensor.o:
	* CollisionSpace.d:
	* CollisionSpace.o:
	* PointingDevice.d:
	* UniversalJoint.o:
	* LineProperties.o:
	* BasicNodeArray.o:
	* ComposedShader.d:
	* BasicNodeArray.d:
	* IndexedLineSet.d:
	* IndexedLineSet.o:
	* IndexedQuadSet.d:
	* IndexedQuadSet.o:
	* MetadataDouble.d:
	* TriangleFanSet.o:
	* BrowserOptions.o:
	* MetadataDouble.o:
	* ImageTexture3D.d:
	* FillProperties.o:
	* ImageTexture3D.o:
	* ShapeContainer.d:
	* ShapeContainer.o:
	* CylinderSensor.d:
	* CylinderSensor.o:
	* Error.cpp:
	* IndexedFaceSet.o:
	* FillProperties.d:
	* IndexedFaceSet.d:
	* TriangleFanSet.d:
	* IntegerTrigger.d:
	* X3DTextureNode.o:
	* PackagedShader.d:
	* SurfaceEmitter.d:
	* MetadataString.d:
	* X3DTextureNode.d:
	* PackagedShader.o:
	* IntegerTrigger.o:
	* BooleanTrigger.d:
	* MetadataString.o:
	* X3DBase.h:
	* SupportedNodes.d:
	* OrthoViewpoint.o:
	* BrowserOptions.d:
	* OrthoViewpoint.d:
	* NavigationInfo.d:
	* SupportedNodes.o:
	* ParticleSystem.d:
	* SurfaceEmitter.o:
	* MetadataInteger.o:
	* Numbers.h:
	* TransformSensor.d:
	* TransformSensor.o:
	* MFNode.h:
	* X3DPropertyNode.o:
	* PointPickSensor.d:
	* PointPickSensor.o:
	* MetadataInteger.d:
	* SFNode.h:
	* X3DFollowerNode.d:
	* X3DFollowerNode.o:
	* X3DInput.h:
	* SupportedFields.o:
	* X3DGeometryNode.d:
	* X3DGroupingNode.o:
	* CollidableShape.d:
	* X3DGeometryNode.o:
	* X3DGroupingNode.d:
	* ScreenFontStyle.d:
	* FieldTypesArray.o:
	* Route.h:
	* ScreenFontStyle.o:
	* X3DBindableNode.o:
	* Image.cpp:
	* SupportedFields.d:
	* X3DBindableNode.d:
	* FieldTypesArray.d:
	* libtitania-x3d.so:
	* X3DViewportNode.o:
	* CollisionSensor.o:
	* SFVec2.h:
	* X3DViewportNode.d:
	* PolylineEmitter.o:
	* PolylineEmitter.d:
	* SFTime.h:
	* X3DPropertyNode.d:
	* SFVec4.h:
	* SFVec3.h:
	* CollidableShape.o:
	* Parser.h:
	* X3DMaterialNode.d:
	* X3DMaterialNode.o:
	* CollisionSensor.d:
	* ProximitySensor.o:
	* ProximitySensor.d:
	* CoordinateDouble.o:
	* ExternProtoArray.o:
	* ExternProtoArray.d:
	* CoordinateDamper.d:
	* CoordinateDamper.o:
	* CoordinateDouble.d:
	* DirectionalLight.d:
	* DISEntityManager.o:
	* DISEntityManager.d:
	* ExplosionEmitter.o:
	* ExplosionEmitter.d:
	* DirectionalLight.o:
	* GeoElevationGrid.d:
	* IntegerSequencer.o:
	* IntegerSequencer.d:
	* X3DField.h:
	* RegEx.cpp:
	* JavaScriptEngine.o:
	* JavaScriptEngine.d:
	* MFInt32.h:
	* SFColor.h:
	* SFImage.h:
	* X3DOutput.h:
	* X3DType.cpp:
	* GeoElevationGrid.o:
	* TextureTransform.d:
	* TextureTransform.o:
	* X3DBase.cpp:
	* BooleanSequencer.d:
	* Viewer.h:
	* ProfileInfoArray.d:
	* TexCoordDamper2D.d:
	* X3DObject.h:
	* TexCoordDamper2D.o:
	* ProfileInfoArray.o:
	* DIS.h:
	* BooleanSequencer.o:
	* PositionDamper2D.o:
	* VolumePickSensor.d:
	* VisibilitySensor.o:
	* VisibilitySensor.d:
	* PositionDamper2D.d:
	* PositionChaser2D.d:
	* WindPhysicsModel.o:
	* WindPhysicsModel.d:
	* PositionChaser2D.o:
	* VolumePickSensor.o:
	* X3DBoundedObject.d:
	* X3DTexture2DNode.o:
	* X3DTexture2DNode.d:
	* X3DTexture3DNode.d:
	* CollidableOffset.d:
	* CollidableOffset.o:
	* TriangleStripSet.o:
	* X3DViewpointNode.d:
	* X3DViewpointNode.o:
	* TriangleStripSet.d:
	* X3DSequencerNode.d:
	* X3DSequencerNode.o:
	* X3DFontStyleNode.o:
	* Requester.h:
	* TwoSidedMaterial.d:
	* X3DBoundedObject.o:
	* TwoSidedMaterial.o:
	* Geometry.h:
	* ObjectSet.h:
	* X3DFontStyleNode.d:
	* Router.h:
	* X3DTexture3DNode.o:
	* Scene.h:
	* World.h:
	* TextureProperties.o:
	* SupportedProfiles.d:
	* SupportedProfiles.o:
	* Time.h:
	* X3DInput.cpp:
	* X3DRigidJointNode.o:
	* X3DRigidJointNode.d:
	* TextureBackground.d:
	* ComposedTexture3D.d:
	* ComposedTexture3D.o:
	* TextureProperties.d:
	* TextureBackground.o:
	* TextureCoordinate.d:
	* TextureCoordinate.o:
	* X3DCoordinateNode.o:
	* X3DDragSensorNode.d:
	* X3DDragSensorNode.o:
	* X3DCoordinateNode.d:
	* X3DPickableObject.o:
	* GarbargeCollector.o:
	* GarbargeCollector.d:
	* ColorInterpolator.o:
	* X3DPickSensorNode.d:
	* X3DPickSensorNode.o:
	* ColorInterpolator.d:
	* X3DMetadataObject.d:
	* X3DMetadataObject.o:
	* X3DPickableObject.d:
	* BrowserProperties.o:
	* SFVec2.cpp:
	* SFVec3.cpp:
	* SFVec4.cpp:
	* SFTime.cpp:
	* MFNode.cpp:
	* SFNode.cpp:
	* SFString.h:
	* X3DBackgroundNode.d:
	* BrowserProperties.d:
	* X3DBackgroundNode.o:
	* X3DAppearanceNode.o:
	* ContourPolyline2D.d:
	* ContourPolyline2D.o:
	* X3DAppearanceNode.d:
	* OrientationChaser.d:
	* OrientationChaser.o:
	* OrientationDamper.d:
	* NurbsSwungSurface.o:
	* NurbsSweptSurface.d:
	* NurbsSweptSurface.o:
	* NurbsSwungSurface.d:
	* Parser.cpp:
	* Text.h:
	* Core.h:
	* Browser.h:
	* OrientationDamper.o:
	* Route.cpp:
	* Proto.h:
	* NurbsPatchSurface.o:
	* NurbsPatchSurface.d:
	* X3DTouchSensorNode.d:
	* ComponentInfoArray.d:
	* SFColor.cpp:
	* SFImage.cpp:
	* BaseNodeSet.h:
	* SFMatrix4.h:
	* SFMatrix3.h:
	* NormalInterpolator.d:
	* TextureTransform3D.o:
	* TextureTransform3D.d:
	* NormalInterpolator.o:
	* X3DParser.h:
	* HitArray.h:
	* Sound.h:
	* MFInt32.cpp:
	* X3DTouchSensorNode.o:
	* RequesterId.h:
	* FieldDefinitionSet.d:
	* X3DFieldDefinition.d:
	* ObjectSet.cpp:
	* X3DRoute.h:
	* Router.cpp:
	* FieldDefinitionSet.o:
	* X3DFieldDefinition.o:
	* X3DScalar.h:
	* RouteSet.h:
	* Viewer.cpp:
	* Shape.h:
	* Matrix.h:
	* X3DBaseNode.h:
	* ComponentInfoArray.o:
	* X3DOutput.cpp:
	* NURBS.h:
	* ScalarInterpolator.d:
	* X3DObject.cpp:
	* X3DSoundSourceNode.d:
	* X3DSoundSourceNode.o:
	* X3DContext.h:
	* IndexedTriangleSet.d:
	* ScalarInterpolator.o:
	* IndexedTriangleSet.o:
	* GeoProximitySensor.d:
	* GeoProximitySensor.o:
	* ImageCubeMapTexture.d:
	* Proto.cpp:
	* ImageCubeMapTexture.o:
	* BoundedPhysicsModel.d:
	* GravityPhysicsModel.d:
	* X3DConstants.h:
	* GravityPhysicsModel.o:
	* X3DExecutionContext.o:
	* PrimitivePickSensor.o:
	* SFString.cpp:
	* BoundedPhysicsModel.o:
	* Browser.cpp:
	* X3DExecutionContext.d:
	* PrimitivePickSensor.d:
	* H-Anim.h:
	* NurbsTrimmedSurface.o:
	* World.cpp:
	* TextureCoordinate4D.o:
	* RigidBodyCollection.o:
	* NurbsTrimmedSurface.d:
	* Layout.h:
	* RenderingProperties.d:
	* SupportedComponents.o:
	* SupportedComponents.d:
	* Scene.cpp:
	* X3DInterpolatorNode.o:
	* CollisionCollection.d:
	* X3DInterpolatorNode.d:
	* RenderingProperties.o:
	* TextureCoordinate3D.d:
	* TextureCoordinate3D.o:
	* CollisionCollection.o:
	* TextureCoordinate4D.d:
	* RigidBodyCollection.d:
	* InterfaceDeclaration.d:
	* FloatVertexAttribute.o:
	* FloatVertexAttribute.d:
	* DoubleAxisHingeJoint.o:
	* RouteArray.h:
	* X3DNetworkSensorNode.o:
	* DoubleAxisHingeJoint.d:
	* DISEntityTypeMapping.d:
	* DISEntityTypeMapping.o:
	* BaseNodeSet.cpp:
	* X3DNetworkSensorNode.d:
	* FieldDefinitionArray.o:
	* SingleAxisHingeJoint.d:
	* SingleAxisHingeJoint.o:
	* FieldDefinitionArray.d:
	* RouteSet.cpp:
	* jsfield.h:
	* Shaders.h:
	* SFMatrix3.cpp:
	* X3DContext.cpp:
	* X3DScene.h:
	* X3DTimeDependentNode.d:
	* X3DScalar.cpp:
	* X3DBasicNode.h:
	* X3DPrototypeInstance.o:
	* SFRotation4.h:
	* X3DParser.cpp:
	* SFMatrix4.cpp:
	* PositionInterpolator.d:
	* PositionInterpolator.o:
	* X3DPrototypeInstance.d:
	* InterfaceDeclaration.o:
	* HitArray.cpp:
	* ArrayFields.h:
	* QuadSphereProperties.o:
	* Picking.h:
	* MotionBlur.h:
	* X3DBaseNode.cpp:
	* geturl.h:
	* X3DProto.h:
	* X3DBrowser.h:
	* X3DTimeDependentNode.o:
	* SFColorRGBA.h:
	* QuadSphereProperties.d:
	* X3DArrayField.h:
	* NodeArray.h:
	* MultiTextureTransform.o:
	* IndexedTriangleFanSet.o:
	* IndexedTriangleFanSet.d:
	* jsFields.h:
	* MultiTextureTransform.d:
	* Grouping.h:
	* Layering.h:
	* X3DConstants.cpp:
	* jsstring.h:
	* DrawingArea.h:
	* NodeTypeArray.h:
	* Lighting.h:
	* ComposedCubeMapTexture.o:
	* MotionBlur.cpp:
	* ViewVolume.h:
	* jsGlobals.h:
	* BasicNodeArray.h:
	* RouteArray.cpp:
	* ProtoArray.h:
	* CoordinateInterpolator.d:
	* ComposedCubeMapTexture.d:
	* jsBrowser.h:
	* CoordinateInterpolator.o:
	* jsfield.cpp:
	* X3DProto.cpp:
	* Rendering.h:
	* PositionInterpolator2D.d:
	* NurbsTextureCoordinate.o:
	* X3DVertexAttributeNode.d:
	* NurbsTextureCoordinate.d:
	* ArrayFields.cpp:
	* SFColorRGBA.cpp:
	* X3DBasicNode.cpp:
	* PositionInterpolator2D.o:
	* X3DScene.cpp:
	* X3DVertexAttributeNode.o:
	* Matrix3VertexAttribute.d:
	* Matrix3VertexAttribute.o:
	* X3DBrowser.cpp:
	* Text.h:
	* Texturing.h:
	* MultiTextureCoordinate.o:
	* Scripting.h:
	* MultiTextureCoordinate.d:
	* Matrix4VertexAttribute.d:
	* Matrix4VertexAttribute.o:
	* X3DKeyDeviceSensorNode.o:
	* X3DNBodyCollidableNode.d:
	* X3DAppearanceChildNode.d:
	* Followers.h:
	* X3DAppearanceChildNode.o:
	* X3DKeyDeviceSensorNode.d:
	* X3DParticleEmitterNode.o:
	* SFRotation4.cpp:
	* X3DParticleEmitterNode.d:
	* geturl.cpp:
	* X3DNBodyCollidableNode.o:
	* GarbageCollector.h:
	* Geometry2D.h:
	* ExternProto.h:
	* X3DRenderer.h:
	* Navigation.h:
	* OrientationInterpolator.o:
	* Networking.h:
	* X3DTextureTransformNode.o:
	* X3DTextureTransformNode.d:
	* DrawingArea.cpp:
	* X3DComposedGeometryNode.d:
	* X3DComposedGeometryNode.o:
	* Geometry3D.h:
	* OrientationInterpolator.d:
	* Geospatial.h:
	* jsstring.cpp:
	* IndexedTriangleStripSet.d:
	* IndexedTriangleStripSet.o:
	* Generator.h:
	* jsX3DScene.h:
	* GeoPositionInterpolator.o:
	* jsX3DField.h:
	* NodeArray.cpp:
	* GeoPositionInterpolator.d:
	* NodeTypeArray.cpp:
	* GeneratedCubeMapTexture.d:
	* GeneratedCubeMapTexture.o:
	* jsGlobals.cpp:
	* X3DGeometricPropertyNode.d:
	* jsBrowser.cpp:
	* X3DGeometricPropertyNode.o:
	* X3DNurbsControlCurveNode.o:
	* NurbsSurfaceInterpolator.o:
	* PointingDevice.h:
	* NurbsSurfaceInterpolator.d:
	* SplineScalarInterpolator.d:
	* TextureTransformMatrix3D.d:
	* CoordinateInterpolator2D.d:
	* CoordinateInterpolator2D.o:
	* SplineScalarInterpolator.o:
	* TextureTransformMatrix3D.o:
	* X3DTextureCoordinateNode.d:
	* X3DTextureCoordinateNode.o:
	* X3DNurbsControlCurveNode.d:
	* uncompress.h:
	* BasicNodeArray.cpp:
	* ViewVolume.cpp:
	* ProtoArray.cpp:
	* Shape.h:
	* Texturing3D.h:
	* Sound.h:
	* Text.cpp:
	* CADGeometry.h:
	* jsX3DObject.h:
	* Generator.cpp:
	* X3DRenderer.cpp:
	* ExternProto.cpp:
	* X3DNode.h:
	* X3DEnvironmentTextureNode.d:
	* jsX3DScene.cpp:
	* NurbsPositionInterpolator.o:
	* NurbsPositionInterpolator.d:
	* jsX3DField.cpp:
	* X3DParametricGeometryNode.o:
	* X3DParametricGeometryNode.d:
	* X3DEnvironmentTextureNode.o:
	* X3DNBodyCollisionSpaceNode.d:
	* X3DNBodyCollisionSpaceNode.o:
	* Layout.h:
	* Shape.cpp:
	* TextureCoordinateGenerator.o:
	* TextureCoordinateGenerator.d:
	* FieldDefinitionSet.h:
	* Interpolation.h:
	* uncompress.cpp:
	* ShapeContainer.h:
	* X3DEnvironmentalSensorNode.o:
	* X3DEnvironmentalSensorNode.d:
	* jsX3DObject.cpp:
	* GarbargeCollector.cpp:
	* X3DFieldDefinition.h:
	* PointingDevice.cpp:
	* SplinePositionInterpolator.d:
	* SignalPdu.h:
	* SplinePositionInterpolator.o:
	* LightContainer.h:
	* Sound.cpp:
	* X3DProgrammableShaderObject.d:
	* X3DPointingDeviceSensorNode.o:
	* X3DPointingDeviceSensorNode.d:
	* Box.h:
	* X3DParticlePhysicsModelNode.o:
	* FontStyle.h:
	* X3DNode.cpp:
	* LOD.h:
	* EventUtilities.h:
	* NurbsSet.h:
	* ProfileInfo.h:
	* X3DNurbsSurfaceGeometryNode.o:
	* WorldInfo.h:
	* X3DNurbsSurfaceGeometryNode.d:
	* Material.h:
	* X3DParticlePhysicsModelNode.d:
	* Group.h:
	* X3DProgrammableShaderObject.o:
	* Layer.h:
	* InterfaceDeclaration.h:
	* SignalPdu.cpp:
	* FieldDefinitionSet.cpp:
	* ReceiverPdu.h:
	* jsSFNode.h:
	* FieldDefinitionArray.h:
	* Color.h:
	* jsX3DArrayField.h:
	* TimeSensor.h:
	* SplinePositionInterpolator2D.d:
	* Contour2D.h:
	* ParticleSystems.h:
	* ShapeContainer.cpp:
	* ExternProtoArray.h:
	* AudioClip.h:
	* X3DFieldDefinition.cpp:
	* NurbsOrientationInterpolator.o:
	* NurbsOrientationInterpolator.d:
	* jsMFBool.h:
	* X3DProductStructureChildNode.d:
	* X3DProductStructureChildNode.o:
	* jsMFTime.h:
	* jsMFNode.h:
	* Cone.h:
	* SquadOrientationInterpolator.o:
	* SquadOrientationInterpolator.d:
	* SplinePositionInterpolator2D.o:
	* Switch.h:
	* KeyDeviceSensor.h:
	* Layout.cpp:
	* jsMFColor.h:
	* jsMFVec4f.h:
	* X3DInfoNode.h:
	* WorldInfo.cpp:
	* jsMFVec3f.h:
	* jsMFVec4d.h:
	* jsSFColor.h:
	* Layer.cpp:
	* Normal.h:
	* jsSFVec2d.h:
	* CubeMapTexturing.h:
	* jsSFImage.h:
	* RigidBodyPhysics.h:
	* FontStyle.cpp:
	* jsMFFloat.h:
	* Material.cpp:
	* jsMFImage.h:
	* Group.cpp:
	* jsMFInt32.h:
	* Appearance.h:
	* Script.h:
	* jsMFVec2f.h:
	* jsMFVec3d.h:
	* HAnimSite.h:
	* MetadataSet.h:
	* jsMFVec2d.h:
	* ImportedNodeArray.h:
	* jsSFVec4d.h:
	* jsSFVec3f.h:
	* jsSFVec3d.h:
	* ComponentInfo.h:
	* JavaScriptEngine.h:
	* Arc2D.h:
	* ProfileInfo.cpp:
	* ExportedNodeArray.h:
	* jsSFVec4f.h:
	* jsSFVec2f.h:
	* LOD.cpp:
	* NurbsSet.cpp:
	* Box.cpp:
	* NurbsCurve.h:
	* Disk2D.h:
	* Inline.h:
	* jsMFTime.cpp:
	* SupportedNodes.h:
	* ExternProtoArray.cpp:
	* Cone.cpp:
	* jsMFString.h:
	* MetadataBool.h:
	* Anchor.h:
	* AudioClip.cpp:
	* jsMFNode.cpp:
	* Switch.cpp:
	* jsMFDouble.h:
	* FieldDefinitionArray.cpp:
	* LineSet.h:
	* ReceiverPdu.cpp:
	* Sphere.h:
	* jsSFNode.cpp:
	* TimeSensor.cpp:
	* Color.cpp:
	* jsMFBool.cpp:
	* Viewport.h:
	* X3DChildNode.h:
	* Contour2D.cpp:
	* HAnimJoint.h:
	* GeoLOD.h:
	* LayerSet.h:
	* InterfaceDeclaration.cpp:
	* ComponentInfo.cpp:
	* HAnimSite.cpp:
	* FieldTypesArray.h:
	* SupportedFields.h:
	* Transform.h:
	* LayoutGroup.h:
	* LayoutLayer.h:
	* Normal.cpp:
	* TransmitterPdu.h:
	* PointSet.h:
	* NurbsCurve.cpp:
	* NurbsCurve2D.h:
	* Arc2D.cpp:
	* ScreenGroup.h:
	* SpotLight.h:
	* MetadataFloat.h:
	* ShaderPart.h:
	* Appearance.cpp:
	* X3DSoundNode.h:
	* X3DShapeNode.h:
	* X3DSensorNode.h:
	* EspduTransform.h:
	* X3DInfoNode.cpp:
	* MetadataSet.cpp:
	* Script.cpp:
	* jsSFImage.cpp:
	* jsMFVec2d.cpp:
	* JavaScriptEngine.cpp:
	* jsMFColor.cpp:
	* jsMFVec3d.cpp:
	* jsMFVec2f.cpp:
	* jsProfileInfoArray.h:
	* jsSFVec4f.cpp:
	* jsSFVec4d.cpp:
	* jsSFVec3f.cpp:
	* jsSFVec3d.cpp:
	* jsMFFloat.cpp:
	* jsMFImage.cpp:
	* jsMFInt32.cpp:
	* LightContainerArray.h:
	* jsSFVec2d.cpp:
	* jsMFVec4d.cpp:
	* jsMFVec4f.cpp:
	* jsSFVec2f.cpp:
	* X3DExecutionContext.h:
	* jsMFVec3f.cpp:
	* jsSFColor.cpp:
	* ProfileInfoArray.h:
	* Sphere.cpp:
	* Viewport.cpp:
	* jsSFMatrix3f.h:
	* jsMFRotation.h:
	* jsMFMatrix3d.h:
	* CADPart.h:
	* PointLight.h:
	* jsMFMatrix4f.h:
	* MetadataDouble.h:
	* ClipPlane.h:
	* jsSFMatrix4f.h:
	* SupportedNodes.cpp:
	* Cylinder.h:
	* jsSFMatrix4d.h:
	* LayerSet.cpp:
	* MetadataBool.cpp:
	* QuadSet.h:
	* X3DChildNode.cpp:
	* jsSFRotation.h:
	* Disk2D.cpp:
	* HAnimJoint.cpp:
	* jsMFMatrix3f.h:
	* EnvironmentalSensor.h:
	* MetadataString.h:
	* Anchor.cpp:
	* Inline.cpp:
	* LineSet.cpp:
	* Circle2D.h:
	* CADFace.h:
	* jsMFDouble.cpp:
	* GeoLOD.cpp:
	* jsMFMatrix4d.h:
	* jsVrmlMatrix.h:
	* HAnimSegment.h:
	* jsSFMatrix3d.h:
	* jsMFString.cpp:
	* ColorRGBA.h:
	* LineProperties.h:
	* FillProperties.h:
	* X3DSensorNode.cpp:
	* jsSFColorRGBA.h:
	* DISEntityManager.h:
	* X3DPropertyNode.h:
	* GeoOrigin.h:
	* X3DBindableNode.h:
	* EspduTransform.cpp:
	* ShaderPart.cpp:
	* MetadataFloat.cpp:
	* PointSet.cpp:
	* MetadataInteger.h:
	* TransmitterPdu.cpp:
	* EnvironmentalEffects.h:
	* Extrusion.h:
	* CADLayer.h:
	* Viewpoint.h:
	* PointingDeviceSensor.h:
	* X3DExecutionContext.cpp:
	* SpotLight.cpp:
	* StaticGroup.h:
	* jsMFColorRGBA.h:
	* jsComponentInfoArray.h:
	* HAnimHumanoid.h:
	* NurbsCurve2D.cpp:
	* Transform.cpp:
	* jsProfileInfoArray.cpp:
	* Collision.h:
	* X3DSoundNode.cpp:
	* jsX3DFieldDefinition.h:
	* SupportedProfiles.h:
	* SupportedFields.cpp:
	* Coordinate.h:
	* X3DShapeNode.cpp:
	* LayoutGroup.cpp:
	* ScreenGroup.cpp:
	* Billboard.h:
	* X3DLayoutNode.h:
	* FieldTypesArray.cpp:
	* LayoutLayer.cpp:
	* Polyline2D.h:
	* Cylinder.cpp:
	* jsX3DExecutionContext.h:
	* LoadSensor.h:
	* jsSFMatrix4f.cpp:
	* ColorDamper.h:
	* PointLight.cpp:
	* TriangleSet.h:
	* ColorRGBA.cpp:
	* X3DLayerNode.h:
	* ClipPlane.cpp:
	* jsSFRotation.cpp:
	* ArcClose2D.h:
	* X3DLightNode.h:
	* jsSFMatrix3d.cpp:
	* Circle2D.cpp:
	* jsVrmlMatrix.cpp:
	* jsSFMatrix4d.cpp:
	* jsSFMatrix3f.cpp:
	* PickableGroup.h:
	* ProfileInfoArray.cpp:
	* HAnimSegment.cpp:
	* jsMFMatrix4d.cpp:
	* QuadSet.cpp:
	* ProgramShader.h:
	* CADFace.cpp:
	* MetadataString.cpp:
	* ComponentInfoArray.h:
	* X3DMaterialNode.h:
	* ShaderProgram.h:
	* jsMFMatrix4f.cpp:
	* jsMFMatrix3f.cpp:
	* X3DShaderNode.h:
	* MetadataDouble.cpp:
	* jsMFRotation.cpp:
	* HAnimDisplacer.h:
	* X3DFontStyleNode.h:
	* jsMFMatrix3d.cpp:
	* CADPart.cpp:
	* Coordinate.cpp:
	* jsMFColorRGBA.cpp:
	* LineProperties.cpp:
	* FillProperties.cpp:
	* Collision.cpp:
	* SupportedProfiles.cpp:
	* TwoSidedMaterial.h:
	* PixelTexture.h:
	* Rectangle2D.h:
	* Extrusion.cpp:
	* Polypoint2D.h:
	* CADLayer.cpp:
	* ScalarChaser.h:
	* StaticGroup.cpp:
	* LinePickSensor.h:
	* Billboard.cpp:
	* MovieTexture.h:
	* ScreenFontStyle.h:
	* jsComponentInfoArray.cpp:
	* ImageTexture.h:
	* X3DLayoutNode.cpp:
	* jsX3DFieldDefinition.cpp:
	* CoordinateDouble.h:
	* MultiTexture.h:
	* DISEntityMapping.cpp:
	* BrowserOptions.h:
	* SupportedComponents.h:
	* DISEntityManager.cpp:
	* MetadataInteger.cpp:
	* PackagedShader.h:
	* ComposedShader.h:
	* jsFieldDefinitionArray.h:
	* Viewpoint.cpp:
	* GeoOrigin.cpp:
	* X3DMetadataObject.h:
	* X3DPropertyNode.cpp:
	* X3DBindableNode.cpp:
	* jsSFColorRGBA.cpp:
	* GeoMetadata.h:
	* GeoLocation.h:
	* X3DColorNode.h:
	* HAnimHumanoid.cpp:
	* ComponentInfoArray.cpp:
	* X3DUrlObject.h:
	* X3DChaserNode.h:
	* X3DDamperNode.h:
	* NurbsPatchSurface.h:
	* X3DShaderNode.cpp:
	* TriangleSet.cpp:
	* PointPickSensor.h:
	* ContourPolyline2D.h:
	* NurbsSwungSurface.h:
	* X3DLightNode.cpp:
	* jsX3DExecutionContext.cpp:
	* PickableGroup.cpp:
	* GeoViewpoint.h:
	* ArcClose2D.cpp:
	* X3DFontStyleNode.cpp:
	* NurbsSweptSurface.h:
	* LoadSensor.cpp:
	* GeoTransform.h:
	* X3DNormalNode.h:
	* Polyline2D.cpp:
	* CADAssembly.h:
	* ColorDamper.cpp:
	* X3DMaterialNode.cpp:
	* X3DLayerNode.cpp:
	* X3DScriptNode.h:
	* X3DAppearanceNode.h:
	* ProgramShader.cpp:
	* ShaderProgram.cpp:
	* HAnimDisplacer.cpp:
	* Rectangle2D.cpp:
	* BrowserOptions.cpp:
	* CoordinateDouble.cpp:
	* Polypoint2D.cpp:
	* jsFieldDefinitionArray.cpp:
	* X3DGroupingNode.h:
	* ScalarChaser.cpp:
	* Fog.h:
	* GeoCoordinate.h:
	* PackagedShader.cpp:
	* X3DColorNode.cpp:
	* IndexedLineSet.h:
	* TwoSidedMaterial.cpp:
	* TriangleFanSet.h:
	* SupportedComponents.cpp:
	* ElevationGrid.h:
	* GeoMetadata.cpp:
	* X3DMetadataObject.cpp:
	* Contact.h:
	* DISEntityTypeMapping.h:
	* ComposedShader.cpp:
	* GeoLocation.cpp:
	* TriangleSet2D.h:
	* PixelTexture.cpp:
	* MultiTexture.cpp:
	* PositionChaser.h:
	* PositionDamper.h:
	* X3DTextureNode.h:
	* VolumePickSensor.h:
	* LinePickSensor.cpp:
	* ImageTexture.cpp:
	* MovieTexture.cpp:
	* X3DSoundSourceNode.h:
	* X3DViewportNode.h:
	* ScreenFontStyle.cpp:
	* X3DTimeDependentNode.h:
	* NurbsPatchSurface.cpp:
	* OrthoViewpoint.h:
	* NurbsTrimmedSurface.h:
	* NurbsSwungSurface.cpp:
	* NurbsSweptSurface.cpp:
	* NavigationInfo.h:
	* X3DAppearanceNode.cpp:
	* GeoTransform.cpp:
	* IndexedFaceSet.h:
	* DirectionalLight.h:
	* X3DPickableObject.h:
	* GeoViewpoint.cpp:
	* GeoTouchSensor.h:
	* X3DScriptNode.cpp:
	* X3DPrototypeInstance.h:
	* KeySensor.h:
	* X3DGeometryNode.h:
	* X3DNormalNode.cpp:
	* X3DPickSensorNode.h:
	* BrowserProperties.h:
	* X3DUrlObject.cpp:
	* CADAssembly.cpp:
	* CosmoWorlds.wrl:
	* ViewpointGroup.h:
	* X3DBoundedObject.h:
	* ContourPolyline2D.cpp:
	* X3DChaserNode.cpp:
	* PointPickSensor.cpp:
	* X3DFollowerNode.h:
	* X3DDamperNode.cpp:
	* GeoCoordinate.cpp:
	* X3DViewportNode.cpp:
	* X3DGroupingNode.cpp:
	* X3DTextureNode.cpp:
	* IndexedLineSet.cpp:
	* TextureTransform.h:
	* X3DTexture2DNode.h:
	* TimeTrigger.h:
	* PixelTexture3D.h:
	* PositionChaser.cpp:
	* ImageTexture3D.h:
	* CoordinateDamper.h:
	* IndexedQuadSet.h:
	* Contact.cpp:
	* X3DSoundSourceNode.cpp:
	* RigidBody.h:
	* DISEntityTypeMapping.cpp:
	* TriangleStripSet.h:
	* TriangleFanSet.cpp:
	* BallJoint.h:
	* Fog.cpp:
	* VolumePickSensor.cpp:
	* PositionDamper.cpp:
	* PositionChaser2D.h:
	* PositionDamper2D.h:
	* TexCoordDamper2D.h:
	* ElevationGrid.cpp:
	* TriangleSet2D.cpp:
	* TextureCoordinate.h:
	* NavigationInfo.cpp:
	* TextureProperties.h:
	* NurbsTrimmedSurface.cpp:
	* IndexedFaceSet.cpp:
	* X3DViewpointNode.h:
	* OrthoViewpoint.cpp:
	* X3DCoordinateNode.h:
	* X3DGeometryNode.cpp:
	* EaseInEaseOut.h:
	* MotorJoint.h:
	* ViewpointGroup.cpp:
	* KeySensor.cpp:
	* GeoElevationGrid.h:
	* ConeEmitter.h:
	* PrimitivePickSensor.h:
	* OrientationDamper.h:
	* RenderingProperties.h:
	* GeoTouchSensor.cpp:
	* X3DPickSensorNode.cpp:
	* X3DPickableObject.cpp:
	* DirectionalLight.cpp:
	* OrientationChaser.h:
	* X3DBoundedObject.cpp:
	* X3DTimeDependentNode.cpp:
	* X3DFollowerNode.cpp:
	* BrowserProperties.cpp:
	* X3DPrototypeInstance.cpp:
	* X3DAppearanceChildNode.h:
	* kopierter Text.txt:
	* ImageTexture3D.cpp:
	* PixelTexture3D.cpp:
	* QuadSphereProperties.h:
	* X3DTexture3DNode.h:
	* IndexedQuadSet.cpp:
	* TextureTransform.cpp:
	* X3DTexture2DNode.cpp:
	* FloatVertexAttribute.h:
	* BooleanToggle.h:
	* IndexedTriangleSet.h:
	* BooleanFilter.h:
	* PositionDamper2D.cpp:
	* CoordinateDamper.cpp:
	* TimeTrigger.cpp:
	* PositionChaser2D.cpp:
	* TriangleStripSet.cpp:
	* RigidBody.cpp:
	* SliderJoint.h:
	* NurbsTextureCoordinate.h:
	* PointEmitter.h:
	* TexCoordDamper2D.cpp:
	* StringSensor.h:
	* BallJoint.cpp:
	* OrientationDamper.cpp:
	* RenderingProperties.cpp:
	* OrientationChaser.cpp:
	* LocalFog.h:
	* GeoElevationGrid.cpp:
	* GeoProximitySensor.h:
	* BooleanTrigger.h:
	* X3DTriggerNode.h:
	* X3DSpherePropertyNode.h:
	* IntegerTrigger.h:
	* ComposedTexture3D.h:
	* X3DCoordinateNode.cpp:
	* ConeEmitter.cpp:
	* X3DViewpointNode.cpp:
	* MotorJoint.cpp:
	* TextureCoordinate.cpp:
	* TextureProperties.cpp:
	* VolumeEmitter.h:
	* PrimitivePickSensor.cpp:
	* EaseInEaseOut.cpp:
	* SliderJoint.cpp:
	* Matrix4VertexAttribute.h:
	* NurbsSurfaceInterpolator.h:
	* FloatVertexAttribute.cpp:
	* Matrix3VertexAttribute.h:
	* StringSensor.cpp:
	* IndexedTriangleSet.cpp:
	* SurfaceEmitter.h:
	* ParticleSystem.h:
	* PointEmitter.cpp:
	* BooleanFilter.cpp:
	* BooleanToggle.cpp:
	* NurbsTextureCoordinate.cpp:
	* X3DNurbsControlCurveNode.h:
	* QuadSphereProperties.cpp:
	* X3DAppearanceChildNode.cpp:
	* X3DTexture3DNode.cpp:
	* TextureTransform3D.h:
	* X3DVertexAttributeNode.h:
	* X3DParametricGeometryNode.h:
	* ComposedTexture3D.cpp:
	* ColorInterpolator.h:
	* BooleanSequencer.h:
	* TextureCoordinate4D.h:
	* TextureCoordinate3D.h:
	* LocalFog.cpp:
	* PolylineEmitter.h:
	* X3DNetworkSensorNode.h:
	* Background.h:
	* VolumeEmitter.cpp:
	* X3DSequencerNode.h:
	* IndexedTriangleFanSet.h:
	* CollisionSpace.h:
	* UniversalJoint.h:
	* IntegerTrigger.cpp:
	* IntegerSequencer.h:
	* NurbsPositionInterpolator.h:
	* MultiTextureTransform.h:
	* GeoProximitySensor.cpp:
	* BooleanTrigger.cpp:
	* X3DTriggerNode.cpp:
	* SurfaceEmitter.cpp:
	* NormalInterpolator.h:
	* TextureTransform3D.cpp:
	* WindPhysicsModel.h:
	* TouchSensor.h:
	* PlaneSensor.h:
	* ScalarInterpolator.h:
	* CollidableShape.h:
	* MultiTextureCoordinate.h:
	* NurbsSurfaceInterpolator.cpp:
	* X3DNurbsControlCurveNode.cpp:
	* CollisionSensor.h:
	* ExplosionEmitter.h:
	* X3DVertexAttributeNode.cpp:
	* Matrix4VertexAttribute.cpp:
	* Matrix3VertexAttribute.cpp:
	* ParticleSystem.cpp:
	* MultiTextureTransform.cpp:
	* IntegerSequencer.cpp:
	* IndexedTriangleFanSet.cpp:
	* UniversalJoint.cpp:
	* X3DSequencerNode.cpp:
	* X3DComposedGeometryNode.h:
	* TextureCoordinate3D.cpp:
	* X3DFogObject.h:
	* TextureCoordinate4D.cpp:
	* IndexedTriangleStripSet.h:
	* X3DTextureTransformNode.h:
	* CollisionSpace.cpp:
	* BooleanSequencer.cpp:
	* Background.cpp:
	* CollidableOffset.h:
	* NurbsPositionInterpolator.cpp:
	* X3DInterpolatorNode.h:
	* SphereSensor.h:
	* X3DNurbsSurfaceGeometryNode.h:
	* PolylineEmitter.cpp:
	* X3DNetworkSensorNode.cpp:
	* X3DParametricGeometryNode.cpp:
	* ColorInterpolator.cpp:
	* CollisionSensor.cpp:
	* ScalarInterpolator.cpp:
	* NormalInterpolator.cpp:
	* WindPhysicsModel.cpp:
	* CollidableShape.cpp:
	* ExplosionEmitter.cpp:
	* FogCoordinate.h:
	* X3DGeometricPropertyNode.h:
	* MultiTextureCoordinate.cpp:
	* PlaneSensor.cpp:
	* X3DTextureCoordinateNode.h:
	* GeoPositionInterpolator.h:
	* NurbsOrientationInterpolator.h:
	* PositionInterpolator.h:
	* TouchSensor.cpp:
	* X3DRigidJointNode.h:
	* X3DComposedGeometryNode.cpp:
	* BoundedPhysicsModel.h:
	* X3DInterpolatorNode.cpp:
	* X3DNurbsSurfaceGeometryNode.cpp:
	* X3DTextureTransformNode.cpp:
	* CollidableOffset.cpp:
	* X3DProgrammableShaderObject.h:
	* X3DFogObject.cpp:
	* CylinderSensor.h:
	* ProximitySensor.h:
	* GravityPhysicsModel.h:
	* SphereSensor.cpp:
	* IndexedTriangleStripSet.cpp:
	* TransformSensor.h:
	* TextureTransformMatrix3D.h:
	* CoordinateInterpolator.h:
	* ImageCubeMapTexture.h:
	* X3DTextureCoordinateNode.cpp:
	* PositionInterpolator2D.h:
	* GeoPositionInterpolator.cpp:
	* X3DRigidJointNode.cpp:
	* NurbsOrientationInterpolator.cpp:
	* RigidBodyCollection.h:
	* TextureCoordinateGenerator.h:
	* CollisionCollection.h:
	* X3DGeometricPropertyNode.cpp:
	* FogCoordinate.cpp:
	* PositionInterpolator.cpp:
	* VisibilitySensor.h:
	* ProximitySensor.cpp:
	* DoubleAxisHingeJoint.h:
	* CylinderSensor.cpp:
	* GravityPhysicsModel.cpp:
	* OrientationInterpolator.h:
	* BoundedPhysicsModel.cpp:
	* SingleAxisHingeJoint.h:
	* TransformSensor.cpp:
	* X3DProgrammableShaderObject.cpp:
	* CoordinateInterpolator2D.h:
	* BindableNodeStack.h:
	* X3DBackgroundNode.h:
	* X3DParticleEmitterNode.h:
	* TextureBackground.h:
	* CoordinateInterpolator.cpp:
	* TextureCoordinateGenerator.cpp:
	* CollisionCollection.cpp:
	* RigidBodyCollection.cpp:
	* ImageCubeMapTexture.cpp:
	* SplineScalarInterpolator.h:
	* X3DDragSensorNode.h:
	* X3DKeyDeviceSensorNode.h:
	* PositionInterpolator2D.cpp:
	* TextureTransformMatrix3D.cpp:
	* VisibilitySensor.cpp:
	* DoubleAxisHingeJoint.cpp:
	* ComposedCubeMapTexture.h:
	* OrientationInterpolator.cpp:
	* X3DNBodyCollidableNode.h:
	* X3DTouchSensorNode.h:
	* SingleAxisHingeJoint.cpp:
	* SplinePositionInterpolator.h:
	* X3DProductStructureChildNode.h:
	* CoordinateInterpolator2D.cpp:
	* TextureBackground.cpp:
	* GeneratedCubeMapTexture.h:
	* X3DKeyDeviceSensorNode.cpp:
	* X3DDragSensorNode.cpp:
	* X3DParticleEmitterNode.cpp:
	* X3DBackgroundNode.cpp:
	* SplineScalarInterpolator.cpp:
	* X3DNBodyCollidableNode.cpp:
	* ComposedCubeMapTexture.cpp:
	* X3DTouchSensorNode.cpp:
	* X3DEnvironmentTextureNode.h:
	* SplinePositionInterpolator2D.h:
	* X3DProductStructureChildNode.cpp:
	* SplinePositionInterpolator.cpp:
	* GeneratedCubeMapTexture.cpp:
	* SquadOrientationInterpolator.h:
	* X3DNBodyCollisionSpaceNode.h:
	* X3DParticlePhysicsModelNode.h:
	* SquadOrientationInterpolator.cpp:
	* X3DEnvironmentTextureNode.cpp:
	* SplinePositionInterpolator2D.cpp:
	* X3DNBodyCollisionSpaceNode.cpp:
	* X3DParticlePhysicsModelNode.cpp:
	* X3DEnvironmentalSensorNode.h:
	* X3DPointingDeviceSensorNode.h:
	* X3DEnvironmentalSensorNode.cpp:
	* X3DPointingDeviceSensorNode.cpp: 

2012-10-22  Holger Seelig  <holger.seelig@yahoo.de>

	* RenderingProperties.cpp: 

2012-10-22  Holger Seelig  <holger.seelig@yahoo.de>

	* RenderingProperties.cpp: 

2012-10-22  Holger Seelig  <holger.seelig@yahoo.de>

	* RenderingProperties.cpp: 

2012-10-22  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DBase.h:
	* World.cpp:
	* X3DBrowser.h:
	* Statistics.h:
	* DrawingArea.h:
	* X3DBrowser.cpp:
	* Statistics.cpp:
	* DrawingArea.cpp:
	* LayerSet.cpp:
	* X3DLayerNode.cpp:
	* X3DGeometryNode.cpp:
	* RenderingProperties.h:
	* RenderingProperties.cpp: 

2012-10-21  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* X3DBrowser.h:
	* X3DBrowser.cpp:
	* DrawingArea.cpp:
	* RenderingProperties.cpp: 

2012-10-21  Holger Seelig  <holger.seelig@yahoo.de>

	* X3D.h:
	* libtitania-x3d.cproj:
	* DrawingArea.h:
	* X3DBrowser.cpp:
	* DrawingArea.cpp:
	* RenderingProperties.h:
	* RenderingProperties.cpp: 

2012-10-20  Holger Seelig  <holger.seelig@yahoo.de>

	* Browser.h:
	* Browser.cpp:
	* X3DBrowser.h:
	* X3DTexture2DNode.h:
	* X3DTexture2DNode.cpp:
	* RenderingProperties.cpp: 

2012-10-20  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DOutput.cpp:
	* DrawingArea.cpp: 

2012-10-19  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* JavaScript.cpp:
	* SFNode.h:
	* X3DOutput.h:
	* X3DField.h:
	* X3DOutput.cpp:
	* Viewer.cpp:
	* X3DBrowser.cpp:
	* MotionBlur.cpp:
	* DrawingArea.cpp:
	* TimeSensor.cpp:
	* Appearance.cpp:
	* LayerSet.cpp:
	* Inline.cpp:
	* X3DBindableNode.cpp:
	* Viewpoint.cpp:
	* X3DLayerNode.cpp:
	* ImageTexture.cpp:
	* BrowserOptions.cpp:
	* X3DGroupingNode.cpp:
	* IndexedLineSet.cpp:
	* IndexedFaceSet.cpp:
	* ColorInterpolator.cpp:
	* ScalarInterpolator.cpp:
	* NormalInterpolator.cpp:
	* X3DFogObject.cpp:
	* X3DInterpolatorNode.cpp:
	* PositionInterpolator.cpp:
	* GeoPositionInterpolator.cpp:
	* ProximitySensor.cpp:
	* TextureCoordinateGenerator.cpp:
	* VisibilitySensor.cpp:
	* PositionInterpolator2D.cpp:
	* CoordinateInterpolator.cpp:
	* OrientationInterpolator.cpp:
	* SplineScalarInterpolator.cpp:
	* CoordinateInterpolator2D.cpp:
	* SplinePositionInterpolator.cpp:
	* SplinePositionInterpolator2D.cpp:
	* SquadOrientationInterpolator.cpp: 

2012-10-19  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DArrayField.h: 

2012-10-19  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj: 

2012-10-19  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj: 

2012-10-19  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj: 

2012-10-19  Holger Seelig  <holger.seelig@yahoo.de>

	* X3D.h:
	* X3D.cpp:
	* libtitania-x3d.md.pc:
	* Array.h:
	* SFImage.h:
	* X3DObject.h:
	* SFString.h:
	* SFMatrix4.h:
	* SFMatrix3.h:
	* SFColor.cpp:
	* SFImage.cpp:
	* SFString.cpp:
	* Browser.cpp:
	* X3DBrowser.h:
	* X3DArrayField.h:
	* X3DBasicNode.cpp:
	* X3DBrowser.cpp:
	* SFColorRGBA.cpp:
	* JavaScriptEngine.h:
	* JavaScriptEngine.cpp:
	* SupportedNodes.cpp:
	* SupportedFields.cpp:
	* SupportedProfiles.cpp:
	* X3DUrlObject.h:
	* PixelTexture.cpp:
	* SupportedComponents.cpp:
	* ImageTexture.cpp:
	* BrowserProperties.h:
	* X3DUrlObject.cpp:
	* RenderingProperties.h:
	* RenderingProperties.cpp: 

2012-10-17  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DUrlObject.cpp: 

2012-10-17  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DUrlObject.cpp: 

2012-10-16  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DBrowser.h:
	* X3DBrowser.cpp:
	* X3DUrlObject.h:
	* X3DUrlObject.cpp: 

2012-10-16  Holger Seelig  <holger.seelig@yahoo.de>

	* ExternProto.cpp:
	* GarbargeCollector.cpp:
	* X3DExecutionContext.h:
	* X3DExecutionContext.cpp:
	* X3DUrlObject.h:
	* ImageTexture.cpp:
	* X3DUrlObject.cpp: 

2012-10-15  Holger Seelig  <holger.seelig@yahoo.de>

	* ImageTexture.cpp: 

2012-10-15  Holger Seelig  <holger.seelig@yahoo.de>

	* Scene.h:
	* Scene.cpp:
	* X3DExecutionContext.h:
	* X3DExecutionContext.cpp:
	* X3DUrlObject.h:
	* X3DUrlObject.cpp: 

2012-10-15  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* Scene.h:
	* Scene.cpp:
	* ExternProto.cpp:
	* X3DUrlObject.h:
	* ImageTexture.cpp:
	* X3DUrlObject.cpp: 

2012-10-15  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DUrlObject.h:
	* ImageTexture.cpp:
	* X3DUrlObject.cpp: 

2012-10-15  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* X3DUrlObject.h:
	* X3DUrlObject.cpp: 

2012-10-14  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj: 

2012-10-13  Holger Seelig  <holger.seelig@yahoo.de>

	* DrawingArea.h:
	* DrawingArea.cpp: 

2012-10-13  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.pidb: 

2012-10-12  Holger Seelig  <holger.seelig@yahoo.de>

	* Viewer.h:
	* Viewer.cpp:
	* DrawingArea.h:
	* DrawingArea.cpp:
	* PointingDevice.h:
	* PointingDevice.cpp: 

2012-10-12  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.md.pc:
	* libtitania-x3d.cproj:
	* Browser.h:
	* Properties:
	* Browser.cpp:
	* X3DBrowser.h:
	* BrowserProperties.h:
	* RenderingProperties.h:
	* Sphere.h:
	* RenderingProperties.cpp:
	* Sphere.cpp:
	* X3DExecutionContext.cpp:
	* BrowserProperties.h:
	* RenderingProperties.h:
	* QuadSphereProperties.h:
	* X3DSpherePropertyNode.h:
	* RenderingProperties.cpp:
	* QuadSphereProperties.cpp: 

2012-10-11  Holger Seelig  <holger.seelig@yahoo.de>

	* Numbers.h:
	* Parser.h:
	* Geometry.h:
	* X3DOutput.h:
	* X3DField.h:
	* Browser.h:
	* Route.cpp:
	* Parser.cpp:
	* Matrix.h:
	* Viewer.cpp:
	* Scene.cpp:
	* Proto.cpp:
	* Browser.cpp:
	* X3DBasicNode.h:
	* X3DBrowser.cpp:
	* X3DBasicNode.cpp:
	* MotionBlur.cpp:
	* Statistics.cpp:
	* Text.cpp:
	* X3DRenderer.cpp:
	* ExternProto.cpp:
	* Shape.cpp:
	* Sound.cpp:
	* SignalPdu.cpp:
	* Layout.cpp:
	* WorldInfo.cpp:
	* Layer.cpp:
	* FontStyle.cpp:
	* Group.cpp:
	* Material.cpp:
	* LOD.cpp:
	* Box.cpp:
	* NurbsSet.cpp:
	* ProfileInfo.cpp:
	* ReceiverPdu.cpp:
	* Color.cpp:
	* TimeSensor.cpp:
	* Cone.cpp:
	* Switch.cpp:
	* SupportedNodes.h:
	* AudioClip.cpp:
	* Contour2D.cpp:
	* Normal.cpp:
	* NurbsCurve.cpp:
	* Script.cpp:
	* Arc2D.cpp:
	* HAnimSite.cpp:
	* MetadataSet.cpp:
	* JavaScriptEngine.cpp:
	* Appearance.cpp:
	* RenderingProperties.cpp:
	* ComponentInfo.cpp:
	* GeoLOD.cpp:
	* Disk2D.cpp:
	* SupportedNodes.cpp:
	* HAnimJoint.cpp:
	* Sphere.cpp:
	* MetadataBool.cpp:
	* Inline.cpp:
	* Viewport.cpp:
	* LineSet.cpp:
	* Anchor.cpp:
	* LayerSet.cpp:
	* NurbsCurve2D.cpp:
	* EspduTransform.cpp:
	* MetadataFloat.cpp:
	* ShaderPart.cpp:
	* X3DShapeNode.cpp:
	* SpotLight.cpp:
	* Transform.cpp:
	* PointSet.cpp:
	* ScreenGroup.cpp:
	* X3DExecutionContext.cpp:
	* LayoutLayer.cpp:
	* LayoutGroup.cpp:
	* TransmitterPdu.cpp:
	* CADPart.cpp:
	* MetadataString.cpp:
	* MetadataDouble.cpp:
	* QuadSet.cpp:
	* CADFace.cpp:
	* Cylinder.cpp:
	* PointLight.cpp:
	* HAnimSegment.cpp:
	* X3DLayerNode.h:
	* ColorRGBA.cpp:
	* Circle2D.cpp:
	* ClipPlane.cpp:
	* Coordinate.cpp:
	* CADLayer.cpp:
	* Viewpoint.cpp:
	* HAnimHumanoid.cpp:
	* DISEntityManager.cpp:
	* Billboard.cpp:
	* Collision.cpp:
	* GeoOrigin.cpp:
	* FillProperties.cpp:
	* StaticGroup.cpp:
	* LineProperties.cpp:
	* MetadataInteger.cpp:
	* Extrusion.cpp:
	* X3DLightNode.cpp:
	* ColorDamper.cpp:
	* TriangleSet.cpp:
	* HAnimDisplacer.cpp:
	* X3DLayerNode.cpp:
	* Polyline2D.cpp:
	* ShaderProgram.cpp:
	* ProgramShader.cpp:
	* LoadSensor.cpp:
	* ArcClose2D.cpp:
	* PickableGroup.cpp:
	* Polypoint2D.cpp:
	* MultiTexture.cpp:
	* ScreenFontStyle.cpp:
	* ScalarChaser.cpp:
	* ImageTexture.cpp:
	* LinePickSensor.cpp:
	* PackagedShader.cpp:
	* Rectangle2D.cpp:
	* ComposedShader.cpp:
	* GeoMetadata.cpp:
	* TwoSidedMaterial.cpp:
	* GeoLocation.cpp:
	* CoordinateDouble.cpp:
	* MovieTexture.cpp:
	* PixelTexture.cpp:
	* CADAssembly.cpp:
	* GeoViewpoint.cpp:
	* NurbsSweptSurface.cpp:
	* X3DBoundedObject.h:
	* GeoTransform.cpp:
	* PointPickSensor.cpp:
	* NurbsSwungSurface.cpp:
	* NurbsPatchSurface.cpp:
	* X3DGeometryNode.h:
	* ContourPolyline2D.cpp:
	* Fog.cpp:
	* GeoCoordinate.cpp:
	* PositionDamper.cpp:
	* VolumePickSensor.cpp:
	* PositionChaser.cpp:
	* TriangleFanSet.cpp:
	* TriangleSet2D.cpp:
	* DISEntityTypeMapping.cpp:
	* Contact.cpp:
	* ElevationGrid.cpp:
	* IndexedLineSet.cpp:
	* NurbsTrimmedSurface.cpp:
	* DirectionalLight.cpp:
	* KeySensor.cpp:
	* IndexedFaceSet.cpp:
	* ViewpointGroup.cpp:
	* NavigationInfo.cpp:
	* X3DPrototypeInstance.cpp:
	* GeoTouchSensor.cpp:
	* X3DViewpointNode.h:
	* OrthoViewpoint.cpp:
	* ImageTexture3D.cpp:
	* PositionChaser2D.cpp:
	* BallJoint.cpp:
	* PixelTexture3D.cpp:
	* TextureTransform.cpp:
	* TexCoordDamper2D.cpp:
	* CoordinateDamper.cpp:
	* PositionDamper2D.cpp:
	* TriangleStripSet.cpp:
	* RigidBody.cpp:
	* IndexedQuadSet.cpp:
	* TimeTrigger.cpp:
	* OrientationDamper.cpp:
	* GeoElevationGrid.cpp:
	* PrimitivePickSensor.cpp:
	* ConeEmitter.cpp:
	* EaseInEaseOut.cpp:
	* TextureProperties.cpp:
	* MotorJoint.cpp:
	* OrientationChaser.cpp:
	* TextureCoordinate.cpp:
	* BooleanToggle.cpp:
	* NurbsTextureCoordinate.cpp:
	* PointEmitter.cpp:
	* FloatVertexAttribute.cpp:
	* IndexedTriangleSet.cpp:
	* StringSensor.cpp:
	* SliderJoint.cpp:
	* BooleanFilter.cpp:
	* BooleanTrigger.cpp:
	* IntegerTrigger.cpp:
	* ComposedTexture3D.cpp:
	* LocalFog.cpp:
	* VolumeEmitter.cpp:
	* GeoProximitySensor.cpp:
	* ParticleSystem.cpp:
	* TextureTransform3D.cpp:
	* NurbsSurfaceInterpolator.cpp:
	* Matrix3VertexAttribute.cpp:
	* Matrix4VertexAttribute.cpp:
	* SurfaceEmitter.cpp:
	* BooleanSequencer.cpp:
	* CollisionSpace.cpp:
	* IndexedTriangleFanSet.cpp:
	* IntegerSequencer.cpp:
	* NurbsPositionInterpolator.cpp:
	* PolylineEmitter.cpp:
	* MultiTextureTransform.cpp:
	* TextureCoordinate4D.cpp:
	* TextureCoordinate3D.cpp:
	* UniversalJoint.cpp:
	* ColorInterpolator.cpp:
	* Background.cpp:
	* NormalInterpolator.cpp:
	* ScalarInterpolator.cpp:
	* ExplosionEmitter.cpp:
	* WindPhysicsModel.cpp:
	* CollidableShape.cpp:
	* CollisionSensor.cpp:
	* TouchSensor.cpp:
	* MultiTextureCoordinate.cpp:
	* PlaneSensor.cpp:
	* CollidableOffset.cpp:
	* IndexedTriangleStripSet.cpp:
	* X3DFogObject.cpp:
	* SphereSensor.cpp:
	* PositionInterpolator.cpp:
	* GeoPositionInterpolator.cpp:
	* FogCoordinate.cpp:
	* NurbsOrientationInterpolator.cpp:
	* ProximitySensor.cpp:
	* BoundedPhysicsModel.cpp:
	* CylinderSensor.cpp:
	* GravityPhysicsModel.cpp:
	* TransformSensor.cpp:
	* VisibilitySensor.cpp:
	* BindableNodeStack.h:
	* CoordinateInterpolator.cpp:
	* CollisionCollection.cpp:
	* ImageCubeMapTexture.cpp:
	* TextureTransformMatrix3D.cpp:
	* TextureCoordinateGenerator.cpp:
	* PositionInterpolator2D.cpp:
	* RigidBodyCollection.cpp:
	* SingleAxisHingeJoint.cpp:
	* DoubleAxisHingeJoint.cpp:
	* OrientationInterpolator.cpp:
	* TextureBackground.cpp:
	* CoordinateInterpolator2D.cpp:
	* SplineScalarInterpolator.cpp:
	* ComposedCubeMapTexture.cpp:
	* SplinePositionInterpolator.cpp:
	* GeneratedCubeMapTexture.cpp:
	* SquadOrientationInterpolator.cpp:
	* SplinePositionInterpolator2D.cpp: 

2012-10-11  Holger Seelig  <holger.seelig@yahoo.de>

	* Route.cpp:
	* Parser.cpp:
	* Scene.cpp:
	* Browser.cpp:
	* Proto.cpp:
	* World.cpp:
	* X3DBasicNode.h:
	* X3DBasicNode.cpp:
	* Statistics.cpp:
	* MotionBlur.cpp:
	* Text.cpp:
	* ExternProto.cpp:
	* Sound.cpp:
	* Shape.cpp:
	* BrowserProperties.h:
	* Layout.cpp:
	* SignalPdu.cpp:
	* Group.cpp:
	* Layer.cpp:
	* ProfileInfo.cpp:
	* WorldInfo.cpp:
	* FontStyle.cpp:
	* NurbsSet.cpp:
	* Material.cpp:
	* Box.cpp:
	* LOD.cpp:
	* Contour2D.cpp:
	* AudioClip.cpp:
	* ReceiverPdu.cpp:
	* TimeSensor.cpp:
	* Color.cpp:
	* Cone.cpp:
	* SupportedNodes.h:
	* Switch.cpp:
	* MetadataSet.cpp:
	* RenderingProperties.cpp:
	* NurbsCurve.cpp:
	* Script.cpp:
	* HAnimSite.cpp:
	* ComponentInfo.cpp:
	* Appearance.cpp:
	* Arc2D.cpp:
	* Normal.cpp:
	* JavaScriptEngine.cpp:
	* LayerSet.cpp:
	* Viewport.cpp:
	* MetadataBool.cpp:
	* Anchor.cpp:
	* LineSet.cpp:
	* SupportedNodes.cpp:
	* Disk2D.cpp:
	* Inline.cpp:
	* Sphere.cpp:
	* GeoLOD.cpp:
	* HAnimJoint.cpp:
	* MetadataFloat.cpp:
	* EspduTransform.cpp:
	* ScreenGroup.cpp:
	* LayoutGroup.cpp:
	* LayoutLayer.cpp:
	* TransmitterPdu.cpp:
	* SpotLight.cpp:
	* NurbsCurve2D.cpp:
	* PointSet.cpp:
	* ShaderPart.cpp:
	* Transform.cpp:
	* CADPart.cpp:
	* Cylinder.cpp:
	* MetadataString.cpp:
	* HAnimSegment.cpp:
	* MetadataDouble.cpp:
	* QuadSet.cpp:
	* PointLight.cpp:
	* ClipPlane.cpp:
	* Circle2D.cpp:
	* ColorRGBA.cpp:
	* CADFace.cpp:
	* GeoOrigin.cpp:
	* Viewpoint.cpp:
	* Billboard.cpp:
	* Collision.cpp:
	* Coordinate.cpp:
	* StaticGroup.cpp:
	* DISEntityManager.cpp:
	* Extrusion.cpp:
	* FillProperties.cpp:
	* LineProperties.cpp:
	* MetadataInteger.cpp:
	* CADLayer.cpp:
	* HAnimHumanoid.cpp:
	* TriangleSet.cpp:
	* HAnimDisplacer.cpp:
	* ShaderProgram.cpp:
	* ProgramShader.cpp:
	* ColorDamper.cpp:
	* LoadSensor.cpp:
	* ArcClose2D.cpp:
	* PickableGroup.cpp:
	* Polyline2D.cpp:
	* PixelTexture.cpp:
	* MultiTexture.cpp:
	* ImageTexture.cpp:
	* MovieTexture.cpp:
	* ComposedShader.cpp:
	* LinePickSensor.cpp:
	* PackagedShader.cpp:
	* ScalarChaser.cpp:
	* ScreenFontStyle.cpp:
	* GeoLocation.cpp:
	* GeoMetadata.cpp:
	* CoordinateDouble.cpp:
	* Polypoint2D.cpp:
	* Rectangle2D.cpp:
	* TwoSidedMaterial.cpp:
	* NurbsPatchSurface.cpp:
	* CADAssembly.cpp:
	* NurbsSweptSurface.cpp:
	* ContourPolyline2D.cpp:
	* PointPickSensor.cpp:
	* GeoTransform.cpp:
	* NurbsSwungSurface.cpp:
	* GeoViewpoint.cpp:
	* Fog.cpp:
	* PositionDamper.cpp:
	* PositionChaser.cpp:
	* GeoCoordinate.cpp:
	* DISEntityTypeMapping.cpp:
	* Contact.cpp:
	* ElevationGrid.cpp:
	* TriangleSet2D.cpp:
	* IndexedLineSet.cpp:
	* TriangleFanSet.cpp:
	* VolumePickSensor.cpp:
	* DirectionalLight.cpp:
	* NavigationInfo.cpp:
	* IndexedFaceSet.cpp:
	* KeySensor.cpp:
	* ViewpointGroup.cpp:
	* X3DPrototypeInstance.cpp:
	* GeoTouchSensor.cpp:
	* NurbsTrimmedSurface.cpp:
	* OrthoViewpoint.cpp:
	* PositionChaser2D.cpp:
	* TexCoordDamper2D.cpp:
	* TextureTransform.cpp:
	* IndexedQuadSet.cpp:
	* TimeTrigger.cpp:
	* CoordinateDamper.cpp:
	* ImageTexture3D.cpp:
	* PixelTexture3D.cpp:
	* BallJoint.cpp:
	* RigidBody.cpp:
	* PositionDamper2D.cpp:
	* TriangleStripSet.cpp:
	* OrientationChaser.cpp:
	* ConeEmitter.cpp:
	* GeoElevationGrid.cpp:
	* PrimitivePickSensor.cpp:
	* OrientationDamper.cpp:
	* MotorJoint.cpp:
	* TextureCoordinate.cpp:
	* TextureProperties.cpp:
	* EaseInEaseOut.cpp:
	* FloatVertexAttribute.cpp:
	* BooleanToggle.cpp:
	* BooleanFilter.cpp:
	* NurbsTextureCoordinate.cpp:
	* IndexedTriangleSet.cpp:
	* PointEmitter.cpp:
	* SliderJoint.cpp:
	* StringSensor.cpp:
	* LocalFog.cpp:
	* ComposedTexture3D.cpp:
	* BooleanTrigger.cpp:
	* IntegerTrigger.cpp:
	* GeoProximitySensor.cpp:
	* VolumeEmitter.cpp:
	* ParticleSystem.cpp:
	* Matrix3VertexAttribute.cpp:
	* TextureTransform3D.cpp:
	* Matrix4VertexAttribute.cpp:
	* SurfaceEmitter.cpp:
	* NurbsSurfaceInterpolator.cpp:
	* IntegerSequencer.cpp:
	* CollisionSpace.cpp:
	* UniversalJoint.cpp:
	* Background.cpp:
	* IndexedTriangleFanSet.cpp:
	* PolylineEmitter.cpp:
	* TextureCoordinate4D.cpp:
	* BooleanSequencer.cpp:
	* NurbsPositionInterpolator.cpp:
	* ColorInterpolator.cpp:
	* MultiTextureTransform.cpp:
	* TextureCoordinate3D.cpp:
	* ExplosionEmitter.cpp:
	* WindPhysicsModel.cpp:
	* CollisionSensor.cpp:
	* CollidableShape.cpp:
	* NormalInterpolator.cpp:
	* ScalarInterpolator.cpp:
	* PlaneSensor.cpp:
	* TouchSensor.cpp:
	* MultiTextureCoordinate.cpp:
	* SphereSensor.cpp:
	* CollidableOffset.cpp:
	* IndexedTriangleStripSet.cpp:
	* GeoPositionInterpolator.cpp:
	* NurbsOrientationInterpolator.cpp:
	* FogCoordinate.cpp:
	* PositionInterpolator.cpp:
	* CylinderSensor.cpp:
	* BoundedPhysicsModel.cpp:
	* ProximitySensor.cpp:
	* GravityPhysicsModel.cpp:
	* TransformSensor.cpp:
	* RigidBodyCollection.cpp:
	* TextureTransformMatrix3D.cpp:
	* ImageCubeMapTexture.cpp:
	* TextureCoordinateGenerator.cpp:
	* VisibilitySensor.cpp:
	* PositionInterpolator2D.cpp:
	* CoordinateInterpolator.cpp:
	* CollisionCollection.cpp:
	* SingleAxisHingeJoint.cpp:
	* DoubleAxisHingeJoint.cpp:
	* OrientationInterpolator.cpp:
	* SplineScalarInterpolator.cpp:
	* TextureBackground.cpp:
	* CoordinateInterpolator2D.cpp:
	* ComposedCubeMapTexture.cpp:
	* SplinePositionInterpolator.cpp:
	* GeneratedCubeMapTexture.cpp:
	* SplinePositionInterpolator2D.cpp:
	* SquadOrientationInterpolator.cpp: 

2012-10-11  Holger Seelig  <holger.seelig@yahoo.de>

	* World.cpp:
	* X3DExecutionContext.h:
	* Inline.cpp:
	* X3DExecutionContext.cpp: 

2012-10-11  Holger Seelig  <holger.seelig@yahoo.de>

	* Image.h:
	* Parser.cpp:
	* RouteArray.h:
	* NodeArray.h:
	* ProtoArray.h:
	* BasicNodeArray.h:
	* RouteArray.cpp:
	* NodeArray.cpp:
	* ProtoArray.cpp:
	* BasicNodeArray.cpp:
	* ExternProtoArray.h:
	* ExternProtoArray.cpp:
	* FieldTypesArray.h:
	* X3DExecutionContext.h:
	* SupportedNodes.cpp:
	* Inline.cpp:
	* ProfileInfoArray.h:
	* FieldTypesArray.cpp:
	* X3DExecutionContext.cpp:
	* SupportedFields.cpp:
	* X3DBindableNode.h:
	* ComponentInfoArray.h:
	* ProfileInfoArray.cpp:
	* SupportedProfiles.cpp:
	* ComponentInfoArray.cpp:
	* Fog.h:
	* SupportedComponents.cpp:
	* NavigationInfo.h:
	* IndexedLineSet.cpp:
	* Fog.cpp:
	* X3DGeometryNode.cpp:
	* NavigationInfo.cpp:
	* X3DViewpointNode.h:
	* X3DTexture2DNode.cpp:
	* X3DViewpointNode.cpp:
	* ScalarInterpolator.cpp:
	* X3DBackgroundNode.h:
	* X3DBackgroundNode.cpp: 

2012-10-11  Holger Seelig  <holger.seelig@yahoo.de>

	* Image.h:
	* SFVec4.h:
	* SFVec2.h:
	* SFVec3.h:
	* Numbers.h:
	* Image.cpp:
	* Geometry.h:
	* X3DBaseNode.h:
	* X3DBrowser.h:
	* SFRotation4.h:
	* X3DBrowser.cpp:
	* Layer.cpp:
	* Sphere.cpp:
	* Extrusion.cpp:
	* X3DGroupingNode.cpp:
	* X3DViewpointNode.h:
	* IndexedFaceSet.cpp:
	* ColorInterpolator.cpp:
	* OrientationInterpolator.cpp: 

2012-10-11  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.pidb:
	* Parser.h:
	* Scene.h:
	* Parser.cpp:
	* X3DBaseNode.h:
	* Scene.cpp:
	* Proto.cpp:
	* World.cpp:
	* X3DScene.h:
	* X3DScene.cpp:
	* X3DRenderer.h:
	* X3DNode.h:
	* X3DRenderer.cpp:
	* X3DNode.cpp:
	* LayerSet.h:
	* X3DExecutionContext.h:
	* LayerSet.cpp:
	* X3DExecutionContext.cpp:
	* X3DBindableNode.h:
	* X3DLayerNode.h:
	* Viewpoint.cpp:
	* X3DBindableNode.cpp:
	* X3DLightNode.cpp:
	* X3DLayerNode.cpp:
	* NavigationInfo.h:
	* X3DViewpointNode.h:
	* X3DViewpointNode.cpp:
	* LocalFog.cpp:
	* X3DBackgroundNode.cpp: 

2012-10-11  Holger Seelig  <holger.seelig@yahoo.de>

	* Viewer.cpp:
	* X3DBrowser.h:
	* X3DBrowser.cpp:
	* X3DRenderer.cpp:
	* LayerSet.cpp:
	* Viewpoint.h:
	* X3DLayerNode.h:
	* Viewpoint.cpp:
	* X3DLayerNode.cpp:
	* NavigationInfo.cpp:
	* X3DViewpointNode.h:
	* X3DViewpointNode.cpp:
	* ProximitySensor.cpp:
	* X3DBackgroundNode.cpp: 

2012-10-11  Holger Seelig  <holger.seelig@yahoo.de>

	* Parser.h:
	* Parser.cpp:
	* X3DBaseNode.h:
	* Inline.cpp:
	* X3DBindableNode.h:
	* X3DBindableNode.cpp: 

2012-10-11  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* X3DOutput.h:
	* X3DBaseNode.h:
	* X3DBrowser.h:
	* X3DBrowser.cpp:
	* X3DRenderer.cpp:
	* X3DBindableNode.h:
	* X3DLayerNode.h:
	* X3DBindableNode.cpp:
	* X3DLayerNode.cpp:
	* Fog.h:
	* NavigationInfo.h:
	* Fog.cpp:
	* NavigationInfo.cpp:
	* X3DViewpointNode.h:
	* X3DViewpointNode.cpp:
	* LocalFog.cpp:
	* BindableNodeStack.h:
	* X3DBackgroundNode.h:
	* X3DBackgroundNode.cpp:
	* X3DBindableNodeStack.h: 

2012-10-09  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DOutput.h:
	* SFRotation4.h: 

2012-10-09  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.pidb:
	* libtitania-x3d.md.pc:
	* libtitania-x3d.cproj:
	* SFVec4.h:
	* SFVec3.h:
	* SFVec2.h:
	* Parser.cpp:
	* Viewer.cpp:
	* X3DBrowser.h:
	* X3DBrowser.cpp:
	* X3DRenderer.cpp:
	* Generator.cpp:
	* Box.cpp:
	* Viewport.h:
	* X3DExecutionContext.h:
	* X3DBindableNode:
	* Sphere.cpp:
	* LayerSet.cpp:
	* Viewport.cpp:
	* Extrusion.h:
	* X3DBindableNode.h:
	* X3DExecutionContext.cpp:
	* X3DLayerNode.h:
	* X3DBindableNode.cpp:
	* Viewpoint.cpp:
	* X3DLayerNode.cpp:
	* Fog.h:
	* NavigationInfo.h:
	* ElevationGrid.cpp:
	* Fog.cpp:
	* IndexedFaceSet.cpp:
	* NavigationInfo.cpp:
	* X3DViewpointNode.cpp:
	* LocalFog.cpp:
	* X3DFogObject.h:
	* X3DFogObject.cpp:
	* ProximitySensor.cpp:
	* X3DBackgroundNode.h:
	* X3DBackgroundNode.cpp:
	* X3DBindableNodeStack.h: 

2012-10-01  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.pidb:
	* libtitania-x3d.md.pc:
	* Numbers.h:
	* Geometry.h:
	* Matrix.h:
	* X3DBrowser.h:
	* X3DBrowser.cpp:
	* X3DTexture2DNode.cpp:
	* ColorInterpolator.cpp:
	* OrientationInterpolator.cpp: 

2012-10-01  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* Types.h:
	* SFVec4.h:
	* Numbers.h:
	* Geometry.h:
	* SFVec3.h:
	* SFVec2.h:
	* SFTime.h:
	* Geometry.h:
	* SFColor.h:
	* X3DClock.h:
	* SFString.h:
	* Browser.h:
	* SFMatrix3.h:
	* X3DScalar.h:
	* SFMatrix4.h:
	* X3DClock.cpp:
	* SteadyClock.h:
	* SystemClock.h:
	* SFColorRGBA.h:
	* SFRotation4.h:
	* SystemClock.cpp:
	* SteadyClock.cpp:
	* ViewVolume.h:
	* ViewVolume.cpp:
	* ShapeContainer.h:
	* X3DExecutionContext.h:
	* X3DShapeNode.cpp:
	* X3DLayerNode.h:
	* X3DBoundedObject.h:
	* X3DGeometryNode.h:
	* ProximitySensor.cpp: 

2012-09-30  Holger Seelig  <holger.seelig@yahoo.de>

	* findNode:
	* libtitania-x3d.cproj:
	* JavaScript.h:
	* Hit.h:
	* JavaScript.cpp:
	* SFNode.h:
	* MFNode.h:
	* X3DChild.h:
	* Parser.h:
	* Route.h:
	* X3DObject.h:
	* Router.h:
	* ObjectSet.h:
	* MFNode.cpp:
	* Browser.h:
	* Parser.cpp:
	* X3DChild.cpp:
	* World.h:
	* Route.cpp:
	* Proto.h:
	* SFNode.cpp:
	* X3DBaseNode.h:
	* Router.cpp:
	* X3DChildSet.h:
	* ObjectSet.cpp:
	* X3DParser.h:
	* BaseNodeSet.h:
	* X3DObjectSet.h:
	* World.cpp:
	* Browser.cpp:
	* X3DBaseNode.h:
	* Scene.cpp:
	* Proto.cpp:
	* MotionBlur.h:
	* X3DBaseNode.cpp:
	* Statistics.h:
	* BaseNodeSet.cpp:
	* X3DBasicNode.h:
	* X3DParser.cpp:
	* X3DProto.h:
	* X3DBrowser.h:
	* X3DScene.h:
	* X3DChildSet.cpp:
	* X3DBaseNode.cpp:
	* BaseNodeArray.h:
	* NodeArray.h:
	* X3DConstants.cpp:
	* X3DObjectSet.cpp:
	* X3DBasicNode.cpp:
	* MotionBlur.cpp:
	* X3DProto.cpp:
	* BasicNodeArray.h:
	* Text.h:
	* X3DScene.cpp:
	* X3DBrowser.cpp:
	* Statistics.cpp:
	* GarbageCollector.h:
	* X3DRenderer.h:
	* Generator.h:
	* BaseNodeArray.cpp:
	* ExternProto.h:
	* NodeArray.cpp:
	* Sound.h:
	* Shape.h:
	* Text.cpp:
	* BasicNodeArray.cpp:
	* PointingDevice.h:
	* ExternProto.cpp:
	* Generator.cpp:
	* X3DRenderer.cpp:
	* X3DNode.h:
	* Layout.h:
	* Sound.cpp:
	* X3DFieldDefinition.h:
	* GarbargeCollector.cpp:
	* Shape.cpp:
	* SignalPdu.h:
	* BrowserProperties.h:
	* Box.h:
	* Group.h:
	* Material.h:
	* FontStyle.h:
	* WorldInfo.h:
	* NurbsSet.h:
	* LOD.h:
	* X3DNode.cpp:
	* Layer.h:
	* ProfileInfo.h:
	* ReceiverPdu.h:
	* AudioClip.h:
	* Cone.h:
	* SignalPdu.cpp:
	* Contour2D.h:
	* X3DFieldDefinition.cpp:
	* Layout.cpp:
	* TimeSensor.h:
	* Switch.h:
	* Color.h:
	* Material.cpp:
	* NurbsSet.cpp:
	* MetadataSet.h:
	* Normal.h:
	* Appearance.h:
	* Group.cpp:
	* Box.cpp:
	* NurbsCurve.h:
	* LOD.cpp:
	* WorldInfo.cpp:
	* FontStyle.cpp:
	* Script.h:
	* HAnimSite.h:
	* ComponentInfo.h:
	* Arc2D.h:
	* ProfileInfo.cpp:
	* Layer.cpp:
	* Switch.cpp:
	* Sphere.h:
	* TimeSensor.cpp:
	* Contour2D.cpp:
	* SupportedNodes.h:
	* Inline.h:
	* LineSet.h:
	* Cone.cpp:
	* HAnimJoint.h:
	* Color.cpp:
	* ReceiverPdu.cpp:
	* Viewport.h:
	* LayerSet.h:
	* MetadataBool.h:
	* GeoLOD.h:
	* Disk2D.h:
	* AudioClip.cpp:
	* Anchor.h:
	* NurbsCurve.cpp:
	* RenderingProperties.cpp:
	* X3DExecutionContext.h:
	* PointSet.h:
	* Normal.cpp:
	* MetadataSet.cpp:
	* ComponentInfo.cpp:
	* SpotLight.h:
	* Appearance.cpp:
	* JavaScriptEngine.cpp:
	* NurbsCurve2D.h:
	* ShaderPart.h:
	* EspduTransform.h:
	* ScreenGroup.h:
	* LayoutLayer.h:
	* Script.cpp:
	* Arc2D.cpp:
	* Transform.h:
	* MetadataFloat.h:
	* TransmitterPdu.h:
	* HAnimSite.cpp:
	* LayoutGroup.h:
	* MetadataBool.cpp:
	* Anchor.cpp:
	* Inline.cpp:
	* MetadataString.h:
	* GeoLOD.cpp:
	* MetadataDouble.h:
	* Sphere.cpp:
	* Cylinder.h:
	* LayerSet.cpp:
	* Viewport.cpp:
	* CADFace.h:
	* CADPart.h:
	* PointLight.h:
	* QuadSet.h:
	* HAnimSegment.h:
	* LineSet.cpp:
	* SupportedNodes.cpp:
	* HAnimJoint.cpp:
	* Circle2D.h:
	* ColorRGBA.h:
	* Disk2D.cpp:
	* ClipPlane.h:
	* CADLayer.h:
	* SpotLight.cpp:
	* GeoOrigin.h:
	* X3DBindableNode.h:
	* NurbsCurve2D.cpp:
	* LayoutGroup.cpp:
	* LayoutLayer.cpp:
	* PointSet.cpp:
	* FillProperties.h:
	* LineProperties.h:
	* Coordinate.h:
	* ScreenGroup.cpp:
	* Collision.h:
	* MetadataInteger.h:
	* Viewpoint.h:
	* Billboard.h:
	* StaticGroup.h:
	* Transform.cpp:
	* MetadataFloat.cpp:
	* HAnimHumanoid.h:
	* ShaderPart.cpp:
	* TransmitterPdu.cpp:
	* EspduTransform.cpp:
	* DISEntityManager.h:
	* X3DExecutionContext.cpp:
	* SupportedFields.cpp:
	* Extrusion.h:
	* MetadataString.cpp:
	* LoadSensor.h:
	* PointLight.cpp:
	* ColorDamper.h:
	* Circle2D.cpp:
	* ArcClose2D.h:
	* X3DLayerNode.h:
	* Polyline2D.h:
	* TriangleSet.h:
	* ProgramShader.h:
	* ColorRGBA.cpp:
	* PickableGroup.h:
	* ClipPlane.cpp:
	* ShaderProgram.h:
	* MetadataDouble.cpp:
	* QuadSet.cpp:
	* CADFace.cpp:
	* Cylinder.cpp:
	* CADPart.cpp:
	* HAnimSegment.cpp:
	* HAnimDisplacer.h:
	* GeoOrigin.cpp:
	* GeoMetadata.h:
	* FillProperties.cpp:
	* ComposedShader.h:
	* Extrusion.cpp:
	* MultiTexture.h:
	* GeoLocation.h:
	* LinePickSensor.h:
	* Collision.cpp:
	* MetadataInteger.cpp:
	* Viewpoint.cpp:
	* Coordinate.cpp:
	* X3DBindableNode.cpp:
	* CADLayer.cpp:
	* HAnimHumanoid.cpp:
	* LineProperties.cpp:
	* X3DMetadataObject.h:
	* DISEntityManager.cpp:
	* StaticGroup.cpp:
	* CoordinateDouble.h:
	* Rectangle2D.h:
	* Billboard.cpp:
	* TwoSidedMaterial.h:
	* MovieTexture.h:
	* PixelTexture.h:
	* ScalarChaser.h:
	* ScreenFontStyle.h:
	* Polypoint2D.h:
	* ImageTexture.h:
	* PackagedShader.h:
	* NurbsSweptSurface.h:
	* LoadSensor.cpp:
	* PointPickSensor.h:
	* HAnimDisplacer.cpp:
	* ShaderProgram.cpp:
	* ProgramShader.cpp:
	* CADAssembly.h:
	* TriangleSet.cpp:
	* ColorDamper.cpp:
	* GeoViewpoint.h:
	* Polyline2D.cpp:
	* ContourPolyline2D.h:
	* NurbsPatchSurface.h:
	* NurbsSwungSurface.h:
	* GeoTransform.h:
	* ArcClose2D.cpp:
	* PickableGroup.cpp:
	* X3DUrlObject.h:
	* PackagedShader.cpp:
	* X3DGroupingNode.h:
	* CoordinateDouble.cpp:
	* TwoSidedMaterial.cpp:
	* X3DMetadataObject.cpp:
	* ComposedShader.cpp:
	* Fog.h:
	* LinePickSensor.cpp:
	* GeoLocation.cpp:
	* GeoMetadata.cpp:
	* VolumePickSensor.h:
	* TriangleFanSet.h:
	* Rectangle2D.cpp:
	* PositionDamper.h:
	* PositionChaser.h:
	* TriangleSet2D.h:
	* ScreenFontStyle.cpp:
	* MultiTexture.cpp:
	* ElevationGrid.h:
	* ImageTexture.cpp:
	* PixelTexture.cpp:
	* ScalarChaser.cpp:
	* Contact.h:
	* DISEntityTypeMapping.h:
	* IndexedLineSet.h:
	* Polypoint2D.cpp:
	* GeoCoordinate.h:
	* MovieTexture.cpp:
	* ContourPolyline2D.cpp:
	* X3DPickableObject.h:
	* NurbsTrimmedSurface.h:
	* X3DPickSensorNode.h:
	* CosmoWorlds.wrl:
	* IndexedFaceSet.h:
	* PointPickSensor.cpp:
	* ViewpointGroup.h:
	* GeoViewpoint.cpp:
	* OrthoViewpoint.h:
	* GeoTouchSensor.h:
	* NavigationInfo.h:
	* KeySensor.h:
	* CADAssembly.cpp:
	* X3DPrototypeInstance.h:
	* DirectionalLight.h:
	* X3DBoundedObject.h:
	* NurbsSwungSurface.cpp:
	* NurbsPatchSurface.cpp:
	* GeoTransform.cpp:
	* X3DUrlObject.cpp:
	* NurbsSweptSurface.cpp:
	* IndexedQuadSet.h:
	* Contact.cpp:
	* RigidBody.h:
	* VolumePickSensor.cpp:
	* Fog.cpp:
	* TriangleSet2D.cpp:
	* GeoCoordinate.cpp:
	* TexCoordDamper2D.h:
	* X3DTexture2DNode.h:
	* TimeTrigger.h:
	* PositionDamper.cpp:
	* DISEntityTypeMapping.cpp:
	* TextureTransform.h:
	* CoordinateDamper.h:
	* PixelTexture3D.h:
	* PositionChaser.cpp:
	* PositionChaser2D.h:
	* ElevationGrid.cpp:
	* PositionDamper2D.h:
	* ImageTexture3D.h:
	* BallJoint.h:
	* TriangleStripSet.h:
	* TriangleFanSet.cpp:
	* IndexedLineSet.cpp:
	* OrthoViewpoint.cpp:
	* X3DBoundedObject.cpp:
	* TextureCoordinate.h:
	* IndexedFaceSet.cpp:
	* KeySensor.cpp:
	* ViewpointGroup.cpp:
	* MotorJoint.h:
	* OrientationDamper.h:
	* DirectionalLight.cpp:
	* TextureProperties.h:
	* NavigationInfo.cpp:
	* OrientationChaser.h:
	* X3DPickableObject.cpp:
	* GeoElevationGrid.h:
	* GeoTouchSensor.cpp:
	* EaseInEaseOut.h:
	* X3DPrototypeInstance.cpp:
	* NurbsTrimmedSurface.cpp:
	* PrimitivePickSensor.h:
	* ConeEmitter.h:
	* ImageTexture3D.cpp:
	* CoordinateDamper.cpp:
	* TexCoordDamper2D.cpp:
	* IndexedTriangleSet.h:
	* TextureTransform.cpp:
	* TimeTrigger.cpp:
	* PointEmitter.h:
	* BooleanToggle.h:
	* X3DTexture3DNode.h:
	* PixelTexture3D.cpp:
	* TriangleStripSet.cpp:
	* FloatVertexAttribute.h:
	* BooleanFilter.h:
	* NurbsTextureCoordinate.h:
	* SliderJoint.h:
	* StringSensor.h:
	* IndexedQuadSet.cpp:
	* PositionChaser2D.cpp:
	* PositionDamper2D.cpp:
	* RigidBody.cpp:
	* BallJoint.cpp:
	* IntegerTrigger.h:
	* BooleanTrigger.h:
	* OrientationDamper.cpp:
	* ComposedTexture3D.h:
	* ConeEmitter.cpp:
	* MotorJoint.cpp:
	* VolumeEmitter.h:
	* GeoProximitySensor.h:
	* LocalFog.h:
	* PrimitivePickSensor.cpp:
	* TextureCoordinate.cpp:
	* TextureProperties.cpp:
	* GeoElevationGrid.cpp:
	* EaseInEaseOut.cpp:
	* OrientationChaser.cpp:
	* PointEmitter.cpp:
	* NurbsSurfaceInterpolator.h:
	* Matrix3VertexAttribute.h:
	* Matrix4VertexAttribute.h:
	* StringSensor.cpp:
	* ParticleSystem.h:
	* FloatVertexAttribute.cpp:
	* TextureTransform3D.h:
	* BooleanFilter.cpp:
	* SurfaceEmitter.h:
	* IndexedTriangleSet.cpp:
	* NurbsTextureCoordinate.cpp:
	* BooleanToggle.cpp:
	* SliderJoint.cpp:
	* BooleanSequencer.h:
	* PolylineEmitter.h:
	* VolumeEmitter.cpp:
	* LocalFog.cpp:
	* Background.h:
	* GeoProximitySensor.cpp:
	* IndexedTriangleFanSet.h:
	* TextureCoordinate3D.h:
	* ComposedTexture3D.cpp:
	* CollisionSpace.h:
	* MultiTextureTransform.h:
	* ColorInterpolator.h:
	* UniversalJoint.h:
	* TextureCoordinate4D.h:
	* IntegerSequencer.h:
	* BooleanTrigger.cpp:
	* NurbsPositionInterpolator.h:
	* IntegerTrigger.cpp:
	* Matrix4VertexAttribute.cpp:
	* Matrix3VertexAttribute.cpp:
	* MultiTextureCoordinate.h:
	* ParticleSystem.cpp:
	* SurfaceEmitter.cpp:
	* ExplosionEmitter.h:
	* CollidableShape.h:
	* ScalarInterpolator.h:
	* TextureTransform3D.cpp:
	* NormalInterpolator.h:
	* CollisionSensor.h:
	* NurbsSurfaceInterpolator.cpp:
	* PlaneSensor.h:
	* TouchSensor.h:
	* WindPhysicsModel.h:
	* BooleanSequencer.cpp:
	* ColorInterpolator.cpp:
	* IntegerSequencer.cpp:
	* SphereSensor.h:
	* MultiTextureTransform.cpp:
	* PolylineEmitter.cpp:
	* X3DNurbsSurfaceGeometryNode.h:
	* NurbsPositionInterpolator.cpp:
	* UniversalJoint.cpp:
	* IndexedTriangleStripSet.h:
	* TextureCoordinate3D.cpp:
	* TextureCoordinate4D.cpp:
	* IndexedTriangleFanSet.cpp:
	* X3DFogObject.h:
	* X3DComposedGeometryNode.h:
	* Background.cpp:
	* CollidableOffset.h:
	* CollisionSpace.cpp:
	* X3DRigidJointNode.h:
	* NormalInterpolator.cpp:
	* PositionInterpolator.h:
	* GeoPositionInterpolator.h:
	* PlaneSensor.cpp:
	* WindPhysicsModel.cpp:
	* CollidableShape.cpp:
	* TouchSensor.cpp:
	* MultiTextureCoordinate.cpp:
	* FogCoordinate.h:
	* ScalarInterpolator.cpp:
	* ExplosionEmitter.cpp:
	* CollisionSensor.cpp:
	* NurbsOrientationInterpolator.h:
	* CylinderSensor.h:
	* CollidableOffset.cpp:
	* GravityPhysicsModel.h:
	* SphereSensor.cpp:
	* BoundedPhysicsModel.h:
	* IndexedTriangleStripSet.cpp:
	* X3DProgrammableShaderObject.h:
	* TransformSensor.h:
	* ProximitySensor.h:
	* X3DFogObject.cpp:
	* VisibilitySensor.h:
	* TextureCoordinateGenerator.h:
	* RigidBodyCollection.h:
	* NurbsOrientationInterpolator.cpp:
	* FogCoordinate.cpp:
	* GeoPositionInterpolator.cpp:
	* PositionInterpolator.cpp:
	* PositionInterpolator2D.h:
	* TextureTransformMatrix3D.h:
	* CollisionCollection.h:
	* CoordinateInterpolator.h:
	* ImageCubeMapTexture.h:
	* OrientationInterpolator.h:
	* ProximitySensor.cpp:
	* TransformSensor.cpp:
	* GravityPhysicsModel.cpp:
	* DoubleAxisHingeJoint.h:
	* CylinderSensor.cpp:
	* BoundedPhysicsModel.cpp:
	* SingleAxisHingeJoint.h:
	* X3DProgrammableShaderObject.cpp:
	* TextureBackground.h:
	* ImageCubeMapTexture.cpp:
	* TextureTransformMatrix3D.cpp:
	* CoordinateInterpolator.cpp:
	* VisibilitySensor.cpp:
	* RigidBodyCollection.cpp:
	* PositionInterpolator2D.cpp:
	* SplineScalarInterpolator.h:
	* CollisionCollection.cpp:
	* TextureCoordinateGenerator.cpp:
	* CoordinateInterpolator2D.h:
	* DoubleAxisHingeJoint.cpp:
	* OrientationInterpolator.cpp:
	* SingleAxisHingeJoint.cpp:
	* ComposedCubeMapTexture.h:
	* CoordinateInterpolator2D.cpp:
	* SplineScalarInterpolator.cpp:
	* SplinePositionInterpolator.h:
	* TextureBackground.cpp:
	* GeneratedCubeMapTexture.h:
	* ComposedCubeMapTexture.cpp:
	* SplinePositionInterpolator2D.h:
	* SplinePositionInterpolator.cpp:
	* SquadOrientationInterpolator.h:
	* GeneratedCubeMapTexture.cpp:
	* SquadOrientationInterpolator.cpp:
	* SplinePositionInterpolator2D.cpp: 

2012-09-30  Holger Seelig  <holger.seelig@yahoo.de>

	* MFNode.h:
	* Scene.h:
	* Proto.cpp:
	* X3DBaseNode.h:
	* Scene.cpp:
	* X3DBaseNode.cpp:
	* BaseNodeArray.h:
	* X3DScene.cpp:
	* X3DBrowser.cpp:
	* SupportedNodes.h:
	* SupportedFields.h:
	* X3DExecutionContext.cpp:
	* X3DUrlObject.h:
	* SupportedComponents.cpp:
	* X3DPrototypeInstance.cpp: 

2012-09-30  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DBrowser.h:
	* Inline.cpp:
	* X3DUrlObject.h:
	* ImageTexture.cpp:
	* X3DUrlObject.cpp: 

2012-09-30  Holger Seelig  <holger.seelig@yahoo.de>

	* Scene.cpp:
	* X3DScene.h:
	* X3DScene.cpp:
	* X3DBrowser.cpp:
	* X3DExecutionContext.h:
	* X3DExecutionContext.cpp: 

2012-09-30  Holger Seelig  <holger.seelig@yahoo.de>

	* Proto.cpp: 

2012-09-30  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DBaseNode.cpp: 

2012-09-30  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DPrototypeInstance.h:
	* X3DPrototypeInstance.cpp: 

2012-09-30  Holger Seelig  <holger.seelig@yahoo.de>

	* GarbargeCollector.cpp: 

2012-09-30  Holger Seelig  <holger.seelig@yahoo.de>

	* Route.cpp: 

2012-09-30  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* Parser.cpp:
	* FieldIndex.h:
	* FieldIndex.cpp:
	* X3DBrowser.h:
	* BaseNodeArray.h:
	* X3DBrowser.cpp:
	* BaseNodeArray.cpp:
	* NodeIndex.h:
	* NodeIndex.cpp:
	* ProfileIndex.h:
	* BaseNodeIndex.h:
	* ComponentIndex.h:
	* SupportedNodes.h:
	* ProfileIndex.cpp:
	* SupportedFields.h:
	* BaseNodeIndex.cpp:
	* FieldTypesArray.h:
	* X3DExecutionContext.h:
	* ComponentIndex.cpp:
	* ProfileInfoArray.h:
	* SupportedNodes.cpp:
	* SupportedFields.cpp:
	* SupportedProfiles.h:
	* X3DExecutionContext.cpp:
	* FieldTypesArray.cpp:
	* ComponentInfoArray.h:
	* ProfileInfoArray.cpp:
	* SupportedProfiles.cpp:
	* SupportedComponents.h:
	* ComponentInfoArray.cpp:
	* SupportedComponents.cpp: 

2012-09-30  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* Parser.h:
	* Route.cpp:
	* Scene.h:
	* Parser.cpp:
	* Scene.cpp:
	* Proto.cpp:
	* X3DScene.h:
	* X3DBaseNode.cpp:
	* X3DScene.cpp:
	* X3DBrowser.cpp:
	* ExternProto.cpp:
	* GarbargeCollector.cpp:
	* BaseNodeIndex.h:
	* SupportedNodes.h:
	* BaseNodeIndex.cpp:
	* X3DExecutionContext.h:
	* X3DExecutionContext.cpp:
	* X3DPrototypeInstance.h:
	* X3DPrototypeInstance.cpp:
	* Background.cpp: 

2012-09-29  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DExecutionContext.cpp: 

2012-09-29  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* Parser.cpp:
	* Scene.h:
	* Proto.cpp:
	* Scene.cpp:
	* NodeArray.h:
	* NodeArray.cpp:
	* ImportedNode.h:
	* ExportedNode.h:
	* ImportedNode.cpp:
	* ExportedNode.cpp:
	* ExportedNodeArray.h:
	* ImportedNodeArray.h:
	* Inline.h:
	* ImportedNodeArray.cpp:
	* X3DExecutionContext.h:
	* ExportedNodeArray.cpp:
	* X3DExecutionContext.cpp: 

2012-09-29  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.pidb:
	* libtitania-x3d.cproj:
	* Type.h:
	* Type.cpp:
	* X3DType.h:
	* SFNode.h:
	* Route.h:
	* X3DField.h:
	* X3DObject.h:
	* X3DType.cpp:
	* Route.cpp:
	* X3DObject.cpp:
	* X3DBaseNode.h:
	* X3DBaseNode.cpp:
	* ExternProto.cpp:
	* Generator.cpp:
	* ProfileInfo.h:
	* InterfaceDeclaration.h:
	* ProfileInfo.cpp:
	* ComponentInfo.h:
	* InterfaceDeclaration.cpp:
	* ComponentInfo.cpp:
	* X3DExecutionContext.h:
	* X3DPrototypeInstance.h:
	* X3DPrototypeInstance.cpp: 

2012-09-29  Holger Seelig  <holger.seelig@yahoo.de>

	* geturl.h:
	* RouteArray.h:
	* RouteArray.cpp:
	* geturl.cpp:
	* X3DExecutionContext.h:
	* X3DExecutionContext.cpp:
	* X3DUrlObject.h:
	* X3DUrlObject.cpp: 

2012-09-28  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.pidb:
	* ProtoArray.h:
	* ProtoArray.cpp:
	* ExternProtoArray.h:
	* ExternProtoArray.cpp:
	* X3DExecutionContext.h:
	* X3DExecutionContext.cpp: 

2012-09-27  Holger Seelig  <holger.seelig@yahoo.de>

	* MFNode.h:
	* SFVec2.h:
	* SFVec3.h:
	* SFVec3.cpp:
	* MFNode.cpp:
	* SFVec4.cpp:
	* SFVec2.cpp:
	* X3DScalar.cpp:
	* SFMatrix4.cpp:
	* SFMatrix3.cpp:
	* RequesterStack.h:
	* SFRotation4.cpp:
	* NodeIndex.h:
	* InterfaceDeclaration.h:
	* ShapeContainer.cpp:
	* ProfileInfo.cpp:
	* SupportedNodes.h:
	* ComponentInfo.cpp:
	* X3DExecutionContext.h:
	* SupportedProfiles.h: 

2012-09-27  Holger Seelig  <holger.seelig@yahoo.de>

	* MFNode.cpp:
	* Route.cpp: 

2012-09-27  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* Parser.h:
	* Parser.cpp:
	* FieldIndex.h:
	* FieldIndex.cpp:
	* X3DBrowser.h:
	* X3DBrowser.cpp:
	* SupportedNodes.h:
	* SupportedFields.h:
	* FieldTypesIndex.h:
	* SupportedNodes.cpp:
	* X3DExecutionContext.cpp:
	* FieldTypesIndex.cpp:
	* SupportedFields.cpp:
	* SupportedProfiles.cpp: 

2012-09-27  Holger Seelig  <holger.seelig@yahoo.de>

	* ProfileInfo.cpp: 

2012-09-27  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* X3DOutput.h:
	* Parser.cpp:
	* RequesterId.h:
	* Scene.cpp:
	* RequesterList.h:
	* RequesterStack.h:
	* RequesterList.cpp:
	* X3DBrowser.cpp:
	* RequesterStack.cpp:
	* ProfileInfo.h:
	* ProfileIndex.h:
	* ProfileInfo.cpp:
	* ComponentIndex.h:
	* ComponentInfo.cpp:
	* X3DExecutionContext.h:
	* ProfileInfoArray.h:
	* X3DExecutionContext.cpp:
	* SupportedProfiles.h:
	* ComponentInfoArray.h:
	* SupportedProfiles.cpp:
	* SupportedComponents.h:
	* SupportedComponents.cpp: 

2012-09-27  Holger Seelig  <holger.seelig@yahoo.de>

	* ProfileIndex.h:
	* ProfileIndex.cpp:
	* ComponentIndex.h:
	* ComponentIndex.cpp:
	* ProfileInfoArray.h:
	* SupportedProfiles.h:
	* ProfileInfoArray.cpp:
	* ComponentInfoArray.h:
	* SupportedComponents.h:
	* ComponentInfoArray.cpp: 

2012-09-27  Holger Seelig  <holger.seelig@yahoo.de>

	* NodeIndex.h:
	* NodeIndex.cpp:
	* FieldTypesIndex.h:
	* ProfileInfoArray.h:
	* FieldTypesIndex.cpp:
	* ComponentInfoArray.h:
	* ProfileInfoArray.cpp:
	* ComponentInfoArray.cpp: 

2012-09-27  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* SFNode.h:
	* MFNode.h:
	* X3DField.h:
	* X3DBrowser.h:
	* X3DConstants.cpp:
	* X3DBrowser.cpp:
	* NodeIndex.h:
	* NodeIndex.cpp:
	* X3DNodeIndex.h:
	* X3DNodeIndex.cpp:
	* SupportedNodes.h:
	* SupportedNodes.cpp:
	* SupportedProfiles.h:
	* SupportedProfiles.cpp:
	* SupportedComponents.h:
	* SupportedComponents.cpp: 

2012-09-26  Holger Seelig  <holger.seelig@yahoo.de>

	* SFVec4.h:
	* SFColor.h:
	* SFColor.cpp:
	* SFMatrix4.h:
	* SFMatrix3.h:
	* SFString.cpp:
	* SFColorRGBA.cpp: 

2012-09-26  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.pidb:
	* Fields.h:
	* libtitania-x3d.cproj:
	* SFVec3.h:
	* SFVec2.h:
	* SFTime.h:
	* MFNode.h:
	* SFNode.h:
	* SFVec4.h:
	* SFColor.h:
	* MFInt32.h:
	* SFImage.h:
	* X3DField.h:
	* SFVec4.cpp:
	* MFNode.cpp:
	* SFString.h:
	* SFVec3.cpp:
	* SFTime.cpp:
	* SFNode.cpp:
	* SFVec2.cpp:
	* SFColor.cpp:
	* ArrayTypes.h:
	* SFMatrix4.h:
	* SFImage.cpp:
	* SFMatrix3.h:
	* MFInt32.cpp:
	* X3DScalar.h:
	* X3DConstants.h:
	* X3DBaseNode.h:
	* SFString.cpp:
	* ArrayFields.h:
	* X3DConstants.h:
	* SFColorRGBA.h:
	* ArrayTypes.cpp:
	* SFMatrix3.cpp:
	* X3DScalar.cpp:
	* SFMatrix4.cpp:
	* SFRotation4.h:
	* X3DBaseNode.cpp:
	* NodeTypeArray.h:
	* X3DArrayField.h:
	* X3DConstants.cpp:
	* SFColorRGBA.cpp:
	* SFRotation4.cpp:
	* ArrayFields.cpp:
	* X3DNode.h:
	* X3DFieldDefinition.h:
	* InterfaceDeclaration.h:
	* InterfaceDeclaration.cpp:
	* X3DMetadataObject.h:
	* X3DUrlObject.h:
	* X3DBoundedObject.h:
	* X3DPickableObject.h:
	* X3DFogObject.h:
	* X3DProgrammableShaderObject.h: 

2012-09-25  Holger Seelig  <holger.seelig@yahoo.de>

	* RegEx.h:
	* Route.h:
	* Parser.h:
	* Router.h:
	* World.h:
	* Parser.cpp:
	* Proto.h:
	* X3DParser.h:
	* X3DRoute.h:
	* RouteSet.h:
	* X3DProto.h:
	* RouteArray.h:
	* ProtoArray.h:
	* DrawingArea.cpp:
	* ExportedNode.h:
	* ImportedNode.h:
	* ExternProto.cpp:
	* ProfileInfo.h:
	* ExternProtoArray.h:
	* X3DNodeIndex.h:
	* RenderingProperties.h:
	* ImportedNodeArray.h:
	* ComponentInfo.h:
	* ExportedNodeArray.h:
	* SupportedNodes.h:
	* RenderingProperties.cpp:
	* SupportedProfiles.h:
	* SupportedComponents.h: 

2012-09-25  Holger Seelig  <holger.seelig@yahoo.de>

	* Parser:
	* Routing:
	* libtitania-x3d.md.pc:
	* libtitania-x3d.cproj:
	* Execution:
	* Prototype:
	* Configuration:
	* RegEx.h:
	* Scene.h:
	* World.h:
	* Proto.h:
	* Parser.h:
	* RegEx.h:
	* Route.h:
	* Route.h:
	* Parser.h:
	* X3DRoute.h:
	* RouteSet.h:
	* Router.h:
	* RegEx.cpp:
	* Router.h:
	* Proto.h:
	* World.cpp:
	* Proto.cpp:
	* Route.cpp:
	* Scene.cpp:
	* Route.cpp:
	* World.h:
	* RegEx.cpp:
	* Parser.cpp:
	* Scene.h:
	* RouteSet.cpp:
	* Parser.cpp:
	* Router.cpp:
	* X3DProto.h:
	* X3DRoute.h:
	* RouteSet.h:
	* Router.cpp:
	* X3DParser.h:
	* Scene.cpp:
	* X3DParser.h:
	* SFString.cpp:
	* World.cpp:
	* Proto.cpp:
	* X3DParser.cpp:
	* RouteArray.h:
	* X3DBrowser.h:
	* ProtoArray.h:
	* X3DProto.h:
	* RouteArray.h:
	* X3DProto.cpp:
	* RouteSet.cpp:
	* X3DParser.cpp:
	* ProfileInfo.h:
	* ExternProto.h:
	* RouteArray.cpp:
	* X3DNodeIndex.h:
	* ProtoArray.h:
	* X3DProto.cpp:
	* ProtoArray.cpp:
	* X3DBrowser.cpp:
	* ImportedNode.h:
	* ExportedNode.h:
	* RouteArray.cpp:
	* ProfileInfo.cpp:
	* ComponentInfo.h:
	* ExternProto.cpp:
	* ExternProto.h:
	* ProtoArray.cpp:
	* ExportedNode.cpp:
	* ImportedNode.h:
	* ExportedNode.h:
	* X3DNodeIndex.cpp:
	* ImportedNode.cpp:
	* SupportedNodes.h:
	* ExternProto.cpp:
	* ComponentInfo.cpp:
	* X3DFieldDefinition.h:
	* ExportedNode.cpp:
	* ImportedNode.cpp:
	* ProfileInfoArray.h:
	* SupportedNodes.cpp:
	* ExternProtoArray.h:
	* ProfileInfo.h:
	* BrowserProperties.h:
	* SupportedProfiles.h:
	* ExportedNodeArray.h:
	* ImportedNodeArray.h:
	* ExternProtoArray.cpp:
	* X3DFieldDefinition.cpp:
	* ComponentInfoArray.h:
	* X3DNodeIndex.h:
	* ExternProtoArray.h:
	* X3DExecutionContext.h:
	* ProfileInfo.cpp:
	* ExportedNodeArray.h:
	* ComponentInfo.h:
	* ImportedNodeArray.h:
	* JavaScriptEngine.h:
	* ImportedNodeArray.cpp:
	* RenderingProperties.h:
	* SupportedProfiles.cpp:
	* SupportedComponents.h:
	* X3DProfileInfoArray.h:
	* ExportedNodeArray.cpp:
	* Inline.h:
	* ExternProtoArray.cpp:
	* ComponentInfoArray.cpp:
	* LayerSet.h:
	* X3DNodeIndex.cpp:
	* SupportedNodes.h:
	* Script.cpp:
	* ComponentInfo.cpp:
	* X3DExecutionContext.cpp:
	* X3DComponentInfoArray.h:
	* X3DProfileInfoArray.cpp:
	* ExportedNodeArray.cpp:
	* X3DExecutionContext.h:
	* SupportedComponents.cpp:
	* RenderingProperties.cpp:
	* ImportedNodeArray.cpp:
	* SupportedNodes.cpp:
	* SupportedProfiles.h:
	* X3DComponentInfoArray.cpp:
	* X3DExecutionContext.cpp:
	* ProfileInfoArray.cpp:
	* SupportedComponents.h:
	* SupportedProfiles.cpp:
	* Viewpoint.cpp:
	* X3DUrlObject.h:
	* SupportedComponents.cpp:
	* BrowserProperties.h:
	* X3DUrlObject.cpp:
	* X3DPrototypeInstance.h:
	* Fog.cpp:
	* X3DPrototypeInstance.cpp:
	* RenderingProperties.h:
	* RenderingProperties.cpp:
	* Background.cpp: 

2012-09-25  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* Properties:
	* BrowserProperties.h:
	* RenderingProperties.h:
	* RenderingProperties.cpp:
	* BrowserProperties.h:
	* RenderingProperties.h:
	* RenderingProperties.cpp: 

2012-09-25  Holger Seelig  <holger.seelig@yahoo.de>

	* findNode:
	* Scene.h:
	* Scene.cpp:
	* X3DBrowser.cpp:
	* X3DExecutionContext.h:
	* LayerSet.h:
	* X3DExecutionContext.cpp:
	* LayerSet.cpp:
	* X3DLayerNode.cpp: 

2012-09-24  Holger Seelig  <holger.seelig@yahoo.de>

	* SFString.h:
	* SFString.cpp:
	* X3DBrowser.cpp:
	* RenderingProperties.cpp: 

2012-09-24  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.pidb:
	* libtitania-x3d.md.pc:
	* libtitania-x3d.cproj:
	* Properties:
	* SFString.h:
	* SFString.cpp:
	* X3DBrowser.h:
	* X3DBrowser.cpp:
	* SupportedProfiles.h:
	* JavaScriptEngine.h:
	* BrowserProperties.h:
	* JavaScriptEngine.cpp:
	* RenderingProperties.h:
	* RenderingProperties.cpp: 

2012-09-24  Holger Seelig  <holger.seelig@yahoo.de>

	* DrawingArea.cpp: 

2012-09-23  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.md.pc:
	* libtitania-x3d.cproj:
	* Time.h:
	* Image.h:
	* Types.h:
	* Array.h:
	* Type.cpp:
	* JavaScript.cpp:
	* World.h:
	* Route.h:
	* SFTime.h:
	* SFVec4.h:
	* SFVec3.h:
	* SFVec2.h:
	* Image.cpp:
	* SFImage.h:
	* SFColor.h:
	* MFInt32.h:
	* Router.h:
	* X3DClock.h:
	* RouteSet.h:
	* SFVec3.cpp:
	* SFVec2.cpp:
	* SFVec4.cpp:
	* SFString.h:
	* Scene.cpp:
	* MFInt32.cpp:
	* X3DObject.cpp:
	* SFMatrix4.h:
	* SFMatrix3.h:
	* SFImage.cpp:
	* X3DScalar.h:
	* SFColor.cpp:
	* ArrayTypes.h:
	* X3DBaseNode.h:
	* FieldValues.h:
	* SFString.cpp:
	* ArrayFields.h:
	* SFColorRGBA.h:
	* SFMatrix3.cpp:
	* X3DScalar.cpp:
	* ArrayTypes.cpp:
	* SFRotation4.h:
	* SFMatrix4.cpp:
	* X3DArrayField.h:
	* X3DBaseNode.cpp:
	* SFColorRGBA.cpp:
	* SFRotation4.cpp:
	* ArrayFields.cpp:
	* DrawingArea.cpp:
	* ProfileInfo.cpp:
	* ViewVolume.cpp:
	* X3DNode.h:
	* ComponentInfo.cpp:
	* Generator.cpp:
	* ShapeContainer.h:
	* FieldDefinitionSet.h:
	* X3DFieldDefinition.h:
	* GarbargeCollector.cpp:
	* ShapeContainer.cpp:
	* X3DFieldDefinition.cpp:
	* FieldDefinitionArray.h:
	* Layer.cpp:
	* X3DExecutionContext.h:
	* X3DExecutionContext.cpp:
	* Sphere.cpp:
	* LayerSet.cpp:
	* LayoutLayer.cpp:
	* X3DShapeNode.cpp:
	* X3DUrlObject.h:
	* ImageTexture.cpp:
	* X3DUrlObject.cpp: 

2012-09-23  Holger Seelig  <holger.seelig@yahoo.de>

	* Types:
	* libtitania-x3d.cproj:
	* Time.h:
	* Image.h:
	* Array.h:
	* Image.cpp:
	* Time.h:
	* ArrayTypes.h:
	* Array.h:
	* Image.h:
	* FieldValues.h:
	* ArrayTypes.cpp:
	* Image.cpp:
	* ArrayValues.h:
	* FieldValues.h:
	* ArrayValues.cpp: 

2012-09-23  Holger Seelig  <holger.seelig@yahoo.de>

	* Time.h:
	* libtitania-x3d.pidb:
	* libtitania-x3d.cproj:
	* ValueTypes:
	* World.h:
	* Time.h:
	* World.cpp:
	* Image.h:
	* Array.h:
	* Array.h:
	* Image.h:
	* Image.cpp:
	* Image.cpp:
	* X3DBrowser.cpp:
	* ArrayValues.h:
	* FieldValues.h:
	* FieldValues.h:
	* ArrayValues.h:
	* ArrayValues.cpp:
	* ArrayValues.cpp: 

2012-09-23  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.pidb:
	* Fields.h:
	* libtitania-x3d.cproj:
	* Type.h:
	* Type.cpp:
	* SFVec2.h:
	* SFTime.h:
	* SFBool.h:
	* SFVec3.h:
	* SFNode.h:
	* MFNode.h:
	* SFVec4.h:
	* X3DObject.h:
	* SFImage.h:
	* SFColor.h:
	* MFInt32.h:
	* X3DField.h:
	* SFTime.cpp:
	* SFBool.cpp:
	* SFNode.cpp:
	* SFVec4.cpp:
	* SFString.h:
	* SFVec2.cpp:
	* SFVec3.cpp:
	* X3DScalar.h:
	* SFMatrix4.h:
	* SFColor.cpp:
	* Parser.cpp:
	* X3DObject.cpp:
	* SFImage.cpp:
	* MFInt32.cpp:
	* SFMatrix3.h:
	* SFString.cpp:
	* X3DBaseNode.h:
	* SFColorRGBA.h:
	* SFRotation4.h:
	* ArrayFields.h:
	* X3DScalar.cpp:
	* SFMatrix4.cpp:
	* SFMatrix3.cpp:
	* X3DArrayField.h:
	* X3DBaseNode.cpp:
	* SFRotation4.cpp:
	* ArrayFields.cpp:
	* SFColorRGBA.cpp:
	* ArrayValues.h:
	* FieldDefinitionSet.cpp:
	* X3DPrototypeInstance.h:
	* X3DPrototypeInstance.cpp: 

2012-09-23  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* JavaScript.cpp:
	* Scene.h:
	* Router.h:
	* X3DField.h:
	* X3DObject.h:
	* Browser.h:
	* Scene.cpp:
	* Parser.cpp:
	* X3DObject.cpp:
	* Browser.cpp:
	* X3DBaseNode.h:
	* X3DBrowser.h:
	* X3DBaseNode.cpp:
	* ProfileInfo.h:
	* X3DBrowser.cpp:
	* Statistics.cpp:
	* GarbageCollector.h:
	* ComponentInfo.h:
	* DrawingArea.cpp:
	* ProfileInfo.cpp:
	* SupportedNodes.h:
	* ComponentInfo.cpp:
	* GarbageCollector.h:
	* SupportedNodes.cpp:
	* GarbargeCollector.cpp:
	* SupportedProfiles.h:
	* Layer.h:
	* GarbargeCollector.cpp:
	* NurbsSet.cpp:
	* Layer.cpp:
	* SupportedProfiles.cpp:
	* X3DExecutionContext.h:
	* SupportedComponents.h:
	* LayerSet.h:
	* Contour2D.cpp:
	* SupportedComponents.cpp:
	* LayoutLayer.h:
	* MetadataSet.cpp:
	* Appearance.cpp:
	* X3DExecutionContext.cpp:
	* LineSet.cpp:
	* GeoLOD.cpp:
	* HAnimJoint.cpp:
	* LayerSet.cpp:
	* X3DShapeNode.cpp:
	* LayoutLayer.cpp:
	* X3DBindableNode.h:
	* PointSet.cpp:
	* X3DLayerNode.h:
	* HAnimSegment.cpp:
	* DISEntityManager.cpp:
	* HAnimHumanoid.cpp:
	* StaticGroup.cpp:
	* X3DBindableNode.cpp:
	* LoadSensor.cpp:
	* X3DLayerNode.cpp:
	* ProgramShader.cpp:
	* MultiTexture.cpp:
	* GeoMetadata.cpp:
	* ComposedShader.cpp:
	* IndexedLineSet.cpp:
	* X3DGroupingNode.cpp:
	* ElevationGrid.cpp:
	* NurbsTrimmedSurface.cpp:
	* X3DPickSensorNode.cpp:
	* ViewpointGroup.cpp:
	* RigidBody.cpp:
	* TextureTransform.cpp:
	* ComposedTexture3D.cpp:
	* ParticleSystem.cpp:
	* MultiTextureTransform.cpp:
	* Background.cpp:
	* CollisionSpace.cpp:
	* CollisionSensor.cpp:
	* MultiTextureCoordinate.cpp:
	* X3DComposedGeometryNode.cpp:
	* RigidBodyCollection.cpp:
	* CollisionCollection.cpp: 

2012-09-22  Holger Seelig  <holger.seelig@yahoo.de>

	* ExternProto.cpp: 

2012-09-22  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DChild.cpp: 

2012-09-22  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* World.h:
	* World.cpp:
	* Browser.h:
	* Browser.cpp:
	* X3DBrowser.h:
	* X3DBrowser.cpp: 

2012-09-22  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DChild.h:
	* X3DChild.cpp: 

2012-09-22  Holger Seelig  <holger.seelig@yahoo.de>

	Added X3DChild class

	* libtitania-x3d.cproj:
	* X3DChild.h:
	* X3DObject.h:
	* X3DField.h:
	* Router.h:
	* X3DChild.cpp:
	* Router.cpp:
	* X3DChildSet.h:
	* X3DObject.cpp:
	* X3DBaseNode.h:
	* X3DChildSet.cpp:
	* X3DObjectSet.cpp:
	* X3DBaseNode.cpp:
	* X3DBrowser.cpp:
	* X3DFieldDefinition.h:
	* X3DFieldDefinition.cpp:
	* TimeSensor.cpp: 

2012-09-22  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* X3DChild.h:
	* X3DChild.cpp: 

2012-09-22  Holger Seelig  <holger.seelig@yahoo.de>

	* SFImage.h:
	* X3DObject.h:
	* SFImage.cpp:
	* X3DObject.cpp:
	* X3DBaseNode.cpp:
	* X3DArrayField.h:
	* TimeSensor.cpp:
	* X3DExecutionContext.cpp:
	* Sphere.cpp:
	* X3DLayerNode.cpp:
	* X3DUrlObject.h:
	* X3DUrlObject.cpp: 

2012-09-22  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DField.h: 

2012-09-22  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DPropertyNode.cpp: 

2012-09-21  Holger Seelig  <holger.seelig@yahoo.de>

	* Parser.cpp:
	* X3DBrowser.h:
	* X3DBrowser.cpp:
	* TimeSensor.h:
	* TimeSensor.cpp:
	* X3DLayerNode.cpp: 

2012-09-21  Holger Seelig  <holger.seelig@yahoo.de>

	Working on prototypes

	* X3DExecutionContext.cpp: 

2012-09-21  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.pidb:
	* libtitania-x3d.cproj:
	* Route.h:
	* X3DRoute.h:
	* RouteSet.h:
	* Router.h:
	* SFImage.h:
	* Browser.h:
	* Route.cpp:
	* SFImage.cpp:
	* Parser.cpp:
	* Router.cpp:
	* RouteSet.cpp:
	* X3DBaseNode.h:
	* Image.h:
	* Browser.cpp:
	* X3DBrowser.h:
	* Image.cpp:
	* X3DArrayField.h:
	* X3DBaseNode.cpp:
	* DrawingArea.h:
	* X3DBrowser.cpp:
	* DrawingArea.cpp:
	* X3DFieldDefinition.h:
	* X3DFieldDefinition.cpp:
	* X3DExecutionContext.h:
	* X3DExecutionContext.cpp: 

2012-09-21  Holger Seelig  <holger.seelig@yahoo.de>

	* findNode:
	* libtitania-x3d.cproj:
	* JavaScript.cpp:
	* Proto.h:
	* Scene.h:
	* Route.h:
	* SFNode.h:
	* Parser.h:
	* X3DObject.h:
	* Proto.cpp:
	* Scene.cpp:
	* Route.cpp:
	* Browser.h:
	* RegEx.cpp:
	* SFImage.cpp:
	* X3DObject.cpp:
	* Parser.cpp:
	* X3DParser.h:
	* Browser.cpp:
	* X3DBaseNode.h:
	* MotionBlur.h:
	* Statistics.h:
	* ProfileInfo.h:
	* X3DArrayField.h:
	* X3DBaseNode.cpp:
	* X3DBrowser.cpp:
	* Text.h:
	* ExternProto.cpp:
	* ComponentInfo.h:
	* Sound.h:
	* Shape.h:
	* Generator.cpp:
	* SignalPdu.h:
	* X3DFieldDefinition.h:
	* Layout.h:
	* FieldDefinitionSet.h:
	* WorldInfo.h:
	* Layer.h:
	* Material.h:
	* NurbsSet.h:
	* Group.h:
	* LOD.h:
	* Box.h:
	* FontStyle.h:
	* TimeSensor.h:
	* Cone.h:
	* ReceiverPdu.h:
	* Switch.h:
	* Color.h:
	* AudioClip.h:
	* Contour2D.h:
	* FieldDefinitionSet.cpp:
	* X3DFieldDefinition.cpp:
	* FieldDefinitionArray.h:
	* Appearance.h:
	* X3DFieldDefinitionSet.h:
	* Arc2D.h:
	* MetadataSet.h:
	* NurbsCurve.h:
	* X3DExecutionContext.h:
	* Normal.h:
	* HAnimSite.h:
	* Script.h:
	* MetadataBool.h:
	* LineSet.h:
	* LayerSet.h:
	* GeoLOD.h:
	* Sphere.h:
	* Inline.h:
	* Anchor.h:
	* HAnimJoint.h:
	* FieldDefinitionArray.cpp:
	* Viewport.h:
	* Disk2D.h:
	* NurbsCurve2D.h:
	* X3DFieldDefinitionSet.cpp:
	* PointSet.h:
	* ScreenGroup.h:
	* LayoutLayer.h:
	* LayoutGroup.h:
	* ShaderPart.h:
	* MetadataFloat.h:
	* TransmitterPdu.h:
	* X3DExecutionContext.cpp:
	* Transform.h:
	* X3DFieldDefinitionArray.h:
	* EspduTransform.h:
	* LayerSet.cpp:
	* QuadSet.h:
	* HAnimSegment.h:
	* Circle2D.h:
	* CADFace.h:
	* ClipPlane.h:
	* ColorRGBA.h:
	* CADPart.h:
	* Cylinder.h:
	* MetadataString.h:
	* Inline.cpp:
	* MetadataDouble.h:
	* Billboard.h:
	* Viewpoint.h:
	* GeoOrigin.h:
	* Collision.h:
	* Coordinate.h:
	* MetadataInteger.h:
	* CADLayer.h:
	* DISEntityManager.h:
	* Extrusion.h:
	* HAnimHumanoid.h:
	* StaticGroup.h:
	* X3DFieldDefinitionArray.cpp:
	* LineProperties.h:
	* FillProperties.h:
	* Polyline2D.h:
	* LoadSensor.h:
	* HAnimDisplacer.h:
	* ArcClose2D.h:
	* ColorDamper.h:
	* ProgramShader.h:
	* PickableGroup.h:
	* TriangleSet.h:
	* ShaderProgram.h:
	* GeoMetadata.h:
	* GeoLocation.h:
	* ScalarChaser.h:
	* ImageTexture.h:
	* PixelTexture.h:
	* ScreenFontStyle.h:
	* CoordinateDouble.h:
	* MultiTexture.h:
	* TwoSidedMaterial.h:
	* LinePickSensor.h:
	* Rectangle2D.h:
	* ComposedShader.h:
	* Polypoint2D.h:
	* PackagedShader.h:
	* MovieTexture.h:
	* CADAssembly.h:
	* GeoViewpoint.h:
	* GeoTransform.h:
	* PointPickSensor.h:
	* NurbsPatchSurface.h:
	* NurbsSwungSurface.h:
	* ContourPolyline2D.h:
	* NurbsSweptSurface.h:
	* X3DUrlObject.h:
	* IndexedLineSet.h:
	* Contact.h:
	* TriangleSet2D.h:
	* TriangleFanSet.h:
	* PositionDamper.h:
	* ElevationGrid.h:
	* DISEntityTypeMapping.h:
	* Fog.h:
	* GeoCoordinate.h:
	* VolumePickSensor.h:
	* PositionChaser.h:
	* ImageTexture.cpp:
	* NurbsTrimmedSurface.h:
	* KeySensor.h:
	* X3DUrlObject.cpp:
	* ViewpointGroup.h:
	* OrthoViewpoint.h:
	* IndexedFaceSet.h:
	* GeoTouchSensor.h:
	* TexCoordDamper2D.h:
	* TimeTrigger.h:
	* TriangleStripSet.h:
	* TextureTransform.h:
	* CoordinateDamper.h:
	* RigidBody.h:
	* IndexedQuadSet.h:
	* PositionDamper2D.h:
	* BallJoint.h:
	* PositionChaser2D.h:
	* ImageTexture3D.h:
	* PixelTexture3D.h:
	* OrientationChaser.h:
	* GeoElevationGrid.h:
	* MotorJoint.h:
	* PrimitivePickSensor.h:
	* EaseInEaseOut.h:
	* TextureCoordinate.h:
	* TextureProperties.h:
	* OrientationDamper.h:
	* ConeEmitter.h:
	* NurbsTextureCoordinate.h:
	* BooleanFilter.h:
	* StringSensor.h:
	* IndexedTriangleSet.h:
	* FloatVertexAttribute.h:
	* BooleanToggle.h:
	* SliderJoint.h:
	* PointEmitter.h:
	* IntegerTrigger.h:
	* VolumeEmitter.h:
	* BooleanTrigger.h:
	* GeoProximitySensor.h:
	* ComposedTexture3D.h:
	* LocalFog.h:
	* NurbsSurfaceInterpolator.h:
	* Matrix3VertexAttribute.h:
	* Matrix4VertexAttribute.h:
	* SurfaceEmitter.h:
	* TextureTransform3D.h:
	* ParticleSystem.h:
	* IndexedTriangleFanSet.h:
	* CollisionSpace.h:
	* UniversalJoint.h:
	* ColorInterpolator.h:
	* PolylineEmitter.h:
	* NurbsPositionInterpolator.h:
	* BooleanSequencer.h:
	* IntegerSequencer.h:
	* MultiTextureTransform.h:
	* TextureCoordinate3D.h:
	* TextureCoordinate4D.h:
	* Background.h:
	* CollisionSensor.h:
	* PlaneSensor.h:
	* CollidableShape.h:
	* ExplosionEmitter.h:
	* ScalarInterpolator.h:
	* WindPhysicsModel.h:
	* TouchSensor.h:
	* NormalInterpolator.h:
	* MultiTextureCoordinate.h:
	* IndexedTriangleStripSet.h:
	* SphereSensor.h:
	* CollidableOffset.h:
	* NurbsOrientationInterpolator.h:
	* GeoPositionInterpolator.h:
	* PositionInterpolator.h:
	* FogCoordinate.h:
	* TransformSensor.h:
	* GravityPhysicsModel.h:
	* ProximitySensor.h:
	* CylinderSensor.h:
	* BoundedPhysicsModel.h:
	* ImageCubeMapTexture.h:
	* PositionInterpolator2D.h:
	* TextureCoordinateGenerator.h:
	* CoordinateInterpolator.h:
	* CollisionCollection.h:
	* VisibilitySensor.h:
	* RigidBodyCollection.h:
	* TextureTransformMatrix3D.h:
	* SingleAxisHingeJoint.h:
	* DoubleAxisHingeJoint.h:
	* OrientationInterpolator.h:
	* TextureBackground.h:
	* SplineScalarInterpolator.h:
	* CoordinateInterpolator2D.h:
	* ComposedCubeMapTexture.h:
	* SplinePositionInterpolator.h:
	* GeneratedCubeMapTexture.h:
	* SplinePositionInterpolator2D.h:
	* SquadOrientationInterpolator.h: 

2012-09-21  Holger Seelig  <holger.seelig@yahoo.de>

	Working on fields: SFNode & MFNode and bases.

	* Parser.cpp: 

2012-09-21  Holger Seelig  <holger.seelig@yahoo.de>

	* MFNode.h:
	* X3DField.h:
	* Proto.cpp:
	* Route.cpp:
	* X3DArrayField.h:
	* X3DBaseNode.cpp:
	* ExternProto.cpp:
	* Generator.cpp:
	* X3DFieldDefinition.cpp:
	* X3DExecutionContext.cpp:
	* X3DPrototypeInstance.cpp: 

2012-09-20  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* Cast.h:
	* SFNode.h:
	* MFNode.h:
	* Parser.h:
	* Proto.cpp:
	* Scene.cpp:
	* Route.cpp:
	* Parser.cpp:
	* X3DBaseNode.h:
	* X3DBrowser.h:
	* X3DBaseNode.cpp:
	* X3DBrowser.cpp:
	* ExternProto.cpp:
	* ImportedNode.cpp:
	* Generator.cpp:
	* ShapeContainer.h:
	* Layer.h:
	* ShapeContainer.cpp:
	* Layer.cpp:
	* X3DExecutionContext.h:
	* Appearance.cpp:
	* X3DExecutionContext.cpp:
	* X3DShapeNode.h:
	* X3DShapeNode.cpp:
	* X3DLayerNode.h:
	* X3DBindableNode.cpp:
	* X3DLayerNode.cpp:
	* X3DGroupingNode.h:
	* X3DGeometryNode.h:
	* X3DPrototypeInstance.h:
	* IndexedFaceSet.h:
	* X3DBoundedObject.h:
	* X3DGroupingNode.cpp:
	* ElevationGrid.cpp:
	* X3DPrototypeInstance.cpp:
	* IndexedFaceSet.cpp:
	* ProximitySensor.h:
	* ProximitySensor.cpp: 

2012-09-20  Holger Seelig  <holger.seelig@yahoo.de>

	* SFNode.h:
	* X3DField.h:
	* X3DArrayField.h:
	* X3DFieldDefinition.h:
	* X3DFieldDefinition.cpp: 

2012-09-19  Holger Seelig  <holger.seelig@yahoo.de>

	* X3D.h:
	* Cast.h:
	* JavaScript.h:
	* Error.h:
	* JavaScript.cpp:
	* X3DType.h:
	* SFVec4.h:
	* Route.h:
	* SFNode.h:
	* MFNode.h:
	* Scene.h:
	* Geometry.h:
	* Proto.h:
	* SFVec2.h:
	* RegEx.h:
	* SFImage.h:
	* SFColor.h:
	* Parser.h:
	* X3DObject.h:
	* X3DField.h:
	* Viewer.h:
	* X3DType.cpp:
	* X3DOutput.h:
	* Proto.cpp:
	* X3DInput.cpp:
	* Browser.h:
	* Scene.cpp:
	* Route.cpp:
	* SFMatrix3.h:
	* Parser.cpp:
	* RequesterId.h:
	* SFMatrix4.h:
	* X3DObject.cpp:
	* X3DBaseNode.h:
	* X3DParser.h:
	* Browser.cpp:
	* X3DBrowser.h:
	* SFRotation4.h:
	* MotionBlur.h:
	* Statistics.h:
	* X3DConstants.h:
	* SFColorRGBA.h:
	* RequesterList.h:
	* ProfileInfo.h:
	* DrawingArea.h:
	* X3DParser.cpp:
	* X3DArrayField.h:
	* ExternProto.h:
	* X3DBaseNode.cpp:
	* MotionBlur.cpp:
	* Statistics.cpp:
	* geturl.cpp:
	* ImportedNode.h:
	* jsfield.cpp:
	* Text.h:
	* ComponentInfo.h:
	* DrawingArea.cpp:
	* ExternProto.cpp:
	* Generator.h:
	* ProfileInfo.cpp:
	* jsstring.cpp:
	* SupportedNodes.h:
	* PointingDevice.h:
	* jsX3DObject.h:
	* ImportedNode.cpp:
	* Sound.h:
	* jsGlobals.cpp:
	* Shape.h:
	* jsBrowser.cpp:
	* Text.cpp:
	* ComponentInfo.cpp:
	* jsX3DScene.cpp:
	* Generator.cpp:
	* uncompress.cpp:
	* X3DFieldDefinition.h:
	* jsX3DObject.cpp:
	* SignalPdu.h:
	* Sound.cpp:
	* Shape.cpp:
	* Layout.h:
	* SupportedNodes.cpp:
	* Material.h:
	* LOD.h:
	* NurbsSet.h:
	* Layer.h:
	* Group.h:
	* SupportedProfiles.h:
	* Box.h:
	* WorldInfo.h:
	* FontStyle.h:
	* TimeSensor.h:
	* Layout.cpp:
	* jsX3DArrayField.h:
	* Color.h:
	* Contour2D.h:
	* SignalPdu.cpp:
	* AudioClip.h:
	* Cone.h:
	* Switch.h:
	* ReceiverPdu.h:
	* X3DFieldDefinition.cpp:
	* Arc2D.h:
	* Appearance.h:
	* WorldInfo.cpp:
	* MetadataSet.h:
	* Normal.h:
	* NurbsSet.cpp:
	* NurbsCurve.h:
	* Material.cpp:
	* Group.cpp:
	* X3DInfoNode.h:
	* FontStyle.cpp:
	* Script.h:
	* HAnimSite.h:
	* LOD.cpp:
	* GarbargeCollector.cpp:
	* Box.cpp:
	* SupportedProfiles.cpp:
	* Layer.cpp:
	* X3DExecutionContext.h:
	* SupportedComponents.h:
	* Anchor.h:
	* Disk2D.h:
	* Inline.h:
	* Contour2D.cpp:
	* Sphere.h:
	* HAnimJoint.h:
	* X3DChildNode.h:
	* LayerSet.h:
	* ReceiverPdu.cpp:
	* Cone.cpp:
	* Switch.cpp:
	* GeoLOD.h:
	* Color.cpp:
	* LineSet.h:
	* Viewport.h:
	* MetadataBool.h:
	* TimeSensor.cpp:
	* jsSFNode.cpp:
	* jsMFNode.cpp:
	* AudioClip.cpp:
	* jsMFBool.cpp:
	* jsMFTime.cpp:
	* LayoutLayer.h:
	* Transform.h:
	* X3DExecutionContext.cpp:
	* Arc2D.cpp:
	* jsSFVec4d.cpp:
	* jsMFVec3d.cpp:
	* EspduTransform.h:
	* LayoutGroup.h:
	* X3DSoundNode.h:
	* Normal.cpp:
	* PointSet.h:
	* SpotLight.h:
	* Script.cpp:
	* Appearance.cpp:
	* TransmitterPdu.h:
	* SupportedComponents.cpp:
	* jsMFVec3f.cpp:
	* ScreenGroup.h:
	* jsSFVec3f.cpp:
	* HAnimSite.cpp:
	* ShaderPart.h:
	* jsSFVec2d.cpp:
	* jsMFVec4f.cpp:
	* jsMFColor.cpp:
	* jsMFVec2d.cpp:
	* jsMFVec4d.cpp:
	* jsMFInt32.cpp:
	* NurbsCurve.cpp:
	* jsMFFloat.cpp:
	* jsSFVec2f.cpp:
	* jsSFColor.cpp:
	* jsMFImage.cpp:
	* MetadataFloat.h:
	* jsSFImage.cpp:
	* jsSFVec3d.cpp:
	* MetadataSet.cpp:
	* jsMFVec2f.cpp:
	* NurbsCurve2D.h:
	* jsSFVec4f.cpp:
	* GeoLOD.cpp:
	* Sphere.cpp:
	* LineSet.cpp:
	* ClipPlane.h:
	* HAnimSegment.h:
	* MetadataString.h:
	* MetadataBool.cpp:
	* jsMFString.cpp:
	* HAnimJoint.cpp:
	* Anchor.cpp:
	* Inline.cpp:
	* MetadataDouble.h:
	* ColorRGBA.h:
	* LayerSet.cpp:
	* PointLight.h:
	* jsMFDouble.cpp:
	* Disk2D.cpp:
	* Circle2D.h:
	* Viewport.cpp:
	* Cylinder.h:
	* QuadSet.h:
	* CADFace.h:
	* CADPart.h:
	* LayoutGroup.cpp:
	* StaticGroup.h:
	* LayoutLayer.cpp:
	* Collision.h:
	* MetadataInteger.h:
	* SpotLight.cpp:
	* GeoOrigin.h:
	* X3DLayoutNode.h:
	* ScreenGroup.cpp:
	* Viewpoint.h:
	* FillProperties.h:
	* EspduTransform.cpp:
	* DISEntityManager.h:
	* LineProperties.h:
	* NurbsCurve2D.cpp:
	* Transform.cpp:
	* TransmitterPdu.cpp:
	* Coordinate.h:
	* MetadataFloat.cpp:
	* jsProfileInfoArray.cpp:
	* ShaderPart.cpp:
	* PointSet.cpp:
	* Extrusion.h:
	* Billboard.h:
	* CADLayer.h:
	* HAnimHumanoid.h:
	* Polyline2D.h:
	* X3DShaderNode.h:
	* jsSFMatrix3d.cpp:
	* HAnimSegment.cpp:
	* jsSFRotation.cpp:
	* HAnimDisplacer.h:
	* jsSFMatrix3f.cpp:
	* jsMFRotation.cpp:
	* X3DFontStyleNode.h:
	* jsSFMatrix4d.cpp:
	* ColorDamper.h:
	* MetadataDouble.cpp:
	* MetadataString.cpp:
	* jsMFMatrix3d.cpp:
	* jsMFMatrix3f.cpp:
	* Circle2D.cpp:
	* ArcClose2D.h:
	* LoadSensor.h:
	* ShaderProgram.h:
	* PickableGroup.h:
	* ProgramShader.h:
	* TriangleSet.h:
	* jsMFMatrix4f.cpp:
	* Cylinder.cpp:
	* QuadSet.cpp:
	* CADFace.cpp:
	* ClipPlane.cpp:
	* jsMFMatrix4d.cpp:
	* PointLight.cpp:
	* ColorRGBA.cpp:
	* CADPart.cpp:
	* jsSFMatrix4f.cpp:
	* jsVrmlMatrix.cpp:
	* MovieTexture.h:
	* PackagedShader.h:
	* GeoLocation.h:
	* MetadataInteger.cpp:
	* Coordinate.cpp:
	* CoordinateDouble.h:
	* GeoMetadata.h:
	* PixelTexture.h:
	* jsMFColorRGBA.cpp:
	* Extrusion.cpp:
	* MultiTexture.h:
	* jsSFColorRGBA.cpp:
	* CADLayer.cpp:
	* ComposedShader.h:
	* ImageTexture.h:
	* Collision.cpp:
	* X3DColorNode.h:
	* ScalarChaser.h:
	* HAnimHumanoid.cpp:
	* GeoOrigin.cpp:
	* Viewpoint.cpp:
	* Polypoint2D.h:
	* ScreenFontStyle.h:
	* StaticGroup.cpp:
	* jsX3DFieldDefinition.cpp:
	* DISEntityManager.cpp:
	* FillProperties.cpp:
	* LinePickSensor.h:
	* LineProperties.cpp:
	* jsComponentInfoArray.cpp:
	* Rectangle2D.h:
	* TwoSidedMaterial.h:
	* Billboard.cpp:
	* HAnimDisplacer.cpp:
	* NurbsSwungSurface.h:
	* X3DUrlObject.h:
	* GeoTransform.h:
	* jsX3DExecutionContext.cpp:
	* NurbsPatchSurface.h:
	* ProgramShader.cpp:
	* LoadSensor.cpp:
	* ContourPolyline2D.h:
	* CADAssembly.h:
	* ShaderProgram.cpp:
	* X3DDamperNode.h:
	* PickableGroup.cpp:
	* PointPickSensor.h:
	* ColorDamper.cpp:
	* GeoViewpoint.h:
	* Polyline2D.cpp:
	* X3DLayerNode.cpp:
	* X3DChaserNode.h:
	* ArcClose2D.cpp:
	* TriangleSet.cpp:
	* X3DLightNode.cpp:
	* NurbsSweptSurface.h:
	* X3DScriptNode.h:
	* X3DNormalNode.h:
	* MultiTexture.cpp:
	* PositionChaser.h:
	* PixelTexture.cpp:
	* MovieTexture.cpp:
	* ScalarChaser.cpp:
	* X3DGroupingNode.h:
	* Contact.h:
	* PositionDamper.h:
	* ImageTexture.cpp:
	* X3DViewportNode.h:
	* ElevationGrid.h:
	* jsFieldDefinitionArray.cpp:
	* TriangleSet2D.h:
	* TriangleFanSet.h:
	* DISEntityTypeMapping.h:
	* LinePickSensor.cpp:
	* VolumePickSensor.h:
	* Polypoint2D.cpp:
	* Rectangle2D.cpp:
	* IndexedLineSet.h:
	* TwoSidedMaterial.cpp:
	* ScreenFontStyle.cpp:
	* CoordinateDouble.cpp:
	* Fog.h:
	* GeoCoordinate.h:
	* X3DSoundSourceNode.h:
	* GeoMetadata.cpp:
	* GeoLocation.cpp:
	* PackagedShader.cpp:
	* ComposedShader.cpp:
	* X3DPrototypeInstance.h:
	* X3DUrlObject.cpp:
	* NurbsPatchSurface.cpp:
	* GeoViewpoint.cpp:
	* GeoTouchSensor.h:
	* IndexedFaceSet.h:
	* X3DTimeDependentNode.h:
	* GeoTransform.cpp:
	* CADAssembly.cpp:
	* KeySensor.h:
	* DirectionalLight.h:
	* X3DBoundedObject.h:
	* ContourPolyline2D.cpp:
	* OrthoViewpoint.h:
	* ViewpointGroup.h:
	* NurbsSwungSurface.cpp:
	* X3DFollowerNode.h:
	* NurbsTrimmedSurface.h:
	* NavigationInfo.h:
	* NurbsSweptSurface.cpp:
	* PointPickSensor.cpp:
	* X3DPickSensorNode.h:
	* IndexedLineSet.cpp:
	* PositionChaser.cpp:
	* TimeTrigger.h:
	* BallJoint.h:
	* PixelTexture3D.h:
	* TriangleFanSet.cpp:
	* ElevationGrid.cpp:
	* IndexedQuadSet.h:
	* TextureTransform.h:
	* Fog.cpp:
	* ImageTexture3D.h:
	* PositionDamper.cpp:
	* TriangleStripSet.h:
	* DISEntityTypeMapping.cpp:
	* TriangleSet2D.cpp:
	* Contact.cpp:
	* GeoCoordinate.cpp:
	* CoordinateDamper.h:
	* PositionChaser2D.h:
	* VolumePickSensor.cpp:
	* TexCoordDamper2D.h:
	* PositionDamper2D.h:
	* RigidBody.h:
	* NavigationInfo.cpp:
	* OrientationDamper.h:
	* NurbsTrimmedSurface.cpp:
	* GeoTouchSensor.cpp:
	* X3DPrototypeInstance.cpp:
	* OrthoViewpoint.cpp:
	* TextureCoordinate.h:
	* X3DCoordinateNode.h:
	* PrimitivePickSensor.h:
	* TextureProperties.h:
	* ViewpointGroup.cpp:
	* IndexedFaceSet.cpp:
	* ConeEmitter.h:
	* DirectionalLight.cpp:
	* KeySensor.cpp:
	* EaseInEaseOut.h:
	* MotorJoint.h:
	* GeoElevationGrid.h:
	* OrientationChaser.h:
	* PositionChaser2D.cpp:
	* PositionDamper2D.cpp:
	* IndexedQuadSet.cpp:
	* X3DTexture3DNode.h:
	* TexCoordDamper2D.cpp:
	* CoordinateDamper.cpp:
	* PixelTexture3D.cpp:
	* ImageTexture3D.cpp:
	* TriangleStripSet.cpp:
	* IndexedTriangleSet.h:
	* BooleanFilter.h:
	* TimeTrigger.cpp:
	* BooleanToggle.h:
	* PointEmitter.h:
	* SliderJoint.h:
	* RigidBody.cpp:
	* FloatVertexAttribute.h:
	* BallJoint.cpp:
	* StringSensor.h:
	* TextureTransform.cpp:
	* X3DAppearanceChildNode.h:
	* NurbsTextureCoordinate.h:
	* EaseInEaseOut.cpp:
	* MotorJoint.cpp:
	* GeoElevationGrid.cpp:
	* TextureProperties.cpp:
	* ConeEmitter.cpp:
	* PrimitivePickSensor.cpp:
	* TextureCoordinate.cpp:
	* GeoProximitySensor.h:
	* BooleanTrigger.h:
	* VolumeEmitter.h:
	* OrientationDamper.cpp:
	* LocalFog.h:
	* X3DTriggerNode.h:
	* ComposedTexture3D.h:
	* OrientationChaser.cpp:
	* IntegerTrigger.h:
	* PointEmitter.cpp:
	* TextureTransform3D.h:
	* NurbsSurfaceInterpolator.h:
	* SurfaceEmitter.h:
	* IndexedTriangleSet.cpp:
	* NurbsTextureCoordinate.cpp:
	* BooleanFilter.cpp:
	* StringSensor.cpp:
	* BooleanToggle.cpp:
	* Matrix3VertexAttribute.h:
	* ParticleSystem.h:
	* X3DNurbsControlCurveNode.h:
	* X3DVertexAttributeNode.h:
	* Matrix4VertexAttribute.h:
	* FloatVertexAttribute.cpp:
	* SliderJoint.cpp:
	* CollisionSpace.h:
	* X3DNetworkSensorNode.h:
	* UniversalJoint.h:
	* ComposedTexture3D.cpp:
	* TextureCoordinate4D.h:
	* ColorInterpolator.h:
	* PolylineEmitter.h:
	* Background.h:
	* LocalFog.cpp:
	* X3DSequencerNode.h:
	* IntegerSequencer.h:
	* IntegerTrigger.cpp:
	* IndexedTriangleFanSet.h:
	* GeoProximitySensor.cpp:
	* BooleanSequencer.h:
	* BooleanTrigger.cpp:
	* TextureCoordinate3D.h:
	* MultiTextureTransform.h:
	* X3DParametricGeometryNode.h:
	* NurbsPositionInterpolator.h:
	* VolumeEmitter.cpp:
	* PlaneSensor.h:
	* CollidableShape.h:
	* MultiTextureCoordinate.h:
	* SurfaceEmitter.cpp:
	* ExplosionEmitter.h:
	* Matrix4VertexAttribute.cpp:
	* Matrix3VertexAttribute.cpp:
	* NurbsSurfaceInterpolator.cpp:
	* ParticleSystem.cpp:
	* ScalarInterpolator.h:
	* WindPhysicsModel.h:
	* NormalInterpolator.h:
	* CollisionSensor.h:
	* TouchSensor.h:
	* TextureTransform3D.cpp:
	* Background.cpp:
	* SphereSensor.h:
	* IntegerSequencer.cpp:
	* IndexedTriangleFanSet.cpp:
	* CollidableOffset.h:
	* CollisionSpace.cpp:
	* NurbsPositionInterpolator.cpp:
	* MultiTextureTransform.cpp:
	* X3DNurbsSurfaceGeometryNode.h:
	* BooleanSequencer.cpp:
	* UniversalJoint.cpp:
	* X3DTextureTransformNode.h:
	* TextureCoordinate3D.cpp:
	* PolylineEmitter.cpp:
	* ColorInterpolator.cpp:
	* IndexedTriangleStripSet.h:
	* TextureCoordinate4D.cpp:
	* FogCoordinate.h:
	* MultiTextureCoordinate.cpp:
	* WindPhysicsModel.cpp:
	* PlaneSensor.cpp:
	* TouchSensor.cpp:
	* X3DTextureCoordinateNode.h:
	* NurbsOrientationInterpolator.h:
	* NormalInterpolator.cpp:
	* X3DRigidJointNode.h:
	* CollisionSensor.cpp:
	* CollidableShape.cpp:
	* ExplosionEmitter.cpp:
	* GeoPositionInterpolator.h:
	* PositionInterpolator.h:
	* ScalarInterpolator.cpp:
	* ProximitySensor.h:
	* CylinderSensor.h:
	* BoundedPhysicsModel.h:
	* IndexedTriangleStripSet.cpp:
	* CollidableOffset.cpp:
	* GravityPhysicsModel.h:
	* SphereSensor.cpp:
	* TransformSensor.h:
	* NurbsOrientationInterpolator.cpp:
	* PositionInterpolator.cpp:
	* FogCoordinate.cpp:
	* PositionInterpolator2D.h:
	* CoordinateInterpolator.h:
	* CollisionCollection.h:
	* ImageCubeMapTexture.h:
	* TextureTransformMatrix3D.h:
	* RigidBodyCollection.h:
	* GeoPositionInterpolator.cpp:
	* VisibilitySensor.h:
	* TextureCoordinateGenerator.h:
	* DoubleAxisHingeJoint.h:
	* TransformSensor.cpp:
	* ProximitySensor.cpp:
	* SingleAxisHingeJoint.h:
	* CylinderSensor.cpp:
	* GravityPhysicsModel.cpp:
	* BoundedPhysicsModel.cpp:
	* OrientationInterpolator.h:
	* X3DParticleEmitterNode.h:
	* CoordinateInterpolator2D.h:
	* SplineScalarInterpolator.h:
	* CollisionCollection.cpp:
	* CoordinateInterpolator.cpp:
	* TextureTransformMatrix3D.cpp:
	* RigidBodyCollection.cpp:
	* TextureCoordinateGenerator.cpp:
	* PositionInterpolator2D.cpp:
	* VisibilitySensor.cpp:
	* X3DDragSensorNode.h:
	* ImageCubeMapTexture.cpp:
	* TextureBackground.h:
	* X3DKeyDeviceSensorNode.h:
	* ComposedCubeMapTexture.h:
	* OrientationInterpolator.cpp:
	* SingleAxisHingeJoint.cpp:
	* DoubleAxisHingeJoint.cpp:
	* X3DTouchSensorNode.h:
	* TextureBackground.cpp:
	* GeneratedCubeMapTexture.h:
	* X3DProductStructureChildNode.h:
	* CoordinateInterpolator2D.cpp:
	* SplinePositionInterpolator.h:
	* SplineScalarInterpolator.cpp:
	* ComposedCubeMapTexture.cpp:
	* SplinePositionInterpolator.cpp:
	* X3DEnvironmentTextureNode.h:
	* SplinePositionInterpolator2D.h:
	* SquadOrientationInterpolator.h:
	* GeneratedCubeMapTexture.cpp:
	* X3DNBodyCollisionSpaceNode.h:
	* X3DParticlePhysicsModelNode.h:
	* SplinePositionInterpolator2D.cpp:
	* SquadOrientationInterpolator.cpp:
	* X3DEnvironmentalSensorNode.h: 

2012-09-19  Holger Seelig  <holger.seelig@yahoo.de>

	* SFNode.h:
	* X3DField.h:
	* X3DArrayField.h:
	* X3DBaseNode.cpp:
	* X3DPrototypeInstance.cpp: 

2012-09-19  Holger Seelig  <holger.seelig@yahoo.de>

	* Cast.h:
	* SFNode.h:
	* Parser.h:
	* Parser.cpp:
	* X3DBaseNode.cpp:
	* X3DExecutionContext.cpp:
	* X3DPrototypeInstance.h:
	* X3DPrototypeInstance.cpp: 

2012-09-18  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* Cast.h:
	* Proto.h:
	* SFNode.h:
	* SFVec3.h:
	* SFVec2.h:
	* X3DField.h:
	* SFString.h:
	* Proto.cpp:
	* X3DProto.h:
	* Parser.cpp:
	* X3DBaseNode.h:
	* SFRotation4.h:
	* ExternProto.h:
	* X3DBaseNode.cpp:
	* X3DBrowser.cpp:
	* ExternProto.cpp:
	* X3DFieldDefinition.h:
	* X3DFieldDefinition.cpp:
	* X3DExecutionContext.h:
	* X3DExecutionContext.cpp:
	* X3DUrlObject.h:
	* X3DUrlObject.cpp:
	* X3DPrototypeInstance.h:
	* X3DPrototypeInstance.cpp:
	* ProximitySensor.cpp: 

2012-09-17  Holger Seelig  <holger.seelig@yahoo.de>

	* Parser.cpp:
	* X3DPrototypeInstance.cpp: 

2012-09-17  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* X3DInput.h:
	* X3DObject.h:
	* X3DInput.cpp:
	* Parser.cpp:
	* X3DScalar.h:
	* X3DObject.cpp:
	* X3DBrowser.h:
	* ExternProto.h:
	* X3DBaseNode.cpp:
	* X3DBrowser.cpp:
	* DrawingArea.cpp:
	* ExternProto.cpp:
	* X3DExecutionContext.h:
	* X3DExecutionContext.cpp:
	* X3DLayerNode.cpp:
	* X3DUrlObject.cpp:
	* X3DPrototypeInstance.cpp:
	* Background.cpp: 

2012-09-16  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DUrlObject.cpp: 

2012-09-16  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DType.h:
	* SFVec2.h:
	* SFTime.h:
	* SFVec3.h:
	* SFNode.h:
	* SFVec4.h:
	* SFBool.h:
	* SFColor.h:
	* SFImage.h:
	* X3DOutput.h:
	* SFString.h:
	* SFMatrix3.h:
	* X3DScalar.h:
	* SFMatrix4.h:
	* Array.h:
	* SFString.cpp:
	* SFColorRGBA.h:
	* SFRotation4.h:
	* X3DArrayField.h:
	* ArrayValues.h:
	* ArrayValues.cpp:
	* X3DUrlObject.h:
	* ImageTexture.cpp:
	* X3DUrlObject.cpp: 

2012-09-16  Holger Seelig  <holger.seelig@yahoo.de>

	* X3D.h:
	* libtitania-x3d.md.pc:
	* libtitania-x3d.cproj:
	* Error.h:
	* X3DId.h:
	* Error.h:
	* X3DId.cpp:
	* Error.cpp:
	* Error.cpp:
	* X3DBase.h:
	* X3DType.h:
	* Geometry.h:
	* Scene.h:
	* Parser.h:
	* Geometry.h:
	* X3DType.cpp:
	* X3DBase.cpp:
	* X3DObject.h:
	* Scene.cpp:
	* Route.cpp:
	* Browser.h:
	* Parser.cpp:
	* X3DObject.cpp:
	* X3DBaseNode.h:
	* ViewVolume.h:
	* DrawingArea.cpp:
	* ExternProto.cpp:
	* X3DExecutionContext.h:
	* X3DShapeNode.cpp:
	* X3DLayerNode.h:
	* X3DUrlObject.h:
	* X3DBoundedObject.h:
	* X3DGeometryNode.h:
	* X3DUrlObject.cpp:
	* ProximitySensor.cpp: 

2012-09-16  Holger Seelig  <holger.seelig@yahoo.de>

	* X3D.h:
	* Bits:
	* libtitania-x3d.pidb:
	* libtitania-x3d.cproj:
	* Error.h:
	* Error.cpp:
	* Error.h:
	* MFNode.h:
	* Scene.h:
	* Parser.h:
	* X3DField.h:
	* X3DObject.h:
	* X3DOutput.h:
	* Scene.cpp:
	* Route.cpp:
	* Error.cpp:
	* InterestId.h:
	* RequesterId.h:
	* X3DOutput.cpp:
	* X3DBaseNode.h:
	* InterestArray.h:
	* RequesterList.h:
	* X3DBaseNode.cpp:
	* ExternProto.h:
	* RequesterList.cpp:
	* InterestArray.cpp:
	* X3DBrowser.cpp:
	* DrawingArea.cpp:
	* ExternProto.cpp:
	* X3DUrlObject.h:
	* ImageTexture.cpp:
	* X3DUrlObject.cpp: 

2012-09-15  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DId.h:
	* MFNode.h:
	* Route.h:
	* X3DObject.h:
	* X3DContext.h:
	* X3DObject.cpp:
	* X3DBaseNode.h:
	* X3DBaseNode.cpp:
	* ProfileInfo.h:
	* ComponentInfo.h:
	* PointingDevice.h:
	* NurbsSet.h:
	* X3DFieldDefinition.cpp:
	* Appearance.h:
	* X3DExecutionContext.h:
	* HAnimJoint.h:
	* LayerSet.h:
	* GeoLOD.h:
	* LineSet.h:
	* LayoutLayer.h:
	* PointSet.h:
	* HAnimSegment.h:
	* HAnimHumanoid.h:
	* DISEntityManager.h:
	* LoadSensor.h:
	* GeoMetadata.h:
	* MultiTexture.h:
	* ElevationGrid.h:
	* IndexedLineSet.h:
	* X3DPickSensorNode.h:
	* IndexedFaceSet.h:
	* X3DBoundedObject.h:
	* ViewpointGroup.h:
	* X3DGeometryNode.h:
	* RigidBody.h:
	* ParticleSystem.h:
	* CollisionSpace.h:
	* CollisionSensor.h:
	* X3DComposedGeometryNode.h:
	* CollisionCollection.h:
	* RigidBodyCollection.h: 

2012-09-15  Holger Seelig  <holger.seelig@yahoo.de>

	* findNode:
	* MFNode.h:
	* MFInt32.h:
	* Parser.h:
	* Proto.cpp:
	* MFNode.cpp:
	* Parser.cpp:
	* ArrayFields.h:
	* X3DBaseNode.cpp:
	* PointingDevice.h:
	* Layer.h:
	* NurbsSet.h:
	* Contour2D.h:
	* Appearance.h:
	* X3DExecutionContext.h:
	* NurbsSet.cpp:
	* MetadataSet.h:
	* LayerSet.h:
	* GeoLOD.h:
	* HAnimJoint.h:
	* LineSet.h:
	* X3DExecutionContext.cpp:
	* PointSet.h:
	* LayoutLayer.h:
	* GeoLOD.cpp:
	* HAnimSegment.h:
	* LineSet.cpp:
	* HAnimJoint.cpp:
	* LayerSet.cpp:
	* StaticGroup.h:
	* X3DBindableNode.h:
	* HAnimHumanoid.h:
	* DISEntityManager.h:
	* X3DLayerNode.h:
	* ProgramShader.h:
	* LoadSensor.h:
	* HAnimSegment.cpp:
	* X3DBindableNode.cpp:
	* DISEntityManager.cpp:
	* HAnimHumanoid.cpp:
	* ComposedShader.h:
	* GeoMetadata.h:
	* MultiTexture.h:
	* LoadSensor.cpp:
	* GeoMetadata.cpp:
	* ElevationGrid.h:
	* X3DGroupingNode.h:
	* IndexedLineSet.h:
	* MultiTexture.cpp:
	* CosmoWorlds.wrl:
	* NurbsTrimmedSurface.h:
	* X3DPickSensorNode.h:
	* ViewpointGroup.h:
	* ElevationGrid.cpp:
	* IndexedLineSet.cpp:
	* RigidBody.h:
	* ViewpointGroup.cpp:
	* X3DPickSensorNode.cpp:
	* RigidBody.cpp:
	* ComposedTexture3D.h:
	* ParticleSystem.h:
	* CollisionSpace.h:
	* MultiTextureTransform.h:
	* CollisionSensor.h:
	* ParticleSystem.cpp:
	* MultiTextureCoordinate.h:
	* X3DComposedGeometryNode.h:
	* CollisionCollection.h:
	* RigidBodyCollection.h:
	* RigidBodyCollection.cpp:
	* CollisionCollection.cpp: 

2012-09-15  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* X3DId.h:
	* X3DType.h:
	* X3DId.cpp:
	* Proto.h:
	* SFBool.h:
	* Route.h:
	* Scene.h:
	* MFNode.h:
	* X3DObject.h:
	* X3DType.cpp:
	* X3DField.h:
	* SFBool.cpp:
	* Route.cpp:
	* MFNode.cpp:
	* Scene.cpp:
	* Proto.cpp:
	* X3DObject.cpp:
	* Parser.cpp:
	* X3DBaseNode.h:
	* ExternProto.h:
	* X3DArrayField.h:
	* X3DBaseNode.cpp:
	* ExternProto.cpp:
	* X3DFieldDefinition.h:
	* X3DFieldDefinition.cpp:
	* X3DExecutionContext.h:
	* X3DExecutionContext.cpp:
	* X3DUrlObject.cpp:
	* X3DGeometryNode.cpp: 

2012-09-15  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DBaseNode.cpp: 

2012-09-15  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* X3DBaseNode.h:
	* X3DBaseNode.cpp: 

2012-09-14  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.pidb:
	* libtitania-x3d.md.pc:
	* libtitania-x3d.cproj:
	* Geometry.h:
	* Browser.h:
	* ViewVolume.h:
	* ViewVolume.cpp:
	* Layer.cpp:
	* X3DExecutionContext.h:
	* Transform.cpp:
	* X3DShapeNode.cpp:
	* X3DLayerNode.h:
	* X3DLayerNode.cpp:
	* X3DBoundedObject.h:
	* X3DGeometryNode.h:
	* X3DGroupingNode.cpp:
	* IndexedFaceSet.cpp:
	* ProximitySensor.cpp: 

2012-09-14  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj: 

2012-09-14  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.md.pc:
	* libtitania-x3d.cproj:
	* X3DType.h:
	* JavaScript.cpp:
	* SFTime.h:
	* X3DType.h:
	* SFVec4.h:
	* SFBool.h:
	* SFVec2.h:
	* RegEx.h:
	* SFVec3.h:
	* MFNode.h:
	* Route.h:
	* SFNode.h:
	* X3DObject.h:
	* Geometry.h:
	* X3DField.h:
	* Router.h:
	* X3DType.cpp:
	* Requester.h:
	* X3DOutput.h:
	* SFColor.h:
	* SFImage.h:
	* MFInt32.h:
	* Browser.h:
	* MFNode.cpp:
	* SFNode.cpp:
	* SFString.h:
	* X3DType.cpp:
	* X3DObject.h:
	* Requester.h:
	* X3DOutput.h:
	* InterestId.h:
	* RegEx.cpp:
	* InterestId.h:
	* Router.cpp:
	* Parser.cpp:
	* SFMatrix3.h:
	* X3DProto.h:
	* X3DScalar.h:
	* X3DContext.h:
	* X3DOutput.cpp:
	* SFMatrix4.h:
	* X3DField.h:
	* X3DObject.cpp:
	* X3DParser.h:
	* X3DObject.cpp:
	* Array.h:
	* X3DObjectSet.h:
	* X3DBaseNode.h:
	* X3DOutput.cpp:
	* SbLine.h:
	* Browser.cpp:
	* X3DContext.h:
	* X3DContext.cpp:
	* X3DObjectSet.h:
	* SFRotation4.h:
	* InterestArray.h:
	* SbPlane.h:
	* SbBox3f.h:
	* X3DBrowser.h:
	* X3DConstants.h:
	* ArrayFields.h:
	* SFColorRGBA.h:
	* ProfileInfo.h:
	* X3DBaseNode.h:
	* NodeTypeArray.h:
	* SbLine.cpp:
	* X3DObjectSet.cpp:
	* X3DBaseNode.cpp:
	* X3DArrayField.h:
	* InterestArray.h:
	* SbBox3f.cpp:
	* SbPlane.cpp:
	* X3DConstants.h:
	* X3DContext.cpp:
	* X3DObjectSet.cpp:
	* ViewVolume.h:
	* InterestArray.cpp:
	* NodeTypeArray.h:
	* X3DBaseNode.cpp:
	* X3DRenderer.h:
	* X3DArrayField.h:
	* InterestArray.cpp:
	* NodeTypeArray.cpp:
	* ComponentInfo.h:
	* X3DBrowserNode.h:
	* ViewVolume.cpp:
	* X3DNode.h:
	* ArrayValues.h:
	* NodeTypeArray.cpp:
	* X3DBrowserNode.cpp:
	* X3DFieldDefinition.h:
	* SignalPdu.h:
	* GarbageCollector.h:
	* Layer.h:
	* NurbsSet.h:
	* Box.h:
	* X3DFieldDefinition.h:
	* SignalPdu.cpp:
	* ReceiverPdu.h:
	* Cone.h:
	* X3DFieldDefinition.cpp:
	* Box.cpp:
	* NurbsSet.cpp:
	* Layer.cpp:
	* X3DFieldDefinitionSet.h:
	* X3DExecutionContext.h:
	* GeoLOD.h:
	* Inline.h:
	* ReceiverPdu.cpp:
	* Sphere.h:
	* X3DFieldDefinition.cpp:
	* Cone.cpp:
	* LayerSet.h:
	* Transform.h:
	* LayoutLayer.h:
	* X3DFieldDefinitionSet.h:
	* X3DExecutionContext.cpp:
	* X3DShapeNode.h:
	* X3DFieldDefinitionArray.h:
	* TransmitterPdu.h:
	* X3DFieldDefinitionSet.cpp:
	* Cylinder.h:
	* Sphere.cpp:
	* Viewport.cpp:
	* GeoLOD.cpp:
	* Inline.cpp:
	* LayerSet.cpp:
	* CADFace.h:
	* X3DFieldDefinitionSet.cpp:
	* Transform.cpp:
	* StaticGroup.h:
	* HAnimHumanoid.h:
	* TransmitterPdu.cpp:
	* X3DFieldDefinitionArray.cpp:
	* X3DFieldDefinitionArray.h:
	* X3DShapeNode.cpp:
	* LayoutLayer.cpp:
	* X3DLayerNode.h:
	* CADFace.cpp:
	* Cylinder.cpp:
	* X3DFieldDefinitionArray.cpp:
	* X3DMetadataObject.h:
	* HAnimHumanoid.cpp:
	* StaticGroup.cpp:
	* Viewpoint.cpp:
	* X3DLayerNode.cpp:
	* X3DUrlObject.h:
	* IndexedLineSet.h:
	* ElevationGrid.h:
	* X3DGroupingNode.h:
	* IndexedFaceSet.h:
	* X3DBoundedObject.h:
	* X3DGeometryNode.h:
	* X3DPickableObject.h:
	* ElevationGrid.cpp:
	* X3DGroupingNode.cpp:
	* IndexedLineSet.cpp:
	* IndexedFaceSet.cpp:
	* X3DGeometryNode.cpp:
	* X3DFogObject.h:
	* Background.cpp:
	* X3DProgrammableShaderObject.h:
	* ProximitySensor.cpp:
	* VisibilitySensor.cpp:
	* X3DNBodyCollidableNode.h:
	* X3DNBodyCollidableNode.cpp:
	* X3DNBodyCollisionSpaceNode.h:
	* X3DNBodyCollisionSpaceNode.cpp: 

2012-09-14  Holger Seelig  <holger.seelig@yahoo.de>

	* Viewpoint.cpp:
	* X3DViewpointNode.cpp:
	* Background.h:
	* Background.cpp: 

2012-09-14  Holger Seelig  <holger.seelig@yahoo.de>

	* Scene.h:
	* Scene.cpp:
	* X3DObject.h:
	* X3DObject.cpp:
	* X3DObjectSet.h:
	* X3DBaseNode.h:
	* X3DBaseNode.cpp:
	* X3DFieldDefinition.h:
	* X3DExecutionContext.h:
	* LayerSet.h:
	* X3DFieldDefinition.cpp:
	* X3DExecutionContext.cpp:
	* LayerSet.cpp:
	* X3DBindableNode.h:
	* X3DLayerNode.h:
	* X3DBindableNode.cpp:
	* X3DLayerNode.cpp:
	* Fog.h:
	* NavigationInfo.h:
	* Fog.cpp:
	* NavigationInfo.cpp:
	* X3DViewpointNode.h:
	* X3DViewpointNode.cpp:
	* Background.h:
	* Background.cpp:
	* X3DBackgroundNode.h:
	* X3DBackgroundNode.cpp: 

2012-09-14  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* X3DOutput.h:
	* X3DObject.h:
	* InterestId.h:
	* X3DField.h:
	* X3DOutput.cpp:
	* X3DObject.cpp:
	* RequesterId.h:
	* X3DObjectSet.h:
	* X3DBasicNode.h:
	* X3DBaseNode.h:
	* InterestArray.h:
	* X3DObjectSet.cpp:
	* RequesterArray.h:
	* X3DBasicNode.cpp:
	* InterestArray.cpp:
	* X3DBaseNode.cpp:
	* X3DBasicNodeSet.h:
	* RequesterArray.cpp:
	* X3DBasicNodeSet.cpp:
	* X3DFieldDefinition.h:
	* X3DFieldDefinition.cpp: 

2012-09-14  Holger Seelig  <holger.seelig@yahoo.de>

	* SFVec3.h:
	* SFVec2.h:
	* SFVec4.h:
	* X3DObject.h:
	* SFMatrix4.h:
	* SFColor.cpp:
	* SFImage.cpp:
	* SFMatrix3.h:
	* X3DField.h:
	* X3DObject.cpp:
	* SFRotation4.h:
	* X3DBaseNode.h:
	* SFColorRGBA.cpp:
	* X3DArrayField.h:
	* X3DFieldDefinition.h:
	* X3DPropertyNode.cpp: 

2012-09-14  Holger Seelig  <holger.seelig@yahoo.de>

	* findNode:
	* libtitania-x3d.cproj:
	* JavaScript.h:
	* JavaScript.cpp:
	* Scene.h:
	* X3DType.h:
	* Error.h:
	* SFBool.h:
	* Proto.h:
	* SFNode.h:
	* X3DClock.h:
	* Parser.h:
	* Proto.cpp:
	* X3DOutput.h:
	* SFString.h:
	* X3DType.cpp:
	* X3DObject.h:
	* X3DField.h:
	* SFImage.cpp:
	* Parser.cpp:
	* X3DProto.h:
	* HitArray.h:
	* X3DObject.cpp:
	* X3DObject.h:
	* SystemClock.h:
	* X3DObjectSet.h:
	* X3DBrowser.h:
	* MotionBlur.h:
	* HitArray.cpp:
	* X3DContext.h:
	* Statistics.h:
	* ExternProto.h:
	* X3DObject.cpp:
	* X3DBaseNode.h:
	* ProfileInfo.h:
	* DrawingArea.h:
	* X3DBrowser.cpp:
	* ProtoArray.cpp:
	* X3DObjectSet.h:
	* RouteArray.cpp:
	* X3DObjectSet.cpp:
	* X3DBaseNode.cpp:
	* ComponentInfo.h:
	* ExternProto.cpp:
	* X3DObjectSet.cpp:
	* ArrayValues.h:
	* Material.h:
	* ArrayValues.cpp:
	* LOD.h:
	* Layer.h:
	* AudioClip.h:
	* TimeSensor.h:
	* FieldDefinitionSet.h:
	* Switch.h:
	* X3DFieldDefinition.h:
	* ExternProtoArray.cpp:
	* Appearance.h:
	* Script.h:
	* X3DExecutionContext.h:
	* Anchor.h:
	* LayerSet.h:
	* LineSet.h:
	* FieldDefinitionSet.cpp:
	* FieldDefinitionArray.h:
	* Sphere.h:
	* Inline.h:
	* Viewport.h:
	* Transform.h:
	* X3DShapeNode.h:
	* X3DSensorNode.h:
	* ShaderPart.h:
	* X3DFieldDefinitionSet.h:
	* PointSet.h:
	* FieldDefinitionArray.cpp:
	* Viewpoint.h:
	* Extrusion.h:
	* X3DFieldDefinitionArray.h:
	* Billboard.h:
	* X3DFieldDefinitionSet.cpp:
	* X3DBindableNode.h:
	* X3DMaterialNode.h:
	* X3DLayerNode.h:
	* ShaderProgram.h:
	* PackagedShader.h:
	* X3DFieldDefinitionArray.cpp:
	* ImageTexture.h:
	* PixelTexture.h:
	* X3DUrlObject.h:
	* X3DScriptNode.h:
	* GeoViewpoint.h:
	* X3DAppearanceNode.h:
	* IndexedLineSet.h:
	* X3DGroupingNode.h:
	* X3DTextureNode.h:
	* Fog.h:
	* IndexedFaceSet.h:
	* OrthoViewpoint.h:
	* X3DPrototypeInstance.h:
	* X3DGeometryNode.h:
	* NavigationInfo.h:
	* ImageTexture3D.h:
	* X3DTexture2DNode.h:
	* TextureTransform.h:
	* X3DViewpointNode.h:
	* EaseInEaseOut.h:
	* LocalFog.h:
	* ColorInterpolator.h:
	* Background.h:
	* NormalInterpolator.h:
	* ScalarInterpolator.h:
	* X3DInterpolatorNode.h:
	* X3DFogObject.h:
	* PositionInterpolator.h:
	* GeoPositionInterpolator.h:
	* ProximitySensor.h:
	* TextureCoordinateGenerator.h:
	* ImageCubeMapTexture.h:
	* CoordinateInterpolator.h:
	* VisibilitySensor.h:
	* PositionInterpolator2D.h:
	* OrientationInterpolator.h:
	* SplineScalarInterpolator.h:
	* CoordinateInterpolator2D.h:
	* X3DBackgroundNode.h:
	* SplinePositionInterpolator.h:
	* SplinePositionInterpolator2D.h:
	* SquadOrientationInterpolator.h:
	* X3DPointingDeviceSensorNode.h: 

2012-09-14  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* SFNode.h:
	* Scene.cpp:
	* SFImage.cpp:
	* X3DObject.h:
	* ObjectSet.h:
	* X3DBaseNode.h:
	* X3DObject.cpp:
	* ObjectSet.cpp:
	* X3DObjectSet.h:
	* X3DArrayField.h:
	* X3DBaseNode.cpp:
	* X3DObjectSet.cpp:
	* X3DFieldDefinition.h:
	* X3DFieldDefinition.cpp:
	* X3DExecutionContext.cpp: 

2012-09-14  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* X3DObject.h:
	* X3DObject.h:
	* X3DObject.cpp:
	* X3DObjectSet.h:
	* X3DObject.cpp:
	* X3DObjectSet.cpp:
	* X3DBindableNode.cpp: 

2012-09-13  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DType.h:
	* X3DOutput.h:
	* X3DType.cpp:
	* X3DObject.h:
	* X3DOutput.cpp:
	* X3DObject.cpp:
	* X3DObjectSet.h:
	* X3DBasicNode.h:
	* X3DObjectSet.cpp:
	* X3DBasicNode.cpp:
	* X3DBasicNodeSet.h:
	* X3DBasicNodeSet.cpp: 

2012-09-13  Holger Seelig  <holger.seelig@yahoo.de>

	* Base:
	* libtitania-x3d.cproj:
	* X3DType.h:
	* X3DType.cpp:
	* X3DOutput.h:
	* X3DField.h:
	* X3DObject.h:
	* RequesterId.h:
	* X3DOutput.cpp:
	* X3DObject.cpp:
	* X3DBrowser.cpp:
	* X3DRenderer.cpp:
	* X3DExecutionContext.cpp:
	* X3DViewpointNode.cpp: 

2012-09-12  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.pidb:
	* libtitania-x3d.cproj:
	* Browser.h:
	* X3DBrowser.h:
	* Renderer.h:
	* Renderer.cpp:
	* X3DRenderer.h:
	* X3DRenderer.cpp:
	* Viewport.h:
	* Viewport.cpp:
	* X3DLayerNode.h:
	* X3DLayerNode.cpp: 

2012-09-12  Holger Seelig  <holger.seelig@yahoo.de>

	* MFNode.h:
	* Route.h:
	* Route.cpp:
	* MFNode.cpp:
	* Parser.cpp:
	* X3DBaseNode.h:
	* ExternProto.h:
	* ImportedNode.h:
	* X3DBaseNode.cpp:
	* X3DArrayField.h:
	* ExternProto.cpp:
	* ImportedNode.cpp:
	* TimeSensor.cpp: 

2012-09-12  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.pidb:
	* SFNode.h:
	* ExternProto.h:
	* ExternProto.cpp: 

2012-09-12  Holger Seelig  <holger.seelig@yahoo.de>

	* Route.h:
	* Scene.h:
	* Proto.h:
	* Route.cpp:
	* Scene.cpp:
	* Browser.h:
	* Proto.cpp:
	* X3DProto.h:
	* X3DParser.h:
	* Browser.cpp:
	* Statistics.h:
	* MotionBlur.h:
	* ExternProto.h:
	* ProfileInfo.h:
	* X3DBaseNode.h:
	* X3DParser.cpp:
	* Statistics.cpp:
	* Text.h:
	* MotionBlur.cpp:
	* ProfileInfo.cpp:
	* X3DBaseNode.cpp:
	* ExternProto.cpp:
	* ComponentInfo.h:
	* Text.cpp:
	* Sound.h:
	* Shape.h:
	* ComponentInfo.cpp:
	* SignalPdu.h:
	* Sound.cpp:
	* Layout.h:
	* Shape.cpp:
	* Material.h:
	* LOD.h:
	* Layer.h:
	* Box.h:
	* NurbsSet.h:
	* FontStyle.h:
	* Group.h:
	* WorldInfo.h:
	* Layout.cpp:
	* Color.h:
	* Cone.h:
	* AudioClip.h:
	* Contour2D.h:
	* Switch.h:
	* SignalPdu.cpp:
	* ReceiverPdu.h:
	* TimeSensor.h:
	* Group.cpp:
	* NurbsCurve.h:
	* NurbsSet.cpp:
	* WorldInfo.cpp:
	* Layer.cpp:
	* Arc2D.h:
	* FontStyle.cpp:
	* Script.h:
	* LOD.cpp:
	* Appearance.h:
	* Material.cpp:
	* HAnimSite.h:
	* Box.cpp:
	* MetadataSet.h:
	* Normal.h:
	* ReceiverPdu.cpp:
	* Sphere.h:
	* LayerSet.h:
	* Cone.cpp:
	* Viewport.h:
	* Switch.cpp:
	* Contour2D.cpp:
	* GeoLOD.h:
	* LineSet.h:
	* Color.cpp:
	* AudioClip.cpp:
	* Anchor.h:
	* HAnimJoint.h:
	* Inline.h:
	* Disk2D.h:
	* TimeSensor.cpp:
	* MetadataBool.h:
	* Transform.h:
	* EspduTransform.h:
	* LayoutLayer.h:
	* ScreenGroup.h:
	* MetadataSet.cpp:
	* NurbsCurve.cpp:
	* Arc2D.cpp:
	* Appearance.cpp:
	* SpotLight.h:
	* Script.cpp:
	* ShaderPart.h:
	* LayoutGroup.h:
	* PointSet.h:
	* Normal.cpp:
	* MetadataFloat.h:
	* X3DExecutionContext.cpp:
	* NurbsCurve2D.h:
	* TransmitterPdu.h:
	* HAnimSite.cpp:
	* Anchor.cpp:
	* MetadataString.h:
	* ColorRGBA.h:
	* ClipPlane.h:
	* QuadSet.h:
	* LineSet.cpp:
	* HAnimJoint.cpp:
	* Viewport.cpp:
	* Circle2D.h:
	* Cylinder.h:
	* Sphere.cpp:
	* Inline.cpp:
	* CADPart.h:
	* MetadataBool.cpp:
	* LayerSet.cpp:
	* HAnimSegment.h:
	* CADFace.h:
	* Disk2D.cpp:
	* GeoLOD.cpp:
	* MetadataDouble.h:
	* PointLight.h:
	* LayoutLayer.cpp:
	* Extrusion.h:
	* Viewpoint.h:
	* LayoutGroup.cpp:
	* FillProperties.h:
	* LineProperties.h:
	* Coordinate.h:
	* CADLayer.h:
	* PointSet.cpp:
	* HAnimHumanoid.h:
	* Collision.h:
	* Billboard.h:
	* DISEntityManager.h:
	* EspduTransform.cpp:
	* StaticGroup.h:
	* Transform.cpp:
	* MetadataFloat.cpp:
	* MetadataInteger.h:
	* TransmitterPdu.cpp:
	* GeoOrigin.h:
	* SpotLight.cpp:
	* ShaderPart.cpp:
	* ScreenGroup.cpp:
	* NurbsCurve2D.cpp:
	* CADFace.cpp:
	* TriangleSet.h:
	* QuadSet.cpp:
	* Circle2D.cpp:
	* ArcClose2D.h:
	* HAnimDisplacer.h:
	* Polyline2D.h:
	* ProgramShader.h:
	* CADPart.cpp:
	* Cylinder.cpp:
	* ColorDamper.h:
	* HAnimSegment.cpp:
	* LoadSensor.h:
	* MetadataDouble.cpp:
	* ClipPlane.cpp:
	* ColorRGBA.cpp:
	* MetadataString.cpp:
	* PointLight.cpp:
	* ShaderProgram.h:
	* PickableGroup.h:
	* DISEntityManager.cpp:
	* Rectangle2D.h:
	* Extrusion.cpp:
	* Coordinate.cpp:
	* LinePickSensor.h:
	* PackagedShader.h:
	* Polypoint2D.h:
	* ComposedShader.h:
	* HAnimHumanoid.cpp:
	* MetadataInteger.cpp:
	* Collision.cpp:
	* Billboard.cpp:
	* Viewpoint.cpp:
	* LineProperties.cpp:
	* FillProperties.cpp:
	* CADLayer.cpp:
	* PixelTexture.h:
	* ImageTexture.h:
	* CoordinateDouble.h:
	* StaticGroup.cpp:
	* MovieTexture.h:
	* ScreenFontStyle.h:
	* GeoOrigin.cpp:
	* GeoLocation.h:
	* ScalarChaser.h:
	* TwoSidedMaterial.h:
	* GeoMetadata.h:
	* MultiTexture.h:
	* GeoTransform.h:
	* LoadSensor.cpp:
	* Polyline2D.cpp:
	* ArcClose2D.cpp:
	* NurbsPatchSurface.h:
	* TriangleSet.cpp:
	* ColorDamper.cpp:
	* ContourPolyline2D.h:
	* NurbsSwungSurface.h:
	* GeoViewpoint.h:
	* PickableGroup.cpp:
	* CADAssembly.h:
	* X3DUrlObject.h:
	* HAnimDisplacer.cpp:
	* PointPickSensor.h:
	* NurbsSweptSurface.h:
	* ProgramShader.cpp:
	* ShaderProgram.cpp:
	* TriangleSet2D.h:
	* ScalarChaser.cpp:
	* PositionDamper.h:
	* PositionChaser.h:
	* ComposedShader.cpp:
	* LinePickSensor.cpp:
	* GeoCoordinate.h:
	* GeoLocation.cpp:
	* GeoMetadata.cpp:
	* Fog.h:
	* Polypoint2D.cpp:
	* Rectangle2D.cpp:
	* VolumePickSensor.h:
	* ScreenFontStyle.cpp:
	* ImageTexture.cpp:
	* PixelTexture.cpp:
	* CoordinateDouble.cpp:
	* TriangleFanSet.h:
	* IndexedLineSet.h:
	* Contact.h:
	* ElevationGrid.h:
	* MultiTexture.cpp:
	* TwoSidedMaterial.cpp:
	* MovieTexture.cpp:
	* PackagedShader.cpp:
	* DISEntityTypeMapping.h:
	* DirectionalLight.h:
	* NavigationInfo.h:
	* CADAssembly.cpp:
	* ViewpointGroup.h:
	* GeoViewpoint.cpp:
	* GeoTransform.cpp:
	* IndexedFaceSet.h:
	* X3DPrototypeInstance.h:
	* GeoTouchSensor.h:
	* KeySensor.h:
	* OrthoViewpoint.h:
	* NurbsSweptSurface.cpp:
	* NurbsPatchSurface.cpp:
	* ContourPolyline2D.cpp:
	* X3DUrlObject.cpp:
	* NurbsSwungSurface.cpp:
	* PointPickSensor.cpp:
	* NurbsTrimmedSurface.h:
	* PositionChaser.cpp:
	* ImageTexture3D.h:
	* TexCoordDamper2D.h:
	* PositionDamper2D.h:
	* PixelTexture3D.h:
	* PositionDamper.cpp:
	* PositionChaser2D.h:
	* TextureTransform.h:
	* CoordinateDamper.h:
	* RigidBody.h:
	* BallJoint.h:
	* ElevationGrid.cpp:
	* Contact.cpp:
	* IndexedLineSet.cpp:
	* TriangleFanSet.cpp:
	* Fog.cpp:
	* GeoCoordinate.cpp:
	* IndexedQuadSet.h:
	* TimeTrigger.h:
	* TriangleStripSet.h:
	* VolumePickSensor.cpp:
	* DISEntityTypeMapping.cpp:
	* TriangleSet2D.cpp:
	* GeoElevationGrid.h:
	* ConeEmitter.h:
	* MotorJoint.h:
	* EaseInEaseOut.h:
	* OrientationDamper.h:
	* OrientationChaser.h:
	* IndexedFaceSet.cpp:
	* NavigationInfo.cpp:
	* OrthoViewpoint.cpp:
	* TextureCoordinate.h:
	* TextureProperties.h:
	* GeoTouchSensor.cpp:
	* DirectionalLight.cpp:
	* NurbsTrimmedSurface.cpp:
	* ViewpointGroup.cpp:
	* KeySensor.cpp:
	* PrimitivePickSensor.h:
	* X3DPrototypeInstance.cpp:
	* BooleanToggle.h:
	* IndexedQuadSet.cpp:
	* ImageTexture3D.cpp:
	* TimeTrigger.cpp:
	* TriangleStripSet.cpp:
	* StringSensor.h:
	* PositionDamper2D.cpp:
	* SliderJoint.h:
	* NurbsTextureCoordinate.h:
	* FloatVertexAttribute.h:
	* BooleanFilter.h:
	* RigidBody.cpp:
	* BallJoint.cpp:
	* IndexedTriangleSet.h:
	* PointEmitter.h:
	* PositionChaser2D.cpp:
	* TextureTransform.cpp:
	* TexCoordDamper2D.cpp:
	* CoordinateDamper.cpp:
	* PixelTexture3D.cpp:
	* ConeEmitter.cpp:
	* TextureProperties.cpp:
	* TextureCoordinate.cpp:
	* OrientationChaser.cpp:
	* BooleanTrigger.h:
	* GeoProximitySensor.h:
	* GeoElevationGrid.cpp:
	* EaseInEaseOut.cpp:
	* PrimitivePickSensor.cpp:
	* LocalFog.h:
	* VolumeEmitter.h:
	* ComposedTexture3D.h:
	* OrientationDamper.cpp:
	* MotorJoint.cpp:
	* IntegerTrigger.h:
	* StringSensor.cpp:
	* Matrix4VertexAttribute.h:
	* Matrix3VertexAttribute.h:
	* NurbsSurfaceInterpolator.h:
	* NurbsTextureCoordinate.cpp:
	* FloatVertexAttribute.cpp:
	* SurfaceEmitter.h:
	* PointEmitter.cpp:
	* TextureTransform3D.h:
	* BooleanToggle.cpp:
	* BooleanFilter.cpp:
	* SliderJoint.cpp:
	* IndexedTriangleSet.cpp:
	* ParticleSystem.h:
	* VolumeEmitter.cpp:
	* IntegerSequencer.h:
	* LocalFog.cpp:
	* IndexedTriangleFanSet.h:
	* ComposedTexture3D.cpp:
	* MultiTextureTransform.h:
	* IntegerTrigger.cpp:
	* UniversalJoint.h:
	* GeoProximitySensor.cpp:
	* BooleanTrigger.cpp:
	* TextureCoordinate3D.h:
	* TextureCoordinate4D.h:
	* BooleanSequencer.h:
	* NurbsPositionInterpolator.h:
	* PolylineEmitter.h:
	* ColorInterpolator.h:
	* Background.h:
	* CollisionSpace.h:
	* TextureTransform3D.cpp:
	* ScalarInterpolator.h:
	* NormalInterpolator.h:
	* NurbsSurfaceInterpolator.cpp:
	* MultiTextureCoordinate.h:
	* TouchSensor.h:
	* CollidableShape.h:
	* SurfaceEmitter.cpp:
	* PlaneSensor.h:
	* CollisionSensor.h:
	* ExplosionEmitter.h:
	* Matrix4VertexAttribute.cpp:
	* Matrix3VertexAttribute.cpp:
	* ParticleSystem.cpp:
	* WindPhysicsModel.h:
	* PolylineEmitter.cpp:
	* ColorInterpolator.cpp:
	* TextureCoordinate3D.cpp:
	* IndexedTriangleFanSet.cpp:
	* IntegerSequencer.cpp:
	* NurbsPositionInterpolator.cpp:
	* UniversalJoint.cpp:
	* MultiTextureTransform.cpp:
	* Background.cpp:
	* CollidableOffset.h:
	* SphereSensor.h:
	* CollisionSpace.cpp:
	* BooleanSequencer.cpp:
	* TextureCoordinate4D.cpp:
	* IndexedTriangleStripSet.h:
	* CollisionSensor.cpp:
	* ExplosionEmitter.cpp:
	* FogCoordinate.h:
	* GeoPositionInterpolator.h:
	* PositionInterpolator.h:
	* ScalarInterpolator.cpp:
	* WindPhysicsModel.cpp:
	* CollidableShape.cpp:
	* MultiTextureCoordinate.cpp:
	* NormalInterpolator.cpp:
	* TouchSensor.cpp:
	* NurbsOrientationInterpolator.h:
	* PlaneSensor.cpp:
	* ProximitySensor.h:
	* CollidableOffset.cpp:
	* GravityPhysicsModel.h:
	* TransformSensor.h:
	* BoundedPhysicsModel.h:
	* SphereSensor.cpp:
	* IndexedTriangleStripSet.cpp:
	* CylinderSensor.h:
	* RigidBodyCollection.h:
	* CoordinateInterpolator.h:
	* CollisionCollection.h:
	* NurbsOrientationInterpolator.cpp:
	* TextureTransformMatrix3D.h:
	* VisibilitySensor.h:
	* FogCoordinate.cpp:
	* PositionInterpolator.cpp:
	* ImageCubeMapTexture.h:
	* TextureCoordinateGenerator.h:
	* PositionInterpolator2D.h:
	* GeoPositionInterpolator.cpp:
	* CylinderSensor.cpp:
	* GravityPhysicsModel.cpp:
	* BoundedPhysicsModel.cpp:
	* OrientationInterpolator.h:
	* ProximitySensor.cpp:
	* DoubleAxisHingeJoint.h:
	* TransformSensor.cpp:
	* SingleAxisHingeJoint.h:
	* CollisionCollection.cpp:
	* TextureBackground.h:
	* CoordinateInterpolator.cpp:
	* TextureTransformMatrix3D.cpp:
	* CoordinateInterpolator2D.h:
	* TextureCoordinateGenerator.cpp:
	* ImageCubeMapTexture.cpp:
	* RigidBodyCollection.cpp:
	* PositionInterpolator2D.cpp:
	* SplineScalarInterpolator.h:
	* VisibilitySensor.cpp:
	* ComposedCubeMapTexture.h:
	* OrientationInterpolator.cpp:
	* SingleAxisHingeJoint.cpp:
	* DoubleAxisHingeJoint.cpp:
	* SplineScalarInterpolator.cpp:
	* CoordinateInterpolator2D.cpp:
	* SplinePositionInterpolator.h:
	* TextureBackground.cpp:
	* GeneratedCubeMapTexture.h:
	* ComposedCubeMapTexture.cpp:
	* GeneratedCubeMapTexture.cpp:
	* SplinePositionInterpolator2D.h:
	* SquadOrientationInterpolator.h:
	* SplinePositionInterpolator.cpp:
	* SplinePositionInterpolator2D.cpp:
	* SquadOrientationInterpolator.cpp: 

2012-09-12  Holger Seelig  <holger.seelig@yahoo.de>

	* Route.h:
	* SFNode.h:
	* Route.cpp:
	* MFNode.cpp:
	* Parser.cpp:
	* ExternProto.h:
	* X3DBaseNode.h:
	* ImportedNode.h:
	* ExternProto.cpp:
	* X3DBaseNode.cpp:
	* ImportedNode.cpp:
	* X3DExecutionContext.cpp:
	* X3DUrlObject.cpp: 

2012-09-12  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* X3DOutput.h:
	* Requester.h:
	* Browser.h:
	* X3DObject.h:
	* NodeIndex.h:
	* X3DOutput.cpp:
	* X3DContext.h:
	* X3DBrowser.h:
	* X3DObject.cpp:
	* ProfileInfo.h:
	* NodeIndex.cpp:
	* X3DNodeIndex.h:
	* X3DBrowser.cpp:
	* RequesterArray.h:
	* ProfileInfo.cpp:
	* ComponentInfo.h:
	* X3DBaseNode.cpp:
	* X3DNodeIndex.cpp:
	* SupportedNodes.h:
	* ComponentInfo.cpp:
	* NodeTypeArray.cpp:
	* SupportedNodes.cpp:
	* ProfileInfoArray.h:
	* SupportedProfiles.h:
	* ComponentInfoArray.h:
	* ExternProtoArray.cpp:
	* X3DFieldDefinition.h:
	* SupportedComponents.h:
	* ExportedNodeArray.cpp:
	* X3DProfileInfoArray.h:
	* SupportedProfiles.cpp:
	* X3DExecutionContext.h:
	* TimeSensor.cpp:
	* X3DFieldDefinition.cpp:
	* X3DProfileInfoArray.cpp:
	* SupportedComponents.cpp:
	* X3DComponentInfoArray.h:
	* LayerSet.cpp:
	* FieldDefinitionArray.cpp:
	* X3DComponentInfoArray.cpp:
	* X3DLayerNode.cpp:
	* X3DMetadataObject.cpp:
	* X3DUrlObject.cpp:
	* X3DPickableObject.cpp:
	* X3DBoundedObject.cpp:
	* X3DViewpointNode.cpp:
	* X3DFogObject.cpp: 

2012-09-11  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* Scene.h:
	* Parser.h:
	* Scene.cpp:
	* X3DOutput.h:
	* Parser.cpp:
	* X3DField.h:
	* NodeIndex.h:
	* X3DObject.h:
	* X3DOutput.cpp:
	* X3DContext.h:
	* X3DBrowser.h:
	* NodeIndex.cpp:
	* ProfileInfo.h:
	* X3DBaseNode.h:
	* X3DObject.cpp:
	* X3DBrowser.cpp:
	* OutputProvider.h:
	* X3DContext.cpp:
	* X3DBaseNode.cpp:
	* ProfileInfo.cpp:
	* ComponentInfo.h:
	* X3DArrayField.h:
	* OutputProvider.cpp:
	* ComponentInfo.cpp:
	* ProfileInfoArray.h:
	* SupportedProfiles.h:
	* X3DFieldDefinition.h:
	* ComponentInfoArray.h:
	* ProfileInfoArray.cpp:
	* SupportedComponents.h:
	* SupportedProfiles.cpp:
	* X3DExecutionContext.h:
	* X3DExecutionContext.cpp:
	* SupportedComponents.cpp: 

2012-09-11  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.pidb:
	* X3DObject.cpp:
	* X3DBaseNode.cpp: 

2012-09-11  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* MFNode.h:
	* MFNode.cpp:
	* X3DField.h:
	* X3DObject.cpp:
	* X3DArrayField.h:
	* X3DBaseNode.cpp:
	* X3DBaseObject.h:
	* X3DBaseObject.cpp:
	* X3DMetadataObject.h:
	* X3DUrlObject.h:
	* X3DMetadataObject.cpp:
	* X3DBoundedObject.h:
	* X3DPickableObject.h:
	* X3DUrlObject.cpp:
	* X3DPickableObject.cpp:
	* X3DBoundedObject.cpp:
	* X3DFogObject.h:
	* X3DProgrammableShaderObject.h:
	* X3DFogObject.cpp:
	* X3DProgrammableShaderObject.cpp: 

2012-09-11  Holger Seelig  <holger.seelig@yahoo.de>

	* X3D.cpp:
	* Scene.cpp:
	* Browser.cpp:
	* NodeIndex.cpp:
	* OutputProvider.h:
	* DrawingArea.cpp:
	* OutputProvider.cpp:
	* X3DBrowserNode.cpp:
	* X3DUrlObject.cpp: 

2012-09-11  Holger Seelig  <holger.seelig@yahoo.de>

	* X3D.h:
	* X3D.cpp:
	* Basic:
	* libtitania-x3d.md.pc:
	* libtitania-x3d.cproj:
	* JavaScript.h:
	* SFNode.h:
	* MFNode.h:
	* SFVec3.h:
	* SFVec4.h:
	* Route.h:
	* RegEx.h:
	* Error.h:
	* Scene.h:
	* Proto.h:
	* SFVec2.h:
	* SFBool.h:
	* SFTime.h:
	* Router.h:
	* MFInt32.h:
	* Parser.h:
	* SFColor.h:
	* SFImage.h:
	* Requester.h:
	* Route.cpp:
	* SFNode.cpp:
	* RegEx.cpp:
	* MFNode.cpp:
	* Error.cpp:
	* Scene.cpp:
	* SFString.h:
	* Proto.cpp:
	* Router.cpp:
	* X3DProto.h:
	* X3DScalar.h:
	* SFMatrix4.h:
	* Parser.cpp:
	* SFMatrix3.h:
	* X3DField.h:
	* Image.h:
	* Browser.cpp:
	* X3DParser.h:
	* SFString.cpp:
	* X3DObject.h:
	* ObjectSet.h:
	* SFRotation4.h:
	* X3DBrowser.h:
	* SbPlane.h:
	* RouteArray.h:
	* SbBox3f.h:
	* ArrayFields.h:
	* X3DProto.cpp:
	* X3DContext.h:
	* ProtoArray.h:
	* SFColorRGBA.h:
	* ExternProto.h:
	* ObjectSet.cpp:
	* X3DParser.cpp:
	* ProfileInfo.h:
	* X3DBaseNode.h:
	* X3DObject.cpp:
	* RouteArray.cpp:
	* X3DConstants.h:
	* ImportedNode.h:
	* X3DContext.cpp:
	* ProtoArray.cpp:
	* RequesterArray.h:
	* OutputProvider.h:
	* X3DBrowser.cpp:
	* ExternProto.cpp:
	* X3DArrayField.h:
	* NodeTypeArray.h:
	* X3DBaseObject.h:
	* ProfileInfo.cpp:
	* X3DBaseNode.cpp:
	* ComponentInfo.h:
	* DrawingArea.cpp:
	* RequesterArray.cpp:
	* ViewVolume.cpp:
	* ImportedNode.cpp:
	* X3DBrowserNode.h:
	* OutputProvider.cpp:
	* ComponentInfo.cpp:
	* X3DNode.h:
	* NodeTypeArray.cpp:
	* X3DBaseObject.cpp:
	* ArrayValues.h:
	* ExternProtoArray.h:
	* GarbageCollector.h:
	* X3DBrowserNode.cpp:
	* ProfileInfoArray.h:
	* SupportedProfiles.h:
	* ImportedNodeArray.h:
	* X3DFieldDefinition.h:
	* ProfileInfoArray.cpp:
	* ComponentInfoArray.h:
	* FieldDefinitionSet.h:
	* ExternProtoArray.cpp:
	* GarbargeCollector.cpp:
	* X3DExecutionContext.h:
	* SupportedComponents.h:
	* ImportedNodeArray.cpp:
	* ComponentInfoArray.cpp:
	* X3DFieldDefinition.cpp:
	* FieldDefinitionSet.cpp:
	* FieldDefinitionArray.h:
	* X3DExecutionContext.cpp:
	* Script.cpp:
	* Sphere.cpp:
	* FieldDefinitionArray.cpp:
	* X3DShapeNode.cpp:
	* X3DLayerNode.h:
	* Viewpoint.cpp:
	* Extrusion.cpp:
	* X3DMetadataObject.h:
	* X3DLayerNode.cpp:
	* X3DUrlObject.h:
	* X3DUrlObject.cpp:
	* X3DPrototypeInstance.h:
	* X3DPickableObject.h:
	* X3DBoundedObject.h:
	* Fog.cpp:
	* X3DPrototypeInstance.cpp:
	* X3DViewpointNode.cpp:
	* Background.cpp:
	* X3DFogObject.h:
	* NormalInterpolator.cpp:
	* X3DProgrammableShaderObject.h:
	* X3DBackgroundNode.cpp: 

2012-09-11  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.pidb:
	* libtitania-x3d.md.pc:
	* libtitania-x3d.cproj:
	* FieldValues:
	* SFTime.h:
	* SFBool.h:
	* SFVec4.h:
	* SFVec3.h:
	* SFVec2.h:
	* SFColor.h:
	* SFImage.h:
	* SFVec4.cpp:
	* SFString.h:
	* SFVec2.cpp:
	* SFVec3.cpp:
	* SFMatrix3.h:
	* SFMatrix4.h:
	* Matrix.h:
	* X3DScalar.h:
	* SFColor.cpp:
	* Image.h:
	* SbLine.h:
	* SbPlane.h:
	* ArrayFields.h:
	* SbBox3f.h:
	* SFColorRGBA.h:
	* SFMatrix3.cpp:
	* SFMatrix4.cpp:
	* SFRotation4.h:
	* Image.cpp:
	* SFColorRGBA.cpp:
	* SFRotation4.cpp:
	* ViewVolume.cpp:
	* FieldValues.h:
	* ArrayValues.h:
	* Generator.cpp:
	* LightContainer.h:
	* ShapeContainer.h:
	* ArrayValues.cpp:
	* ShapeContainer.cpp:
	* X3DShapeNode.cpp:
	* Extrusion.cpp:
	* Billboard.cpp:
	* Viewpoint.cpp:
	* ColorInterpolator.cpp:
	* NormalInterpolator.cpp:
	* ProximitySensor.cpp:
	* X3DBackgroundNode.h:
	* OrientationInterpolator.cpp:
	* X3DBackgroundNode.cpp: 

2012-09-10  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* Values: 

2012-09-10  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* Values:
	* X3DBrowser.h:
	* X3DBaseNode.cpp:
	* X3DBrowser.cpp:
	* ViewVolume.cpp:
	* ArrayTypes.h:
	* ArrayValues.h:
	* FieldValues.h:
	* ArrayTypes.cpp:
	* ArrayValues.cpp:
	* Extrusion.cpp:
	* ProximitySensor.cpp: 

2012-09-10  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DField.h:
	* Matrix.h:
	* SFMatrix4.h:
	* Viewer.cpp:
	* Browser.cpp:
	* X3DBrowser.h:
	* OutputProvider.h:
	* X3DBrowser.cpp:
	* OutputProvider.cpp:
	* Generator.h:
	* ViewVolume.cpp:
	* Generator.cpp:
	* LightContainer.h:
	* ShapeContainer.cpp:
	* LOD.cpp:
	* Transform.cpp:
	* X3DShapeNode.cpp:
	* X3DLayerNode.h:
	* Extrusion.cpp:
	* X3DLayerNode.cpp:
	* TextureTransform.cpp:
	* X3DViewpointNode.cpp:
	* X3DBackgroundNode.cpp: 

2012-09-10  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj: 

2012-09-09  Holger Seelig  <holger.seelig@yahoo.de>

	* X3D.h:
	* Time.h:
	* Fields.h:
	* JavaScript.h:
	* Error.h:
	* Route.h:
	* Components.h:
	* RegEx.h:
	* Proto.h:
	* Hit.h:
	* JavaScript.cpp:
	* SFBool.h:
	* SFTime.h:
	* World.h:
	* SFVec2.h:
	* SFVec3.h:
	* Scene.h:
	* X3DField.h:
	* SFNode.h:
	* X3DProto.h:
	* MFNode.h:
	* SFVec4.h:
	* X3DClock.h:
	* X3DObject.h:
	* DIS.h:
	* Requester.h:
	* Router.h:
	* Parser.h:
	* ObjectSet.h:
	* MFInt32.h:
	* SFImage.h:
	* Viewer.h:
	* SFColor.h:
	* Browser.h:
	* SFString.h:
	* Time.h:
	* X3DContext.h:
	* Text.h:
	* RouteArray.h:
	* ProtoArray.h:
	* Core.h:
	* X3DScalar.h:
	* strfsize.h:
	* NURBS.h:
	* Matrix.h:
	* X3DBaseNode.h:
	* Parser.cpp:
	* SFMatrix3.h:
	* HitArray.h:
	* ExternProto.h:
	* ProfileInfo.h:
	* Sound.h:
	* Shape.h:
	* SFMatrix4.h:
	* ImportedNode.h:
	* H-Anim.h:
	* SbLine.h:
	* Layout.h:
	* NodeIndex.h:
	* X3DConstants.h:
	* X3DParser.h:
	* SystemClock.h:
	* SteadyClock.h:
	* SFRotation4.h:
	* SbBox3f.h:
	* X3DBaseObject.h:
	* SFColorRGBA.h:
	* Picking.h:
	* ComponentInfo.h:
	* X3DArrayField.h:
	* ArrayFields.h:
	* Statistics.h:
	* X3DBrowser.h:
	* MotionBlur.h:
	* NodeTypeArray.h:
	* SbPlane.h:
	* Renderer.h:
	* Shaders.h:
	* jsfield.h:
	* geturl.h:
	* Grouping.h:
	* Layering.h:
	* jsFields.h:
	* jsstring.h:
	* Lighting.h:
	* RequesterArray.h:
	* DrawingArea.h:
	* OutputProvider.h:
	* Texturing.h:
	* ExportedNode.h:
	* Followers.h:
	* Rendering.h:
	* ViewVolume.h:
	* Text.h:
	* X3DBrowser.cpp:
	* Scripting.h:
	* jsBrowser.h:
	* jsGlobals.h:
	* Statistics.cpp:
	* Navigation.h:
	* Generator.h:
	* Geometry2D.h:
	* Geospatial.h:
	* Networking.h:
	* jsX3DField.h:
	* Geometry3D.h:
	* jsX3DScene.h:
	* GarbageCollector.h:
	* ExternProtoArray.h:
	* ProfileInfoArray.h:
	* Shape.h:
	* CADGeometry.h:
	* jsX3DObject.h:
	* uncompress.h:
	* PointingDevice.h:
	* Texturing3D.h:
	* ImportedNodeArray.h:
	* Sound.h:
	* X3DFieldDefinition.h:
	* Generator.cpp:
	* FieldDefinitionSet.h:
	* Image.h:
	* X3DNode.h:
	* ComponentInfoArray.h:
	* Layout.h:
	* X3DExecutionContext.h:
	* SignalPdu.h:
	* LightContainer.h:
	* ShapeContainer.h:
	* Interpolation.h:
	* EventUtilities.h:
	* Box.h:
	* WorldInfo.h:
	* Layer.h:
	* FontStyle.h:
	* FieldDefinitionArray.h:
	* NurbsSet.h:
	* LOD.h:
	* SupportedProfiles.h:
	* Group.h:
	* Material.h:
	* ExportedNodeArray.h:
	* Cone.h:
	* KeyDeviceSensor.h:
	* AudioClip.h:
	* Color.h:
	* ReceiverPdu.h:
	* jsMFBool.h:
	* jsSFNode.h:
	* jsMFNode.h:
	* TimeSensor.h:
	* X3DExecutionContext.cpp:
	* Switch.h:
	* Contour2D.h:
	* jsMFTime.h:
	* jsX3DArrayField.h:
	* ParticleSystems.h:
	* Appearance.h:
	* RigidBodyPhysics.h:
	* MetadataSet.h:
	* X3DInfoNode.h:
	* CubeMapTexturing.h:
	* Normal.h:
	* Script.h:
	* NurbsCurve.h:
	* Arc2D.h:
	* jsSFVec4f.h:
	* jsSFVec4d.h:
	* jsSFVec3d.h:
	* jsMFImage.h:
	* jsSFVec3f.h:
	* jsMFVec3f.h:
	* jsMFInt32.h:
	* jsSFImage.h:
	* jsMFVec3d.h:
	* HAnimSite.h:
	* jsSFVec2d.h:
	* jsMFVec2d.h:
	* jsMFVec2f.h:
	* jsMFColor.h:
	* jsSFVec2f.h:
	* jsSFColor.h:
	* SupportedComponents.h:
	* jsMFFloat.h:
	* jsMFVec4f.h:
	* jsMFVec4d.h:
	* jsMFString.h:
	* LineSet.h:
	* jsMFDouble.h:
	* Inline.h:
	* GeoLOD.h:
	* Sphere.h:
	* MetadataBool.h:
	* Anchor.h:
	* HAnimJoint.h:
	* Viewport.h:
	* ArrayTypes.h:
	* LayerSet.h:
	* Disk2D.h:
	* X3DChildNode.h:
	* ScreenGroup.h:
	* PointSet.h:
	* EspduTransform.h:
	* LayoutLayer.h:
	* LayoutGroup.h:
	* X3DSensorNode.h:
	* Transform.h:
	* NurbsCurve2D.h:
	* LightContainerArray.h:
	* TransmitterPdu.h:
	* X3DSoundNode.h:
	* jsProfileInfoArray.h:
	* MetadataFloat.h:
	* SpotLight.h:
	* X3DShapeNode.h:
	* ShaderPart.h:
	* PointLight.h:
	* jsSFMatrix3d.h:
	* jsSFMatrix3f.h:
	* jsSFRotation.h:
	* Circle2D.h:
	* jsMFMatrix4f.h:
	* ClipPlane.h:
	* QuadSet.h:
	* CADFace.h:
	* jsMFMatrix3d.h:
	* Cylinder.h:
	* MetadataString.h:
	* jsMFMatrix3f.h:
	* MetadataDouble.h:
	* CADPart.h:
	* HAnimSegment.h:
	* ColorRGBA.h:
	* jsVrmlMatrix.h:
	* jsSFMatrix4f.h:
	* jsSFMatrix4d.h:
	* jsMFMatrix4d.h:
	* jsMFRotation.h:
	* EnvironmentalSensor.h:
	* GeoOrigin.h:
	* DISEntityManager.h:
	* Coordinate.h:
	* Billboard.h:
	* PointingDeviceSensor.h:
	* jsComponentInfoArray.h:
	* Viewpoint.h:
	* X3DPropertyNode.h:
	* EnvironmentalEffects.h:
	* CADLayer.h:
	* Collision.h:
	* HAnimHumanoid.h:
	* X3DLayoutNode.h:
	* X3DBindableNode.h:
	* LineProperties.h:
	* MetadataInteger.h:
	* Extrusion.h:
	* FillProperties.h:
	* jsX3DFieldDefinition.h:
	* StaticGroup.h:
	* jsSFColorRGBA.h:
	* jsMFColorRGBA.h:
	* Polyline2D.h:
	* ArcClose2D.h:
	* ShaderProgram.h:
	* ProgramShader.h:
	* X3DShaderNode.h:
	* LoadSensor.h:
	* PickableGroup.h:
	* ColorDamper.h:
	* X3DFontStyleNode.h:
	* X3DLightNode.h:
	* HAnimDisplacer.h:
	* X3DLayerNode.h:
	* X3DMaterialNode.h:
	* TriangleSet.h:
	* jsX3DExecutionContext.h:
	* ScreenFontStyle.h:
	* X3DMetadataObject.h:
	* MultiTexture.h:
	* TwoSidedMaterial.h:
	* CoordinateDouble.h:
	* ScalarChaser.h:
	* GeoMetadata.h:
	* PackagedShader.h:
	* GeoLocation.h:
	* LinePickSensor.h:
	* Rectangle2D.h:
	* PixelTexture.h:
	* X3DColorNode.h:
	* Polypoint2D.h:
	* ImageTexture.h:
	* MovieTexture.h:
	* ComposedShader.h:
	* jsFieldDefinitionArray.h:
	* ContourPolyline2D.h:
	* X3DDamperNode.h:
	* X3DChaserNode.h:
	* PointPickSensor.h:
	* NurbsPatchSurface.h:
	* X3DUrlObject.h:
	* X3DNormalNode.h:
	* NurbsSweptSurface.h:
	* X3DScriptNode.h:
	* CADAssembly.h:
	* GeoTransform.h:
	* NurbsSwungSurface.h:
	* GeoViewpoint.h:
	* X3DAppearanceNode.h:
	* X3DGroupingNode.h:
	* PositionChaser.h:
	* Fog.h:
	* PositionDamper.h:
	* X3DSoundSourceNode.h:
	* Contact.h:
	* GeoCoordinate.h:
	* TriangleFanSet.h:
	* X3DTextureNode.h:
	* VolumePickSensor.h:
	* IndexedLineSet.h:
	* X3DViewportNode.h:
	* DISEntityTypeMapping.h:
	* TriangleSet2D.h:
	* ElevationGrid.h:
	* X3DFollowerNode.h:
	* X3DGeometryNode.h:
	* NurbsTrimmedSurface.h:
	* X3DPickSensorNode.h:
	* X3DPickableObject.h:
	* X3DBoundedObject.h:
	* OrthoViewpoint.h:
	* ViewpointGroup.h:
	* IndexedFaceSet.h:
	* DirectionalLight.h:
	* NavigationInfo.h:
	* KeySensor.h:
	* GeoTouchSensor.h:
	* X3DPrototypeInstance.h:
	* X3DTimeDependentNode.h:
	* X3DTexture2DNode.h:
	* TextureTransform.h:
	* BallJoint.h:
	* ImageTexture3D.h:
	* PixelTexture3D.h:
	* TriangleStripSet.h:
	* RigidBody.h:
	* IndexedQuadSet.h:
	* TimeTrigger.h:
	* CoordinateDamper.h:
	* PositionDamper2D.h:
	* PositionChaser2D.h:
	* TexCoordDamper2D.h:
	* OrientationChaser.h:
	* MotorJoint.h:
	* TextureCoordinate.h:
	* X3DViewpointNode.h:
	* EaseInEaseOut.h:
	* OrientationDamper.h:
	* ConeEmitter.h:
	* TextureProperties.h:
	* GeoElevationGrid.h:
	* X3DCoordinateNode.h:
	* PrimitivePickSensor.h:
	* X3DAppearanceChildNode.h:
	* X3DTexture3DNode.h:
	* FloatVertexAttribute.h:
	* NurbsTextureCoordinate.h:
	* StringSensor.h:
	* BooleanToggle.h:
	* BooleanFilter.h:
	* PointEmitter.h:
	* IndexedTriangleSet.h:
	* SliderJoint.h:
	* BooleanTrigger.h:
	* ComposedTexture3D.h:
	* LocalFog.h:
	* IntegerTrigger.h:
	* VolumeEmitter.h:
	* X3DTriggerNode.h:
	* GeoProximitySensor.h:
	* X3DNurbsControlCurveNode.h:
	* Matrix3VertexAttribute.h:
	* NurbsSurfaceInterpolator.h:
	* ParticleSystem.h:
	* X3DVertexAttributeNode.h:
	* TextureTransform3D.h:
	* Matrix4VertexAttribute.h:
	* SurfaceEmitter.h:
	* IndexedTriangleFanSet.h:
	* X3DSequencerNode.h:
	* TextureCoordinate4D.h:
	* PolylineEmitter.h:
	* TextureCoordinate3D.h:
	* UniversalJoint.h:
	* BooleanSequencer.h:
	* IntegerSequencer.h:
	* ColorInterpolator.h:
	* X3DNetworkSensorNode.h:
	* CollisionSpace.h:
	* X3DParametricGeometryNode.h:
	* NurbsPositionInterpolator.h:
	* MultiTextureTransform.h:
	* Background.h:
	* PlaneSensor.h:
	* NormalInterpolator.h:
	* TouchSensor.h:
	* CollidableShape.h:
	* WindPhysicsModel.h:
	* ScalarInterpolator.h:
	* CollisionSensor.h:
	* MultiTextureCoordinate.h:
	* ExplosionEmitter.h:
	* X3DComposedGeometryNode.h:
	* SphereSensor.h:
	* X3DFogObject.h:
	* X3DInterpolatorNode.h:
	* IndexedTriangleStripSet.h:
	* X3DNurbsSurfaceGeometryNode.h:
	* X3DTextureTransformNode.h:
	* CollidableOffset.h:
	* GeoPositionInterpolator.h:
	* X3DGeometricPropertyNode.h:
	* X3DTextureCoordinateNode.h:
	* NurbsOrientationInterpolator.h:
	* FogCoordinate.h:
	* X3DRigidJointNode.h:
	* PositionInterpolator.h:
	* BoundedPhysicsModel.h:
	* GravityPhysicsModel.h:
	* CylinderSensor.h:
	* TransformSensor.h:
	* ProximitySensor.h:
	* X3DProgrammableShaderObject.h:
	* RigidBodyCollection.h:
	* TextureTransformMatrix3D.h:
	* TextureCoordinateGenerator.h:
	* VisibilitySensor.h:
	* PositionInterpolator2D.h:
	* CoordinateInterpolator.h:
	* ImageCubeMapTexture.h:
	* CollisionCollection.h:
	* DoubleAxisHingeJoint.h:
	* OrientationInterpolator.h:
	* SingleAxisHingeJoint.h:
	* TextureBackground.h:
	* CoordinateInterpolator2D.h:
	* X3DDragSensorNode.h:
	* X3DKeyDeviceSensorNode.h:
	* X3DBackgroundNode.h:
	* SplineScalarInterpolator.h:
	* X3DParticleEmitterNode.h:
	* X3DNBodyCollidableNode.h:
	* ComposedCubeMapTexture.h:
	* X3DTouchSensorNode.h:
	* SplinePositionInterpolator.h:
	* X3DProductStructureChildNode.h:
	* GeneratedCubeMapTexture.h:
	* SquadOrientationInterpolator.h:
	* SplinePositionInterpolator2D.h:
	* X3DEnvironmentTextureNode.h:
	* X3DParticlePhysicsModelNode.h:
	* X3DNBodyCollisionSpaceNode.h:
	* X3DEnvironmentalSensorNode.h:
	* X3DPointingDeviceSensorNode.h: 

2012-09-09  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DLayerNode.cpp: 

2012-09-08  Holger Seelig  <holger.seelig@yahoo.de>

	* Router.h:
	* X3DBaseNode.h:
	* X3DBaseNode.cpp:
	* X3DBrowser.h:
	* X3DBrowser.cpp:
	* X3DExecutionContext.h:
	* X3DExecutionContext.cpp: 

2012-09-08  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.pidb:
	* libtitania-x3d.cproj:
	* JavaScript.h:
	* JavaScript.cpp:
	* NodeIndex.h:
	* X3DBaseNode.h:
	* NodeIndex.cpp:
	* NodeIndex.h:
	* X3DBrowser.h:
	* X3DBaseNode.cpp:
	* NodeIndex.cpp:
	* X3DBrowser.cpp:
	* X3DExecutionContext.h:
	* X3DExecutionContext.cpp:
	* X3DUrlObject.cpp: 

2012-09-08  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DBaseNode.cpp: 

2012-09-08  Holger Seelig  <holger.seelig@yahoo.de>

	* Router.cpp:
	* X3DBaseNode.cpp:
	* Statistics.cpp:
	* X3DBrowser.cpp: 

2012-09-08  Holger Seelig  <holger.seelig@yahoo.de>

	* X3D.h:
	* X3D.cpp:
	* libtitania-x3d.cproj:
	* Proto.cpp:
	* SFVec2.h:
	* X3DField.h:
	* SFVec4.h:
	* SFVec3.h:
	* SFNode.h:
	* Scene.h:
	* MFNode.h:
	* MFInt32.h:
	* X3DObject.h:
	* NodeIndex.h:
	* Viewer.h:
	* SFImage.h:
	* Requester.h:
	* Router.h:
	* X3DClock.h:
	* SFString.h:
	* Browser.h:
	* Scene.cpp:
	* X3DContext.h:
	* MFNode.cpp:
	* Router.cpp:
	* Matrix.h:
	* SFMatrix3.h:
	* X3DBaseNode.h:
	* Array.h:
	* Viewer.cpp:
	* ExternProto.h:
	* SFImage.cpp:
	* NodeIndex.cpp:
	* SFMatrix4.h:
	* Browser.cpp:
	* X3DContext.cpp:
	* X3DBaseNode.cpp:
	* X3DArrayField.h:
	* ExternProto.cpp:
	* SFRotation4.h:
	* X3DBaseObject.h:
	* X3DBrowser.h:
	* RequesterArray.h:
	* OutputProvider.h:
	* DrawingArea.h:
	* X3DBrowser.cpp:
	* geturl.cpp:
	* X3DBaseObject.cpp:
	* Renderer.cpp:
	* Generator.h:
	* DrawingArea.cpp:
	* PointingDevice.h:
	* Generator.cpp:
	* Image.h:
	* X3DFieldDefinition.h:
	* X3DExecutionContext.h:
	* PointingDevice.cpp:
	* Image.cpp:
	* X3DFieldDefinition.cpp:
	* X3DExecutionContext.cpp:
	* AudioClip.h:
	* ArrayTypes.h:
	* Sphere.h:
	* Anchor.h:
	* AudioClip.cpp:
	* Viewport.h:
	* ShaderPart.h:
	* SpotLight.h:
	* ArrayTypes.cpp:
	* LayerSet.cpp:
	* CADPart.h:
	* Sphere.cpp:
	* PointLight.h:
	* Viewport.cpp:
	* Anchor.cpp:
	* Inline.cpp:
	* ShaderPart.cpp:
	* Transform.cpp:
	* SpotLight.cpp:
	* X3DBindableNode.h:
	* PointSet.cpp:
	* CADPart.cpp:
	* ShaderProgram.h:
	* X3DLightNode.h:
	* PointLight.cpp:
	* X3DMetadataObject.h:
	* PackagedShader.h:
	* MovieTexture.h:
	* X3DBindableNode.cpp:
	* X3DPropertyNode.cpp:
	* Extrusion.cpp:
	* ShaderProgram.cpp:
	* X3DLightNode.cpp:
	* X3DLayerNode.cpp:
	* X3DUrlObject.h:
	* X3DMetadataObject.cpp:
	* PackagedShader.cpp:
	* MovieTexture.cpp:
	* ImageTexture.cpp:
	* X3DBoundedObject.h:
	* X3DUrlObject.cpp:
	* NavigationInfo.h:
	* X3DPickableObject.h:
	* DirectionalLight.h:
	* IndexedLineSet.cpp:
	* ImageTexture3D.h:
	* X3DGroupingNode.cpp:
	* ElevationGrid.cpp:
	* DirectionalLight.cpp:
	* IndexedFaceSet.cpp:
	* X3DPrototypeInstance.cpp:
	* X3DBoundedObject.cpp:
	* NavigationInfo.cpp:
	* X3DPickableObject.cpp:
	* ImageTexture3D.cpp:
	* X3DViewpointNode.cpp:
	* Background.cpp:
	* X3DFogObject.h:
	* X3DFogObject.cpp:
	* X3DProgrammableShaderObject.h:
	* ImageCubeMapTexture.h:
	* X3DProgrammableShaderObject.cpp:
	* ProximitySensor.cpp:
	* ImageCubeMapTexture.cpp: 

2012-09-06  Holger Seelig  <holger.seelig@yahoo.de>

	* Error.h:
	* Error.cpp:
	* geturl.cpp:
	* X3DUrlObject.cpp: 

2012-09-06  Holger Seelig  <holger.seelig@yahoo.de>

	* Error.h:
	* SFColor.cpp:
	* SFColorRGBA.cpp:
	* geturl.cpp:
	* Sphere.cpp:
	* X3DUrlObject.cpp:
	* X3DTexture2DNode.cpp:
	* ScalarInterpolator.cpp: 

2012-09-05  Holger Seelig  <holger.seelig@yahoo.de>

	* Error.h:
	* Error.cpp:
	* Parser.cpp: 

2012-09-05  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.pidb:
	* libtitania-x3d.cproj:
	* SFVec3.h:
	* SFVec4.h:
	* SFVec2.h:
	* SFColor.h:
	* SFNode.cpp:
	* Matrix.h:
	* SFMatrix4.h:
	* SFMatrix3.h:
	* SbLine.h:
	* SFRotation4.h:
	* SFColorRGBA.h:
	* SbPlane.h:
	* SbBox3f.h:
	* ViewVolume.cpp:
	* ShapeContainer.h:
	* Sphere.cpp:
	* X3DUrlObject.cpp:
	* X3DViewpointNode.h:
	* X3DTexture2DNode.cpp:
	* TextureTransform.cpp:
	* TextureProperties.cpp:
	* ScalarInterpolator.cpp: 

2012-09-05  Holger Seelig  <holger.seelig@yahoo.de>

	Removed x3d_cast. This is now implemented as part of SFNode.

	* SFNode.cpp: 

2012-09-05  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* Cast.h:
	* Error.h:
	* SFNode.h:
	* X3DField.h:
	* MFNode.cpp:
	* Parser.cpp:
	* X3DScalar.h:
	* X3DBaseNode.h:
	* X3DBaseNode.cpp:
	* X3DArrayField.h:
	* ImportedNode.cpp:
	* Layer.cpp:
	* Appearance.cpp:
	* LayerSet.cpp:
	* PointSet.cpp:
	* X3DShapeNode.cpp:
	* X3DPropertyNode.cpp:
	* X3DLayerNode.cpp:
	* X3DGroupingNode.h:
	* X3DPrototypeInstance.h:
	* X3DGroupingNode.cpp:
	* IndexedLineSet.cpp:
	* ElevationGrid.cpp:
	* X3DPrototypeInstance.cpp:
	* IndexedFaceSet.cpp:
	* X3DTexture2DNode.cpp: 

2012-09-05  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DField.h:
	* Scene.h:
	* X3DObject.h:
	* Viewer.h:
	* Browser.h:
	* X3DBaseNode.h:
	* Viewer.cpp:
	* X3DObject.cpp:
	* Browser.cpp:
	* X3DBaseNode.cpp:
	* X3DBrowser.h:
	* X3DBrowser.cpp:
	* Viewport.h:
	* Viewport.cpp:
	* X3DLayerNode.h:
	* X3DLayerNode.cpp: 

2012-09-04  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.pidb:
	* libtitania-x3d.cproj:
	* Route.cpp:
	* SFTime.h:
	* Scene.h:
	* SFNode.h:
	* ObjectSet.h:
	* X3DObject.h:
	* ProtoArray.h:
	* RouteArray.h:
	* Scene.cpp:
	* ObjectSet.cpp:
	* X3DObject.cpp:
	* X3DBaseNode.h:
	* RouteArray.cpp:
	* ProtoArray.cpp:
	* ImportedNode.h:
	* X3DObjectSet.h:
	* X3DBaseNode.cpp:
	* NodeTypeArray.h:
	* X3DObjectSet.cpp:
	* X3DBrowser.cpp:
	* ExportedNode.h:
	* NodeTypeArray.cpp:
	* ProfileInfoArray.h:
	* DrawingArea.cpp:
	* ExternProtoArray.h:
	* Text.cpp:
	* ImportedNodeArray.h:
	* ComponentInfoArray.h:
	* ExternProtoArray.cpp:
	* X3DFieldDefinition.h:
	* ImportedNodesArray.h:
	* FieldDefinitionSet.h:
	* ProfileInfoArray.cpp:
	* Sound.cpp:
	* ImportedNodeArray.cpp:
	* X3DExecutionContext.h:
	* ComponentInfoArray.cpp:
	* X3DNode.cpp:
	* ExportedNodeArray.h:
	* FieldDefinitionSet.cpp:
	* FieldDefinitionArray.h:
	* X3DFieldDefinition.cpp:
	* ExportedNodesArray.h:
	* X3DExecutionContext.cpp:
	* FieldDefinitionArray.cpp:
	* ExportedNodeArray.cpp:
	* NurbsCurve.cpp:
	* Appearance.cpp:
	* X3DShapeNode.h:
	* GeoLOD.cpp:
	* LineSet.cpp:
	* X3DShapeNode.cpp:
	* PointSet.cpp:
	* LayoutLayer.cpp:
	* Viewpoint.h:
	* LayoutGroup.cpp:
	* CADFace.cpp:
	* HAnimSegment.cpp:
	* Collision.cpp:
	* HAnimHumanoid.cpp:
	* X3DLayerNode.cpp:
	* X3DGroupingNode.h:
	* GeoLocation.cpp:
	* NurbsSweptSurface.cpp:
	* GeoViewpoint.cpp:
	* GeoTransform.cpp:
	* NurbsSwungSurface.cpp:
	* Contact.cpp:
	* ElevationGrid.cpp:
	* GeoCoordinate.cpp:
	* IndexedLineSet.cpp:
	* X3DPrototypeInstance.cpp:
	* X3DViewpointNode.h:
	* EaseInEaseOut.h:
	* IndexedFaceSet.cpp:
	* X3DPickSensorNode.cpp:
	* GeoTouchSensor.cpp:
	* X3DTexture2DNode.cpp:
	* GeoElevationGrid.cpp:
	* EaseInEaseOut.cpp:
	* X3DTexture3DNode.cpp:
	* VolumeEmitter.cpp:
	* ColorInterpolator.h:
	* GeoProximitySensor.cpp:
	* ScalarInterpolator.h:
	* SurfaceEmitter.cpp:
	* ParticleSystem.cpp:
	* NurbsSurfaceInterpolator.cpp:
	* NurbsPositionInterpolator.cpp:
	* X3DInterpolatorNode.h:
	* PolylineEmitter.cpp:
	* GeoPositionInterpolator.h:
	* CollidableShape.cpp:
	* CollisionSensor.cpp:
	* PositionInterpolator.h:
	* CollidableOffset.cpp:
	* X3DFogObject.cpp:
	* X3DInterpolatorNode.cpp:
	* X3DNurbsSurfaceGeometryNode.cpp:
	* X3DRigidJointNode.cpp:
	* PositionInterpolator2D.h:
	* NurbsOrientationInterpolator.cpp:
	* CoordinateInterpolator.h:
	* GeoPositionInterpolator.cpp:
	* TransformSensor.cpp:
	* BoundedPhysicsModel.cpp:
	* OrientationInterpolator.h:
	* SplineScalarInterpolator.h:
	* RigidBodyCollection.cpp:
	* ImageCubeMapTexture.cpp:
	* CoordinateInterpolator2D.h:
	* TextureBackground.cpp:
	* SplineScalarInterpolator.cpp:
	* SplinePositionInterpolator.h:
	* ComposedCubeMapTexture.cpp:
	* GeneratedCubeMapTexture.cpp:
	* SplinePositionInterpolator2D.h:
	* SplinePositionInterpolator.cpp:
	* SquadOrientationInterpolator.h:
	* SquadOrientationInterpolator.cpp:
	* SplinePositionInterpolator2D.cpp: 

2012-09-04  Holger Seelig  <holger.seelig@yahoo.de>

	* IndexedFaceSet.cpp:
	* ColorInterpolator.h:
	* ScalarInterpolator.h:
	* NormalInterpolator.h:
	* ColorInterpolator.cpp:
	* X3DInterpolatorNode.h:
	* GeoPositionInterpolator.h:
	* NormalInterpolator.cpp:
	* PositionInterpolator.h:
	* ScalarInterpolator.cpp:
	* X3DInterpolatorNode.cpp:
	* GeoPositionInterpolator.cpp:
	* CoordinateInterpolator.h:
	* PositionInterpolator.cpp:
	* PositionInterpolator2D.h:
	* OrientationInterpolator.h:
	* PositionInterpolator2D.cpp:
	* SplineScalarInterpolator.h:
	* CoordinateInterpolator2D.h:
	* CoordinateInterpolator.cpp:
	* OrientationInterpolator.cpp:
	* CoordinateInterpolator2D.cpp:
	* SplineScalarInterpolator.cpp:
	* SplinePositionInterpolator.h:
	* SplinePositionInterpolator2D.h:
	* SplinePositionInterpolator.cpp:
	* SquadOrientationInterpolator.h:
	* SquadOrientationInterpolator.cpp:
	* SplinePositionInterpolator2D.cpp: 

2012-09-04  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* X3DConstants.h:
	* X3DBaseNode.cpp:
	* Coordinate.h:
	* PointSet.cpp:
	* X3DPropertyNode.h:
	* Coordinate.cpp:
	* X3DPropertyNode.cpp:
	* PixelTexture.cpp:
	* ImageTexture.cpp:
	* ElevationGrid.cpp:
	* IndexedLineSet.cpp:
	* TextureProperties.h:
	* IndexedFaceSet.cpp:
	* X3DTexture2DNode.cpp:
	* TextureProperties.cpp:
	* X3DGeometricPropertyNode.h:
	* X3DGeometricPropertyNode.cpp:
	* X3DBackgroundNode.cpp: 

2012-09-04  Holger Seelig  <holger.seelig@yahoo.de>

	* IndexedFaceSet.cpp:
	* X3DGeometryNode.cpp:
	* X3DComposedGeometryNode.h:
	* X3DComposedGeometryNode.cpp: 

2012-09-04  Holger Seelig  <holger.seelig@yahoo.de>

	* Route.cpp:
	* SFNode.h:
	* SFTime.h:
	* X3DField.h:
	* Router.h:
	* X3DObject.h:
	* Browser.h:
	* NodeIndex.cpp:
	* X3DBaseNode.h:
	* Router.cpp:
	* X3DObject.cpp:
	* Browser.cpp:
	* X3DArrayField.h:
	* X3DBaseNode.cpp:
	* X3DFieldDefinition.h:
	* X3DFieldDefinition.cpp:
	* Coordinate.h:
	* Coordinate.cpp:
	* IndexedFaceSet.cpp:
	* ColorInterpolator.h:
	* ScalarInterpolator.h:
	* NormalInterpolator.h:
	* X3DInterpolatorNode.h:
	* ColorInterpolator.cpp:
	* PositionInterpolator.h:
	* ScalarInterpolator.cpp:
	* GeoPositionInterpolator.h:
	* NormalInterpolator.cpp:
	* X3DInterpolatorNode.cpp:
	* GeoPositionInterpolator.cpp:
	* PositionInterpolator.cpp:
	* PositionInterpolator2D.h:
	* CoordinateInterpolator.h:
	* OrientationInterpolator.h:
	* CoordinateInterpolator2D.h:
	* PositionInterpolator2D.cpp:
	* SplineScalarInterpolator.h:
	* CoordinateInterpolator.cpp:
	* OrientationInterpolator.cpp:
	* SplinePositionInterpolator.h:
	* SplineScalarInterpolator.cpp:
	* CoordinateInterpolator2D.cpp:
	* SquadOrientationInterpolator.h:
	* SplinePositionInterpolator.cpp:
	* SplinePositionInterpolator2D.h:
	* SquadOrientationInterpolator.cpp:
	* SplinePositionInterpolator2D.cpp: 

2012-09-04  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DField.h:
	* X3DObject.h: 

2012-09-04  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DObject.cpp: 

2012-09-04  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.pidb:
	* X3DInterpolatorNode.cpp: 

2012-09-04  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DBaseNode.h:
	* X3DBaseNode.cpp:
	* NormalInterpolator.h:
	* ColorInterpolator.cpp:
	* ScalarInterpolator.cpp:
	* GeoPositionInterpolator.h:
	* NormalInterpolator.cpp:
	* X3DInterpolatorNode.cpp:
	* GeoPositionInterpolator.cpp:
	* PositionInterpolator.cpp:
	* PositionInterpolator2D.cpp:
	* CoordinateInterpolator.cpp:
	* OrientationInterpolator.cpp:
	* CoordinateInterpolator2D.cpp: 

2012-09-03  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DInterpolatorNode.cpp: 

2012-09-03  Holger Seelig  <holger.seelig@yahoo.de>

	Replaced addFieldCallback with pure C++ version addInterest.

	* X3DField.h:
	* EaseInEaseOut.h:
	* EaseInEaseOut.cpp:
	* ColorInterpolator.h:
	* ScalarInterpolator.h:
	* NormalInterpolator.h:
	* ColorInterpolator.cpp:
	* X3DInterpolatorNode.h:
	* GeoPositionInterpolator.h:
	* ScalarInterpolator.cpp:
	* NormalInterpolator.cpp:
	* PositionInterpolator.h:
	* X3DInterpolatorNode.cpp:
	* PositionInterpolator.cpp:
	* GeoPositionInterpolator.cpp:
	* PositionInterpolator2D.h:
	* CoordinateInterpolator.h:
	* OrientationInterpolator.h:
	* PositionInterpolator2D.cpp:
	* SplineScalarInterpolator.h:
	* CoordinateInterpolator2D.h:
	* CoordinateInterpolator.cpp:
	* OrientationInterpolator.cpp:
	* CoordinateInterpolator2D.cpp:
	* SplineScalarInterpolator.cpp:
	* SplinePositionInterpolator.h:
	* SplinePositionInterpolator2D.h:
	* SplinePositionInterpolator.cpp:
	* SquadOrientationInterpolator.h:
	* SplinePositionInterpolator2D.cpp:
	* SquadOrientationInterpolator.cpp: 

2012-09-03  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DField.h:
	* SFNode.h:
	* Viewer.h:
	* Viewer.cpp: 

2012-09-03  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* JavaScript.cpp:
	* SFVec3.h:
	* X3DField.h:
	* SFVec4.h:
	* SFVec2.h:
	* SFNode.h:
	* SFColor.h:
	* Router.h:
	* X3DObject.h:
	* Viewer.h:
	* Scene.cpp:
	* Browser.h:
	* SFMatrix4.h:
	* SFMatrix3.h:
	* SFImage.cpp:
	* Viewer.cpp:
	* X3DObject.cpp:
	* Matrix.h:
	* X3DBaseNode.h:
	* SFColor.cpp:
	* Browser.cpp:
	* SbLine.h:
	* X3DArrayField.h:
	* X3DBaseNode.cpp:
	* MotionBlur.h:
	* SbBox3f.h:
	* SbPlane.h:
	* FieldCallback.h:
	* SFRotation4.h:
	* SFColorRGBA.h:
	* DrawingArea.h:
	* SFColorRGBA.cpp:
	* X3DBrowser.cpp:
	* MotionBlur.cpp:
	* DrawingArea.cpp:
	* ViewVolume.cpp:
	* X3DFieldDefinition.h:
	* FieldCallbackArray.h:
	* ShapeContainer.h:
	* X3DFieldDefinition.cpp:
	* TimeSensor.h:
	* X3DExecutionContext.cpp:
	* Appearance.h:
	* TimeSensor.cpp:
	* LayerSet.h:
	* Inline.h:
	* X3DShapeNode.h:
	* Appearance.cpp:
	* LayerSet.cpp:
	* Inline.cpp:
	* X3DShapeNode.cpp:
	* Viewpoint.h:
	* X3DLayerNode.h:
	* Viewpoint.cpp:
	* ImageTexture.h:
	* X3DLayerNode.cpp:
	* X3DGroupingNode.h:
	* Fog.h:
	* ImageTexture.cpp:
	* IndexedLineSet.h:
	* IndexedFaceSet.h:
	* X3DUrlObject.cpp:
	* NavigationInfo.h:
	* X3DGroupingNode.cpp:
	* Fog.cpp:
	* IndexedLineSet.cpp:
	* IndexedFaceSet.cpp:
	* X3DViewpointNode.h:
	* EaseInEaseOut.h:
	* NavigationInfo.cpp:
	* EaseInEaseOut.cpp:
	* X3DViewpointNode.cpp:
	* ColorInterpolator.h:
	* NormalInterpolator.h:
	* ScalarInterpolator.h:
	* X3DInterpolatorNode.h:
	* ColorInterpolator.cpp:
	* X3DFogObject.h:
	* ScalarInterpolator.cpp:
	* PositionInterpolator.h:
	* NormalInterpolator.cpp:
	* GeoPositionInterpolator.h:
	* X3DFogObject.cpp:
	* X3DInterpolatorNode.cpp:
	* ProximitySensor.h:
	* TextureCoordinateGenerator.h:
	* PositionInterpolator.cpp:
	* VisibilitySensor.h:
	* PositionInterpolator2D.h:
	* CoordinateInterpolator.h:
	* GeoPositionInterpolator.cpp:
	* ProximitySensor.cpp:
	* OrientationInterpolator.h:
	* VisibilitySensor.cpp:
	* X3DBackgroundNode.h:
	* PositionInterpolator2D.cpp:
	* TextureCoordinateGenerator.cpp:
	* CoordinateInterpolator2D.h:
	* CoordinateInterpolator.cpp:
	* SplineScalarInterpolator.h:
	* OrientationInterpolator.cpp:
	* X3DBackgroundNode.cpp:
	* CoordinateInterpolator2D.cpp:
	* SplineScalarInterpolator.cpp:
	* SplinePositionInterpolator.h:
	* SquadOrientationInterpolator.h:
	* SplinePositionInterpolator2D.h:
	* SplinePositionInterpolator.cpp:
	* SplinePositionInterpolator2D.cpp:
	* SquadOrientationInterpolator.cpp: 

2012-09-02  Holger Seelig  <holger.seelig@yahoo.de>

	* X3D.h:
	* X3D.cpp:
	* Browser.cpp:
	* Statistics.h:
	* MotionBlur.h:
	* Statistics.cpp:
	* DrawingArea.cpp:
	* PointingDevice.h: 

2012-09-02  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.pidb:
	* libtitania-x3d.cproj:
	* Mouse.h:
	* Mouse.cpp:
	* Browser.cpp:
	* MotionBlur.h:
	* X3DBrowser.h:
	* Statistics.h:
	* DrawingArea.h:
	* X3DBrowser.cpp:
	* Statistics.cpp:
	* MotionBlur.cpp:
	* DrawingArea.cpp:
	* PointingDevice.h:
	* PointingDevice.cpp: 

2012-09-02  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* DrawingArea.h:
	* Statistics.cpp:
	* DrawingArea.cpp: 

2012-09-02  Holger Seelig  <holger.seelig@yahoo.de>

	* X3D.h:
	* Widgets:
	* libtitania-x3d.md.pc:
	* libtitania-x3d.cproj:
	* Mouse.h:
	* Mouse.h:
	* Viewer.h:
	* Viewer.h:
	* Mouse.cpp:
	* Mouse.cpp:
	* Viewer.cpp:
	* Viewer.cpp:
	* MotionBlur.h:
	* Statistics.h:
	* Statistics.h:
	* MotionBlur.h:
	* DrawingArea.h:
	* Statistics.cpp:
	* Statistics.cpp:
	* DrawingArea.cpp:
	* BrowserApplication.h:
	* BrowserApplication.cpp: 

2012-09-02  Holger Seelig  <holger.seelig@yahoo.de>

	* X3D.h:
	* X3D.cpp: 

2012-09-01  Holger Seelig  <holger.seelig@yahoo.de>

	* Route.cpp:
	* X3DField.h:
	* SFVec2.h:
	* SFVec3.h:
	* Parser.h:
	* X3DClock.h:
	* SFColor.h:
	* MFNode.cpp:
	* SFString.h:
	* Viewer.cpp:
	* Parser.cpp:
	* SFMatrix4.h:
	* SFMatrix3.h:
	* SFString.cpp:
	* SystemClock.h:
	* X3DBrowser.h:
	* ArrayFields.h:
	* X3DArrayField.h:
	* ExternProto.cpp:
	* X3DBrowser.cpp:
	* X3DExecutionContext.h:
	* X3DExecutionContext.cpp:
	* Layer.cpp:
	* Sphere.h:
	* ArrayTypes.h:
	* Appearance.cpp:
	* Sphere.cpp:
	* PointSet.cpp:
	* ImageTexture.cpp:
	* X3DUrlObject.cpp:
	* X3DGroupingNode.cpp:
	* ElevationGrid.cpp:
	* X3DPrototypeInstance.cpp:
	* ProximitySensor.cpp: 

2012-08-31  Holger Seelig  <holger.seelig@yahoo.de>

	* SFNode.h:
	* X3DField.h:
	* Viewer.h:
	* SFImage.h:
	* SFImage.cpp:
	* X3DScalar.h:
	* X3DArrayField.h:
	* X3DScalar.cpp:
	* PixelTexture.cpp: 

2012-08-31  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.pidb:
	* Fields.h:
	* libtitania-x3d.cproj:
	* Proto.h:
	* Route.cpp:
	* Proto.cpp:
	* SFVec4.h:
	* SFVec3.h:
	* SFTime.h:
	* SFVec2.h:
	* SFBool.h:
	* Scene.h:
	* SFNode.h:
	* X3DField.h:
	* Parser.h:
	* SFColor.h:
	* Viewer.h:
	* X3DClock.h:
	* SFImage.h:
	* MFInt32.h:
	* ProtoArray.h:
	* SFTime.cpp:
	* SFNode.cpp:
	* RouteArray.h:
	* SFString.h:
	* Scene.cpp:
	* MFNode.cpp:
	* X3DProto.cpp:
	* SFScalar.h:
	* SFBool.cpp:
	* Parser.cpp:
	* SFImage.cpp:
	* SFColor.cpp:
	* Array.h:
	* Viewer.cpp:
	* Router.cpp:
	* SFMatrix4.h:
	* X3DScalar.h:
	* SFMatrix3.h:
	* X3DClock.cpp:
	* MFInt32.cpp:
	* SFString.cpp:
	* SystemClock.h:
	* SFScalar.cpp:
	* Browser.cpp:
	* X3DParser.h:
	* SteadyClock.h:
	* X3DBrowser.h:
	* X3DScalar.cpp:
	* ExternProto.cpp:
	* X3DBaseNode.cpp:
	* ArrayFields.h:
	* ProfileInfo.cpp:
	* X3DArrayField.h:
	* SFRotation4.h:
	* SFColorRGBA.h:
	* SteadyClock.cpp:
	* SystemClock.cpp:
	* Text.h:
	* SFColorRGBA.cpp:
	* ArrayFields.cpp:
	* Statistics.cpp:
	* X3DBrowser.cpp:
	* ComponentInfo.cpp:
	* ProfileInfoArray.h:
	* Generator.h:
	* GarbageCollector.h:
	* ExternProtoArray.h:
	* Text.cpp:
	* Sound.h:
	* X3DNode.h:
	* ComponentInfoArray.h:
	* X3DExecutionContext.h:
	* Shape.cpp:
	* Sound.cpp:
	* X3DNode.cpp:
	* SupportedProfiles.h:
	* SignalPdu.cpp:
	* X3DExecutionContext.cpp:
	* Layout.cpp:
	* Material.cpp:
	* LOD.cpp:
	* Layer.cpp:
	* X3DInfoNode.h:
	* NurbsCurve.h:
	* NurbsSet.cpp:
	* FontStyle.cpp:
	* WorldInfo.cpp:
	* Appearance.h:
	* SupportedComponents.h:
	* Box.cpp:
	* Group.cpp:
	* Color.cpp:
	* Cone.cpp:
	* GeoLOD.h:
	* X3DChildNode.h:
	* BrowserApplication.cpp:
	* LayerSet.h:
	* ArrayTypes.h:
	* TimeSensor.cpp:
	* LineSet.h:
	* Contour2D.cpp:
	* Switch.cpp:
	* AudioClip.cpp:
	* ReceiverPdu.cpp:
	* Appearance.cpp:
	* X3DInfoNode.cpp:
	* LayoutLayer.h:
	* NurbsCurve.cpp:
	* PointSet.h:
	* Normal.cpp:
	* X3DSensorNode.h:
	* Arc2D.cpp:
	* X3DShapeNode.h:
	* MetadataSet.cpp:
	* X3DSoundNode.h:
	* HAnimSite.cpp:
	* Script.cpp:
	* MetadataBool.cpp:
	* Sphere.cpp:
	* Disk2D.cpp:
	* LayerSet.cpp:
	* X3DChildNode.cpp:
	* GeoLOD.cpp:
	* HAnimJoint.cpp:
	* LineSet.cpp:
	* HAnimSegment.h:
	* Viewport.cpp:
	* Anchor.cpp:
	* Collision.h:
	* X3DSoundNode.cpp:
	* MetadataFloat.cpp:
	* Transform.cpp:
	* LayoutLayer.cpp:
	* LayoutGroup.cpp:
	* SpotLight.cpp:
	* TransmitterPdu.cpp:
	* ScreenGroup.cpp:
	* EspduTransform.cpp:
	* X3DBindableNode.h:
	* HAnimHumanoid.h:
	* X3DShapeNode.cpp:
	* NurbsCurve2D.cpp:
	* ShaderPart.cpp:
	* PointSet.cpp:
	* X3DLayoutNode.h:
	* X3DSensorNode.cpp:
	* X3DMaterialNode.h:
	* Circle2D.cpp:
	* X3DShaderNode.h:
	* MetadataDouble.cpp:
	* CADFace.cpp:
	* Cylinder.cpp:
	* CADPart.cpp:
	* HAnimSegment.cpp:
	* MetadataString.cpp:
	* QuadSet.cpp:
	* PointLight.cpp:
	* ClipPlane.cpp:
	* X3DFontStyleNode.h:
	* X3DLightNode.h:
	* ColorRGBA.cpp:
	* Collision.cpp:
	* Viewpoint.cpp:
	* Coordinate.cpp:
	* Billboard.cpp:
	* LineProperties.cpp:
	* X3DLayoutNode.cpp:
	* X3DColorNode.h:
	* CADLayer.cpp:
	* StaticGroup.cpp:
	* FillProperties.cpp:
	* Extrusion.cpp:
	* GeoLocation.h:
	* HAnimHumanoid.cpp:
	* DISEntityManager.cpp:
	* DISEntityMapping.cpp:
	* X3DBindableNode.cpp:
	* GeoOrigin.cpp:
	* X3DMetadataObject.h:
	* MetadataInteger.cpp:
	* X3DChaserNode.h:
	* HAnimDisplacer.cpp:
	* GeoTransform.h:
	* X3DShaderNode.cpp:
	* PickableGroup.cpp:
	* ProgramShader.cpp:
	* ShaderProgram.cpp:
	* X3DNormalNode.h:
	* ColorDamper.cpp:
	* X3DDamperNode.h:
	* TriangleSet.cpp:
	* LoadSensor.cpp:
	* X3DScriptNode.h:
	* NurbsSweptSurface.h:
	* X3DMaterialNode.cpp:
	* X3DFontStyleNode.cpp:
	* X3DLayerNode.cpp:
	* NurbsSwungSurface.h:
	* ArcClose2D.cpp:
	* Polyline2D.cpp:
	* X3DLightNode.cpp:
	* GeoViewpoint.h:
	* X3DAppearanceNode.h:
	* PackagedShader.cpp:
	* X3DViewportNode.h:
	* Contact.h:
	* LinePickSensor.cpp:
	* ComposedShader.cpp:
	* ElevationGrid.h:
	* MovieTexture.cpp:
	* X3DTextureNode.h:
	* ImageTexture.cpp:
	* PixelTexture.cpp:
	* MultiTexture.cpp:
	* Rectangle2D.cpp:
	* Polypoint2D.cpp:
	* ScalarChaser.cpp:
	* X3DGroupingNode.h:
	* GeoCoordinate.h:
	* X3DSoundSourceNode.h:
	* CoordinateDouble.cpp:
	* GeoMetadata.cpp:
	* X3DMetadataObject.cpp:
	* ScreenFontStyle.cpp:
	* IndexedLineSet.h:
	* X3DColorNode.cpp:
	* TwoSidedMaterial.cpp:
	* GeoLocation.cpp:
	* X3DScriptNode.cpp:
	* X3DUrlObject.cpp:
	* GeoViewpoint.cpp:
	* GeoTouchSensor.h:
	* X3DDamperNode.cpp:
	* X3DChaserNode.cpp:
	* CADAssembly.cpp:
	* X3DGeometryNode.h:
	* X3DNormalNode.cpp:
	* X3DAppearanceNode.cpp:
	* X3DBoundedObject.h:
	* X3DFollowerNode.h:
	* GeoTransform.cpp:
	* NurbsPatchSurface.cpp:
	* X3DPickableObject.h:
	* X3DPickSensorNode.h:
	* X3DTimeDependentNode.h:
	* IndexedFaceSet.h:
	* NurbsSweptSurface.cpp:
	* NurbsSwungSurface.cpp:
	* PointPickSensor.cpp:
	* ContourPolyline2D.cpp:
	* X3DGroupingNode.cpp:
	* TriangleFanSet.cpp:
	* X3DTextureNode.cpp:
	* X3DTexture2DNode.h:
	* TextureTransform.h:
	* TriangleSet2D.cpp:
	* IndexedLineSet.cpp:
	* X3DViewportNode.cpp:
	* Contact.cpp:
	* PositionDamper.cpp:
	* ElevationGrid.cpp:
	* GeoCoordinate.cpp:
	* DISEntityTypeMapping.cpp:
	* VolumePickSensor.cpp:
	* Fog.cpp:
	* X3DSoundSourceNode.cpp:
	* PositionChaser.cpp:
	* X3DFollowerNode.cpp:
	* X3DPrototypeInstance.cpp:
	* GeoElevationGrid.h:
	* GeoTouchSensor.cpp:
	* NurbsTrimmedSurface.cpp:
	* X3DTimeDependentNode.cpp:
	* KeySensor.cpp:
	* DirectionalLight.cpp:
	* ViewpointGroup.cpp:
	* NavigationInfo.cpp:
	* IndexedFaceSet.cpp:
	* OrthoViewpoint.cpp:
	* X3DCoordinateNode.h:
	* X3DGeometryNode.cpp:
	* X3DBoundedObject.cpp:
	* X3DPickableObject.cpp:
	* X3DViewpointNode.h:
	* X3DPickSensorNode.cpp:
	* ImageTexture3D.cpp:
	* X3DTexture2DNode.cpp:
	* TextureTransform.cpp:
	* TimeTrigger.cpp:
	* BallJoint.cpp:
	* X3DTexture3DNode.h:
	* PixelTexture3D.cpp:
	* RigidBody.cpp:
	* IndexedQuadSet.cpp:
	* TexCoordDamper2D.cpp:
	* TriangleStripSet.cpp:
	* PositionChaser2D.cpp:
	* CoordinateDamper.cpp:
	* X3DAppearanceChildNode.h:
	* PositionDamper2D.cpp:
	* TextureCoordinate.cpp:
	* OrientationDamper.cpp:
	* X3DCoordinateNode.cpp:
	* TextureProperties.cpp:
	* ConeEmitter.cpp:
	* GeoElevationGrid.cpp:
	* VolumeEmitter.h:
	* EaseInEaseOut.cpp:
	* X3DTriggerNode.h:
	* GeoProximitySensor.h:
	* MotorJoint.cpp:
	* OrientationChaser.cpp:
	* X3DViewpointNode.cpp:
	* PrimitivePickSensor.cpp:
	* SurfaceEmitter.h:
	* PointEmitter.cpp:
	* X3DVertexAttributeNode.h:
	* StringSensor.cpp:
	* NurbsSurfaceInterpolator.h:
	* ParticleSystem.h:
	* FloatVertexAttribute.cpp:
	* BooleanToggle.cpp:
	* X3DAppearanceChildNode.cpp:
	* IndexedTriangleSet.cpp:
	* X3DNurbsControlCurveNode.h:
	* NurbsTextureCoordinate.cpp:
	* BooleanFilter.cpp:
	* X3DTexture3DNode.cpp:
	* SliderJoint.cpp:
	* VolumeEmitter.cpp:
	* X3DSequencerNode.h:
	* BooleanTrigger.cpp:
	* PolylineEmitter.h:
	* X3DTriggerNode.cpp:
	* X3DNetworkSensorNode.h:
	* GeoProximitySensor.cpp:
	* ComposedTexture3D.cpp:
	* LocalFog.cpp:
	* IntegerTrigger.cpp:
	* X3DParametricGeometryNode.h:
	* NurbsPositionInterpolator.h:
	* NormalInterpolator.h:
	* X3DNurbsControlCurveNode.cpp:
	* SurfaceEmitter.cpp:
	* NurbsSurfaceInterpolator.cpp:
	* TextureTransform3D.cpp:
	* X3DVertexAttributeNode.cpp:
	* CollisionSensor.h:
	* ParticleSystem.cpp:
	* Matrix3VertexAttribute.cpp:
	* Matrix4VertexAttribute.cpp:
	* X3DParametricGeometryNode.cpp:
	* X3DFogObject.h:
	* TextureCoordinate4D.cpp:
	* TextureCoordinate3D.cpp:
	* X3DTextureTransformNode.h:
	* MultiTextureTransform.cpp:
	* X3DInterpolatorNode.h:
	* UniversalJoint.cpp:
	* CollisionSpace.cpp:
	* X3DNetworkSensorNode.cpp:
	* Background.cpp:
	* PolylineEmitter.cpp:
	* ColorInterpolator.cpp:
	* X3DSequencerNode.cpp:
	* X3DComposedGeometryNode.h:
	* IntegerSequencer.cpp:
	* X3DNurbsSurfaceGeometryNode.h:
	* BooleanSequencer.cpp:
	* IndexedTriangleFanSet.cpp:
	* NurbsPositionInterpolator.cpp:
	* WindPhysicsModel.cpp:
	* X3DRigidJointNode.h:
	* TouchSensor.cpp:
	* PlaneSensor.cpp:
	* NormalInterpolator.cpp:
	* NurbsOrientationInterpolator.h:
	* X3DTextureCoordinateNode.h:
	* GeoPositionInterpolator.h:
	* ScalarInterpolator.cpp:
	* CollisionSensor.cpp:
	* ExplosionEmitter.cpp:
	* MultiTextureCoordinate.cpp:
	* CollidableShape.cpp:
	* X3DGeometricPropertyNode.h:
	* IndexedTriangleStripSet.cpp:
	* X3DFogObject.cpp:
	* X3DNurbsSurfaceGeometryNode.cpp:
	* X3DComposedGeometryNode.cpp:
	* X3DInterpolatorNode.cpp:
	* CollidableOffset.cpp:
	* X3DProgrammableShaderObject.h:
	* SphereSensor.cpp:
	* X3DTextureTransformNode.cpp:
	* TransformSensor.h:
	* PositionInterpolator.cpp:
	* X3DGeometricPropertyNode.cpp:
	* X3DRigidJointNode.cpp:
	* NurbsOrientationInterpolator.cpp:
	* GeoPositionInterpolator.cpp:
	* X3DTextureCoordinateNode.cpp:
	* RigidBodyCollection.h:
	* FogCoordinate.cpp:
	* TransformSensor.cpp:
	* X3DProgrammableShaderObject.cpp:
	* GravityPhysicsModel.cpp:
	* BoundedPhysicsModel.cpp:
	* ProximitySensor.cpp:
	* CylinderSensor.cpp:
	* RigidBodyCollection.cpp:
	* X3DKeyDeviceSensorNode.h:
	* X3DDragSensorNode.h:
	* TextureCoordinateGenerator.cpp:
	* TextureTransformMatrix3D.cpp:
	* VisibilitySensor.cpp:
	* X3DBackgroundNode.h:
	* CoordinateInterpolator.cpp:
	* CollisionCollection.cpp:
	* PositionInterpolator2D.cpp:
	* ImageCubeMapTexture.cpp:
	* X3DParticleEmitterNode.h:
	* X3DNBodyCollidableNode.h:
	* DoubleAxisHingeJoint.cpp:
	* OrientationInterpolator.cpp:
	* X3DTouchSensorNode.h:
	* SingleAxisHingeJoint.cpp:
	* X3DDragSensorNode.cpp:
	* TextureBackground.cpp:
	* SplineScalarInterpolator.cpp:
	* CoordinateInterpolator2D.cpp:
	* X3DBackgroundNode.cpp:
	* X3DKeyDeviceSensorNode.cpp:
	* X3DProductStructureChildNode.h:
	* GeneratedCubeMapTexture.h:
	* X3DParticleEmitterNode.cpp:
	* X3DNBodyCollidableNode.cpp:
	* X3DTouchSensorNode.cpp:
	* ComposedCubeMapTexture.cpp:
	* GeneratedCubeMapTexture.cpp:
	* X3DEnvironmentTextureNode.h:
	* X3DProductStructureChildNode.cpp:
	* SplinePositionInterpolator.cpp:
	* X3DParticlePhysicsModelNode.h:
	* X3DNBodyCollisionSpaceNode.h:
	* SquadOrientationInterpolator.cpp:
	* X3DEnvironmentTextureNode.cpp:
	* SplinePositionInterpolator2D.cpp:
	* X3DParticlePhysicsModelNode.cpp:
	* X3DNBodyCollisionSpaceNode.cpp:
	* X3DEnvironmentalSensorNode.h:
	* X3DPointingDeviceSensorNode.h:
	* X3DEnvironmentalSensorNode.cpp:
	* X3DPointingDeviceSensorNode.cpp: 

2012-08-26  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DClock.h:
	* X3DClock.cpp:
	* SystemClock.h:
	* SteadyClock.h:
	* Browser.cpp:
	* X3DBaseNode.cpp:
	* SteadyClock.cpp:
	* SystemClock.cpp:
	* X3DBrowser.cpp:
	* Viewpoint.cpp:
	* X3DLayerNode.cpp: 

2012-08-25  Holger Seelig  <holger.seelig@yahoo.de>

	* Clock:
	* libtitania-x3d.cproj:
	* X3DClock.h:
	* X3DClock.cpp:
	* SteadyClock.h:
	* SystemClock.h:
	* SystemClock.cpp:
	* SteadyClock.cpp: 

2012-08-25  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* X3DClock.h:
	* X3DClock.cpp:
	* SteadyClock.h:
	* SystemClock.h:
	* SystemClock.cpp:
	* SteadyClock.cpp: 

2012-08-25  Holger Seelig  <holger.seelig@yahoo.de>

	* Time.h:
	* libtitania-x3d.cproj:
	* X3DClock.h:
	* Router.cpp:
	* X3DClock.cpp:
	* X3DBaseNode.h:
	* SystemClock.h:
	* SteadyClock.h:
	* Browser.cpp:
	* X3DBaseNode.cpp:
	* X3DBrowser.h:
	* Statistics.h:
	* SystemClock.cpp:
	* SteadyClock.cpp:
	* X3DBrowser.cpp:
	* Renderer.cpp:
	* Statistics.cpp:
	* BrowserApplication.cpp:
	* TimeSensor.cpp:
	* Fog.cpp:
	* NavigationInfo.cpp:
	* X3DViewpointNode.cpp:
	* TouchSensor.cpp:
	* ProximitySensor.cpp:
	* VisibilitySensor.cpp:
	* X3DBackgroundNode.cpp: 

2012-08-25  Holger Seelig  <holger.seelig@yahoo.de>

	* Clock:
	* libtitania-x3d.cproj:
	* libtitania-x3d.md.pc:
	* X3DClock.h:
	* SystemClock.h:
	* SteadyClock.h:
	* Viewport.h:
	* Viewport.cpp:
	* X3DLayerNode.cpp: 

2012-08-09  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.pidb:
	* Proto.h:
	* Route.cpp:
	* Proto.cpp:
	* X3DProto.h:
	* Scene.h:
	* Scene.cpp:
	* X3DProto.cpp:
	* Parser.cpp:
	* ExternProto.h:
	* ExternProto.cpp:
	* X3DBrowser.h:
	* X3DBaseNode.cpp:
	* X3DBrowser.cpp:
	* X3DExecutionContext.h:
	* AudioClip.h:
	* X3DExecutionContext.cpp:
	* Anchor.h:
	* AudioClip.cpp:
	* ShaderPart.h:
	* Anchor.cpp:
	* Viewport.cpp:
	* ShaderPart.cpp:
	* X3DLayerNode.h:
	* ShaderProgram.h:
	* PackagedShader.h:
	* Viewpoint.cpp:
	* X3DLayerNode.cpp:
	* X3DUrlObject.h:
	* ShaderProgram.cpp:
	* X3DScriptNode.h:
	* PackagedShader.cpp:
	* X3DPrototypeInstance.h:
	* X3DUrlObject.cpp:
	* X3DScriptNode.cpp:
	* ImageTexture3D.h:
	* X3DPrototypeInstance.cpp:
	* ImageTexture3D.cpp:
	* ImageCubeMapTexture.h:
	* ImageCubeMapTexture.cpp: 

2012-08-02  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* Proto.h:
	* Proto.cpp:
	* X3DProto.h:
	* X3DProto.cpp:
	* Parser.cpp:
	* ExternProto.h:
	* ExternProto.cpp:
	* X3DExecutionContext.cpp:
	* X3DPrototypeInstance.cpp: 

2012-08-02  Holger Seelig  <holger.seelig@yahoo.de>

	* Time.h:
	* Time.cpp:
	* libtitania-x3d.cproj:
	* Scene.h:
	* Parser.h:
	* Scene.cpp:
	* Parser.cpp:
	* Browser.cpp:
	* X3DBrowser.h:
	* X3DBrowser.cpp:
	* X3DExecutionContext.h:
	* X3DExecutionContext.cpp:
	* BrowserApplication.cpp:
	* Inline.cpp:
	* Viewpoint.cpp:
	* X3DUrlObject.h:
	* X3DUrlObject.cpp: 

2012-08-01  Holger Seelig  <holger.seelig@yahoo.de>

	* Scene.cpp:
	* Inline.cpp: 

2012-08-01  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.pidb:
	* libtitania-x3d.cproj:
	* Route.h:
	* Route.cpp:
	* ImportedNode.h:
	* ImportedNode.cpp:
	* ExportedNode.h:
	* ExportedNode.cpp:
	* X3DExecutionContext.cpp:
	* Inline.cpp:
	* ColorDamper.h:
	* ScalarChaser.h:
	* ColorDamper.cpp:
	* ScalarChaser.cpp:
	* PositionChaser.h:
	* PositionDamper.h:
	* TexCoordDamper2D.h:
	* PositionDamper.cpp:
	* PositionChaser.cpp:
	* CoordinateDamper.h:
	* PositionChaser2D.h:
	* PositionDamper2D.h:
	* OrientationDamper.h:
	* OrientationChaser.h:
	* PositionChaser2D.cpp:
	* CoordinateDamper.cpp:
	* PositionDamper2D.cpp:
	* TexCoordDamper2D.cpp:
	* OrientationDamper.cpp:
	* OrientationChaser.cpp: 

2012-08-01  Holger Seelig  <holger.seelig@yahoo.de>

	* Proto.h:
	* Route.h:
	* Route.cpp:
	* Proto.cpp:
	* Scene.h:
	* Browser.h:
	* Scene.cpp:
	* ExternProto.h:
	* Parser.cpp:
	* ProfileInfo.h:
	* X3DBaseNode.h:
	* X3DParser.h:
	* Browser.cpp:
	* ComponentInfo.h:
	* X3DBrowser.h:
	* ExternProto.cpp:
	* X3DBaseNode.cpp:
	* X3DParser.cpp:
	* X3DBrowser.cpp:
	* Generator.h:
	* ExecutionContext.h:
	* X3DNode.h:
	* GarbargeCollector.cpp:
	* X3DExecutionContext.h:
	* X3DExecutionContext.cpp:
	* LayerSet.h:
	* LayerSet.cpp:
	* X3DLayerNode.cpp:
	* X3DGroupingNode.cpp:
	* X3DPrototypeInstance.cpp:
	* Background.cpp:
	* ProximitySensor.cpp: 

2012-07-30  Holger Seelig  <holger.seelig@yahoo.de>

	* Parser.cpp:
	* BrowserApplication.cpp: 

2012-07-29  Holger Seelig  <holger.seelig@yahoo.de>

	* RegEx.h:
	* RegEx.cpp:
	* SFColor.h:
	* Parser.h:
	* Parser.cpp:
	* Viewer.cpp:
	* SFMatrix4.h:
	* SFColor.cpp:
	* SFMatrix3.h:
	* SFColorRGBA.h:
	* SFRotation4.h:
	* SFColorRGBA.cpp:
	* Transform.cpp:
	* Billboard.cpp:
	* Extrusion.cpp:
	* X3DLayerNode.cpp:
	* X3DGroupingNode.cpp:
	* ColorInterpolator.cpp:
	* ProximitySensor.cpp:
	* OrientationInterpolator.cpp:
	* X3DBackgroundNode.cpp: 

2012-07-26  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.pidb:
	* libtitania-x3d.cproj:
	* SFTime.h:
	* SFNode.h:
	* SFVec2.h:
	* SFVec4.h:
	* SFVec3.h:
	* X3DField.h:
	* SFBool.h:
	* MFNode.h:
	* SFImage.h:
	* MFInt32.h:
	* SFColor.h:
	* SFNode.cpp:
	* SFString.h:
	* SFTime.cpp:
	* SFBool.cpp:
	* SFScalar.h:
	* SFVec4.cpp:
	* SFVec3.cpp:
	* SFVec2.cpp:
	* SFMatrix4.h:
	* SFColor.cpp:
	* SFMatrix3.h:
	* SFImage.cpp:
	* SFString.cpp:
	* SFScalar.cpp:
	* SFMatrix3.cpp:
	* SFRotation4.h:
	* SFMatrix4.cpp:
	* SFColorRGBA.h:
	* SFRotation4.cpp:
	* SFColorRGBA.cpp:
	* ArrayTypes.h:
	* ArrayTypes.cpp: 

2012-07-24  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.md.pc:
	* Route.h:
	* Proto.h:
	* RegEx.cpp:
	* Proto.cpp:
	* Route.cpp:
	* SFBool.h:
	* Scene.h:
	* X3DField.h:
	* MFNode.h:
	* X3DObject.h:
	* Scene.cpp:
	* SFBool.cpp:
	* MFNode.cpp:
	* SFString.h:
	* ProfileInfo.h:
	* ExternProto.h:
	* X3DObject.cpp:
	* X3DBaseNode.h:
	* SFString.cpp:
	* ProfileInfo.cpp:
	* ExternProto.cpp:
	* X3DBaseNode.cpp:
	* X3DArrayField.h:
	* ComponentInfo.h:
	* ComponentInfo.cpp: 

2012-07-21  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.pidb:
	* libtitania-x3d.md.pc:
	* SFVec2.h:
	* SFVec3.h:
	* SFTime.h:
	* SFNode.h:
	* SFBool.h:
	* X3DField.h:
	* MFNode.h:
	* SFVec4.h:
	* X3DObject.h:
	* MFInt32.h:
	* SFImage.h:
	* SFColor.h:
	* SFVec4.cpp:
	* SFString.h:
	* MFNode.cpp:
	* SFVec3.cpp:
	* SFBool.cpp:
	* SFTime.cpp:
	* SFVec2.cpp:
	* SFScalar.h:
	* SFNode.cpp:
	* MFInt32.cpp:
	* Parser.cpp:
	* SFColor.cpp:
	* SFMatrix3.h:
	* SFImage.cpp:
	* X3DBaseNode.h:
	* SFMatrix4.h:
	* SFScalar.cpp:
	* SFString.cpp:
	* X3DArrayField.h:
	* SFColorRGBA.h:
	* X3DBaseNode.cpp:
	* SFMatrix4.cpp:
	* SFRotation4.h:
	* ArrayFields.h:
	* SFMatrix3.cpp:
	* SFColorRGBA.cpp:
	* SFRotation4.cpp:
	* ArrayFields.cpp:
	* X3DPrototypeInstance.h:
	* X3DPrototypeInstance.cpp: 

2012-07-19  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.md.pc:
	* libtitania-x3d.cproj:
	* InputStream.h:
	* OutputStream.h:
	* Vrml2InputStream.h:
	* Vrml2OutputStream.h: 

2012-07-19  Holger Seelig  <holger.seelig@yahoo.de>

	* Basic:
	* libtitania-x3d.md.pc:
	* libtitania-x3d.cproj: 

2012-07-19  Holger Seelig  <holger.seelig@yahoo.de>

	* Basic:
	* findNode:
	* libtitania-x3d.md.pc:
	* libtitania-x3d.cproj:
	* Route.h:
	* RefPtr.h:
	* Route.cpp:
	* JavaScript.cpp:
	* RegEx.cpp:
	* X3DProto.h:
	* Scene.h:
	* MFNode.h:
	* SFNode.h:
	* X3DField.h:
	* Viewer.h:
	* Parser.h:
	* SFNode.cpp:
	* RouteArray.h:
	* ProtoArray.h:
	* X3DProto.cpp:
	* Scene.cpp:
	* MFNode.cpp:
	* Browser.h:
	* ExternProto.h:
	* X3DObject.cpp:
	* X3DBaseNode.h:
	* Viewer.cpp:
	* Parser.cpp:
	* ImportedNode.h:
	* Browser.cpp:
	* Statistics.h:
	* X3DBrowser.h:
	* ExternProto.cpp:
	* ComponentInfo.h:
	* ArrayFields.h:
	* X3DBaseNode.cpp:
	* Renderer.cpp:
	* ComponentInfo.cpp:
	* Statistics.cpp:
	* Text.h:
	* X3DBrowser.cpp:
	* ExecutionContext.h:
	* ExternProtoArray.h:
	* ProfileInfoArray.h:
	* Text.cpp:
	* Sound.h:
	* Shape.h:
	* X3DNode.h:
	* InputStream.h:
	* ExecutionContext.cpp:
	* X3DFieldDefinition.h:
	* ComponentInfoArray.h:
	* Shape.cpp:
	* Sound.cpp:
	* SignalPdu.h:
	* Layout.h:
	* OutputStream.h:
	* X3DExecutionContext.h:
	* Box.h:
	* Group.h:
	* NurbsSet.h:
	* LOD.h:
	* Layer.h:
	* X3DNode.cpp:
	* WorldInfo.h:
	* FontStyle.h:
	* Material.h:
	* SupportedProfiles.h:
	* TimeSensor.h:
	* SignalPdu.cpp:
	* Cone.h:
	* Color.h:
	* ReceiverPdu.h:
	* AudioClip.h:
	* Contour2D.h:
	* BrowserApplication.h:
	* Switch.h:
	* X3DExecutionContext.cpp:
	* Layout.cpp:
	* WorldInfo.cpp:
	* Box.cpp:
	* FontStyle.cpp:
	* Layer.cpp:
	* Material.cpp:
	* Appearance.h:
	* Arc2D.h:
	* NurbsSet.cpp:
	* NurbsCurve.h:
	* SupportedComponents.h:
	* HAnimSite.h:
	* LOD.cpp:
	* Script.h:
	* Normal.h:
	* Group.cpp:
	* MetadataSet.h:
	* HAnimJoint.h:
	* Color.cpp:
	* Contour2D.cpp:
	* Viewport.h:
	* LineSet.h:
	* Switch.cpp:
	* ArrayTypes.h:
	* TimeSensor.cpp:
	* MetadataBool.h:
	* Cone.cpp:
	* Disk2D.h:
	* GeoLOD.h:
	* Sphere.h:
	* AudioClip.cpp:
	* ReceiverPdu.cpp:
	* Vrml2InputStream.h:
	* LayerSet.h:
	* Inline.h:
	* Anchor.h:
	* Transform.h:
	* ScreenGroup.h:
	* X3DShapeNode.h:
	* Vrml2OutputStream.h:
	* PointSet.h:
	* Appearance.cpp:
	* HAnimSite.cpp:
	* Normal.cpp:
	* TransmitterPdu.h:
	* SpotLight.h:
	* MetadataSet.cpp:
	* NurbsCurve.cpp:
	* MetadataFloat.h:
	* EspduTransform.h:
	* LayoutLayer.h:
	* ShaderPart.h:
	* Script.cpp:
	* LayoutGroup.h:
	* Arc2D.cpp:
	* NurbsCurve2D.h:
	* ColorRGBA.h:
	* Sphere.cpp:
	* Cylinder.h:
	* LineSet.cpp:
	* ClipPlane.h:
	* MetadataDouble.h:
	* MetadataString.h:
	* LayerSet.cpp:
	* MetadataBool.cpp:
	* CADFace.h:
	* QuadSet.h:
	* Viewport.cpp:
	* HAnimJoint.cpp:
	* CADPart.h:
	* ArrayTypes.cpp:
	* PointLight.h:
	* Inline.cpp:
	* Anchor.cpp:
	* GeoLOD.cpp:
	* Circle2D.h:
	* HAnimSegment.h:
	* Disk2D.cpp:
	* EspduTransform.cpp:
	* TransmitterPdu.cpp:
	* MetadataInteger.h:
	* GeoOrigin.h:
	* Extrusion.h:
	* ScreenGroup.cpp:
	* LayoutGroup.cpp:
	* LayoutLayer.cpp:
	* MetadataFloat.cpp:
	* DISEntityManager.h:
	* HAnimHumanoid.h:
	* Collision.h:
	* Transform.cpp:
	* StaticGroup.h:
	* NurbsCurve2D.cpp:
	* LineProperties.h:
	* FillProperties.h:
	* X3DShapeNode.cpp:
	* Billboard.h:
	* Viewpoint.h:
	* ShaderPart.cpp:
	* PointSet.cpp:
	* Coordinate.h:
	* SpotLight.cpp:
	* CADLayer.h:
	* Circle2D.cpp:
	* ArcClose2D.h:
	* X3DLayerNode.h:
	* ColorDamper.h:
	* PointLight.cpp:
	* HAnimSegment.cpp:
	* QuadSet.cpp:
	* CADFace.cpp:
	* Polyline2D.h:
	* HAnimDisplacer.h:
	* CADPart.cpp:
	* TriangleSet.h:
	* LoadSensor.h:
	* ProgramShader.h:
	* ShaderProgram.h:
	* ClipPlane.cpp:
	* ColorRGBA.cpp:
	* MetadataString.cpp:
	* PickableGroup.h:
	* Cylinder.cpp:
	* MetadataDouble.cpp:
	* ImageTexture.h:
	* DISEntityManager.cpp:
	* StaticGroup.cpp:
	* GeoLocation.h:
	* MetadataInteger.cpp:
	* Billboard.cpp:
	* MultiTexture.h:
	* PackagedShader.h:
	* CADLayer.cpp:
	* Rectangle2D.h:
	* GeoMetadata.h:
	* GeoOrigin.cpp:
	* ScalarChaser.h:
	* LinePickSensor.h:
	* HAnimHumanoid.cpp:
	* Collision.cpp:
	* Coordinate.cpp:
	* ScreenFontStyle.h:
	* CoordinateDouble.h:
	* Viewpoint.cpp:
	* TwoSidedMaterial.h:
	* Extrusion.cpp:
	* PixelTexture.h:
	* FillProperties.cpp:
	* Polypoint2D.h:
	* ComposedShader.h:
	* LineProperties.cpp:
	* MovieTexture.h:
	* TriangleSet.cpp:
	* PointPickSensor.h:
	* GeoViewpoint.h:
	* NurbsPatchSurface.h:
	* CADAssembly.h:
	* PickableGroup.cpp:
	* ProgramShader.cpp:
	* X3DLayerNode.cpp:
	* X3DUrlObject.h:
	* NurbsSweptSurface.h:
	* LoadSensor.cpp:
	* ArcClose2D.cpp:
	* ShaderProgram.cpp:
	* GeoTransform.h:
	* NurbsSwungSurface.h:
	* Polyline2D.cpp:
	* ColorDamper.cpp:
	* HAnimDisplacer.cpp:
	* ContourPolyline2D.h:
	* GeoCoordinate.h:
	* CoordinateDouble.cpp:
	* TwoSidedMaterial.cpp:
	* ComposedShader.cpp:
	* DISEntityTypeMapping.h:
	* Fog.h:
	* PixelTexture.cpp:
	* Polypoint2D.cpp:
	* GeoMetadata.cpp:
	* GeoLocation.cpp:
	* Contact.h:
	* ElevationGrid.h:
	* MultiTexture.cpp:
	* ScreenFontStyle.cpp:
	* ImageTexture.cpp:
	* LinePickSensor.cpp:
	* PositionDamper.h:
	* TriangleFanSet.h:
	* VolumePickSensor.h:
	* Rectangle2D.cpp:
	* MovieTexture.cpp:
	* PackagedShader.cpp:
	* IndexedLineSet.h:
	* TriangleSet2D.h:
	* ScalarChaser.cpp:
	* PositionChaser.h:
	* GeoTransform.cpp:
	* X3DPrototypeInstance.h:
	* GeoTouchSensor.h:
	* GeoViewpoint.cpp:
	* KeySensor.h:
	* CosmoWorlds.wrl:
	* X3DUrlObject.cpp:
	* IndexedFaceSet.h:
	* OrthoViewpoint.h:
	* ViewpointGroup.h:
	* NurbsSweptSurface.cpp:
	* X3DPickSensorNode.h:
	* PointPickSensor.cpp:
	* NavigationInfo.h:
	* CADAssembly.cpp:
	* NurbsSwungSurface.cpp:
	* NurbsTrimmedSurface.h:
	* DirectionalLight.h:
	* ContourPolyline2D.cpp:
	* NurbsPatchSurface.cpp:
	* ImageTexture3D.h:
	* PixelTexture3D.h:
	* TriangleStripSet.h:
	* TexCoordDamper2D.h:
	* TriangleFanSet.cpp:
	* DISEntityTypeMapping.cpp:
	* BallJoint.h:
	* TextureTransform.h:
	* ElevationGrid.cpp:
	* RigidBody.h:
	* Contact.cpp:
	* VolumePickSensor.cpp:
	* Fog.cpp:
	* PositionDamper.cpp:
	* IndexedLineSet.cpp:
	* CoordinateDamper.h:
	* X3DTexture2DNode.h:
	* GeoCoordinate.cpp:
	* TimeTrigger.h:
	* PositionChaser2D.h:
	* TriangleSet2D.cpp:
	* PositionChaser.cpp:
	* IndexedQuadSet.h:
	* PositionDamper2D.h:
	* KeySensor.cpp:
	* ConeEmitter.h:
	* TextureCoordinate.h:
	* X3DPickSensorNode.cpp:
	* OrientationChaser.h:
	* OrientationDamper.h:
	* PrimitivePickSensor.h:
	* IndexedFaceSet.cpp:
	* TextureProperties.h:
	* DirectionalLight.cpp:
	* X3DGeometryNode.cpp:
	* NurbsTrimmedSurface.cpp:
	* ViewpointGroup.cpp:
	* MotorJoint.h:
	* NavigationInfo.cpp:
	* OrthoViewpoint.cpp:
	* X3DPrototypeInstance.cpp:
	* GeoElevationGrid.h:
	* EaseInEaseOut.h:
	* GeoTouchSensor.cpp:
	* X3DTexture2DNode.cpp:
	* RigidBody.cpp:
	* IndexedQuadSet.cpp:
	* SliderJoint.h:
	* PositionDamper2D.cpp:
	* ImageTexture3D.cpp:
	* PixelTexture3D.cpp:
	* TexCoordDamper2D.cpp:
	* X3DTexture3DNode.h:
	* BallJoint.cpp:
	* PositionChaser2D.cpp:
	* CoordinateDamper.cpp:
	* BooleanFilter.h:
	* BooleanToggle.h:
	* FloatVertexAttribute.h:
	* PointEmitter.h:
	* NurbsTextureCoordinate.h:
	* TextureTransform.cpp:
	* TriangleStripSet.cpp:
	* StringSensor.h:
	* TimeTrigger.cpp:
	* IndexedTriangleSet.h:
	* PrimitivePickSensor.cpp:
	* MotorJoint.cpp:
	* ConeEmitter.cpp:
	* VolumeEmitter.h:
	* GeoProximitySensor.h:
	* GeoElevationGrid.cpp:
	* EaseInEaseOut.cpp:
	* OrientationChaser.cpp:
	* LocalFog.h:
	* ComposedTexture3D.h:
	* BooleanTrigger.h:
	* X3DViewpointNode.cpp:
	* IntegerTrigger.h:
	* TextureProperties.cpp:
	* TextureCoordinate.cpp:
	* OrientationDamper.cpp:
	* SliderJoint.cpp:
	* StringSensor.cpp:
	* NurbsSurfaceInterpolator.h:
	* ParticleSystem.h:
	* PointEmitter.cpp:
	* NurbsTextureCoordinate.cpp:
	* SurfaceEmitter.h:
	* FloatVertexAttribute.cpp:
	* TextureTransform3D.h:
	* X3DTexture3DNode.cpp:
	* IndexedTriangleSet.cpp:
	* BooleanToggle.cpp:
	* BooleanFilter.cpp:
	* Matrix4VertexAttribute.h:
	* Matrix3VertexAttribute.h:
	* VolumeEmitter.cpp:
	* IntegerSequencer.h:
	* NurbsPositionInterpolator.h:
	* IndexedTriangleFanSet.h:
	* IntegerTrigger.cpp:
	* CollisionSpace.h:
	* LocalFog.cpp:
	* TextureCoordinate3D.h:
	* TextureCoordinate4D.h:
	* BooleanSequencer.h:
	* GeoProximitySensor.cpp:
	* ColorInterpolator.h:
	* ComposedTexture3D.cpp:
	* BooleanTrigger.cpp:
	* MultiTextureTransform.h:
	* Background.h:
	* UniversalJoint.h:
	* PolylineEmitter.h:
	* SurfaceEmitter.cpp:
	* NormalInterpolator.h:
	* ScalarInterpolator.h:
	* ParticleSystem.cpp:
	* ExplosionEmitter.h:
	* Matrix3VertexAttribute.cpp:
	* TouchSensor.h:
	* PlaneSensor.h:
	* WindPhysicsModel.h:
	* Matrix4VertexAttribute.cpp:
	* MultiTextureCoordinate.h:
	* NurbsSurfaceInterpolator.cpp:
	* CollidableShape.h:
	* TextureTransform3D.cpp:
	* CollisionSensor.h:
	* NurbsPositionInterpolator.cpp:
	* TextureCoordinate4D.cpp:
	* IntegerSequencer.cpp:
	* TextureCoordinate3D.cpp:
	* Background.cpp:
	* PolylineEmitter.cpp:
	* BooleanSequencer.cpp:
	* X3DNurbsSurfaceGeometryNode.h:
	* SphereSensor.h:
	* IndexedTriangleFanSet.cpp:
	* ColorInterpolator.cpp:
	* CollisionSpace.cpp:
	* IndexedTriangleStripSet.h:
	* MultiTextureTransform.cpp:
	* CollidableOffset.h:
	* UniversalJoint.cpp:
	* X3DComposedGeometryNode.h:
	* MultiTextureCoordinate.cpp:
	* NurbsOrientationInterpolator.h:
	* WindPhysicsModel.cpp:
	* PlaneSensor.cpp:
	* PositionInterpolator.h:
	* NormalInterpolator.cpp:
	* GeoPositionInterpolator.h:
	* ScalarInterpolator.cpp:
	* TouchSensor.cpp:
	* CollisionSensor.cpp:
	* X3DRigidJointNode.h:
	* CollidableShape.cpp:
	* FogCoordinate.h:
	* ExplosionEmitter.cpp:
	* CylinderSensor.h:
	* IndexedTriangleStripSet.cpp:
	* TransformSensor.h:
	* X3DNurbsSurfaceGeometryNode.cpp:
	* ProximitySensor.h:
	* SphereSensor.cpp:
	* CollidableOffset.cpp:
	* X3DComposedGeometryNode.cpp:
	* BoundedPhysicsModel.h:
	* GravityPhysicsModel.h:
	* TextureTransformMatrix3D.h:
	* GeoPositionInterpolator.cpp:
	* NurbsOrientationInterpolator.cpp:
	* RigidBodyCollection.h:
	* FogCoordinate.cpp:
	* VisibilitySensor.h:
	* PositionInterpolator2D.h:
	* CoordinateInterpolator.h:
	* TextureCoordinateGenerator.h:
	* ImageCubeMapTexture.h:
	* PositionInterpolator.cpp:
	* X3DRigidJointNode.cpp:
	* CollisionCollection.h:
	* DoubleAxisHingeJoint.h:
	* SingleAxisHingeJoint.h:
	* CylinderSensor.cpp:
	* OrientationInterpolator.h:
	* BoundedPhysicsModel.cpp:
	* GravityPhysicsModel.cpp:
	* TransformSensor.cpp:
	* ProximitySensor.cpp:
	* PositionInterpolator2D.cpp:
	* CoordinateInterpolator.cpp:
	* CoordinateInterpolator2D.h:
	* SplineScalarInterpolator.h:
	* TextureTransformMatrix3D.cpp:
	* TextureCoordinateGenerator.cpp:
	* RigidBodyCollection.cpp:
	* TextureBackground.h:
	* CollisionCollection.cpp:
	* VisibilitySensor.cpp:
	* ImageCubeMapTexture.cpp:
	* ComposedCubeMapTexture.h:
	* OrientationInterpolator.cpp:
	* DoubleAxisHingeJoint.cpp:
	* SingleAxisHingeJoint.cpp:
	* GeneratedCubeMapTexture.h:
	* CoordinateInterpolator2D.cpp:
	* TextureBackground.cpp:
	* SplinePositionInterpolator.h:
	* SplineScalarInterpolator.cpp:
	* ComposedCubeMapTexture.cpp:
	* SquadOrientationInterpolator.h:
	* GeneratedCubeMapTexture.cpp:
	* SplinePositionInterpolator2D.h:
	* SplinePositionInterpolator.cpp:
	* SquadOrientationInterpolator.cpp:
	* SplinePositionInterpolator2D.cpp: 

2012-07-18  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.pidb:
	* Parser.cpp:
	* Browser.cpp:
	* X3DArrayField.h:
	* X3DBaseNode.cpp:
	* Statistics.cpp:
	* X3DBrowser.cpp:
	* GarbageCollector.h:
	* X3DExecutionContext.cpp:
	* BrowserApplication.cpp:
	* Extrusion.cpp:
	* X3DLayerNode.cpp:
	* ImageTexture.cpp:
	* X3DUrlObject.cpp:
	* IndexedFaceSet.cpp:
	* X3DViewpointNode.cpp: 

2012-07-17  Holger Seelig  <holger.seelig@yahoo.de>

	* Viewer.cpp:
	* Parser.cpp:
	* X3DBaseNode.cpp:
	* X3DExecutionContext.h:
	* X3DExecutionContext.cpp:
	* X3DPrototypeInstance.h:
	* X3DPrototypeInstance.cpp: 

2012-07-17  Holger Seelig  <holger.seelig@yahoo.de>

	* Route.h:
	* Error.h:
	* Proto.h:
	* Route.cpp:
	* Proto.cpp:
	* NodeIndex.h:
	* Parser.h:
	* Scene.cpp:
	* NodeIndex.cpp:
	* ExternProto.h:
	* ProfileInfo.h:
	* Parser.cpp:
	* X3DBaseNode.h:
	* Browser.cpp:
	* ProfileInfo.cpp:
	* X3DBrowser.h:
	* ComponentInfo.h:
	* Statistics.h:
	* ExternProto.cpp:
	* X3DBaseNode.cpp:
	* Statistics.cpp:
	* Text.h:
	* X3DBrowser.cpp:
	* ComponentInfo.cpp:
	* Sound.h:
	* Text.cpp:
	* Shape.h:
	* ExecutionContext.cpp:
	* X3DNode.h:
	* Layout.h:
	* Sound.cpp:
	* SignalPdu.h:
	* Shape.cpp:
	* X3DExecutionContext.h:
	* Material.h:
	* NurbsSet.h:
	* Layer.h:
	* FontStyle.h:
	* Group.h:
	* Box.h:
	* X3DNode.cpp:
	* SupportedProfiles.h:
	* WorldInfo.h:
	* LOD.h:
	* Color.h:
	* X3DExecutionContext.cpp:
	* Switch.h:
	* Contour2D.h:
	* SignalPdu.cpp:
	* Layout.cpp:
	* AudioClip.h:
	* Cone.h:
	* ReceiverPdu.h:
	* TimeSensor.h:
	* Box.cpp:
	* NurbsCurve.h:
	* NurbsSet.cpp:
	* Group.cpp:
	* Arc2D.h:
	* Script.h:
	* MetadataSet.h:
	* X3DInfoNode.h:
	* WorldInfo.cpp:
	* LOD.cpp:
	* Material.cpp:
	* Appearance.h:
	* Layer.cpp:
	* FontStyle.cpp:
	* Normal.h:
	* SupportedProfiles.cpp:
	* HAnimSite.h:
	* SupportedComponents.h:
	* Disk2D.h:
	* Switch.cpp:
	* Contour2D.cpp:
	* AudioClip.cpp:
	* X3DChildNode.h:
	* BrowserApplication.cpp:
	* MetadataBool.h:
	* HAnimJoint.h:
	* Inline.h:
	* Anchor.h:
	* TimeSensor.cpp:
	* GeoLOD.h:
	* ReceiverPdu.cpp:
	* Viewport.h:
	* LayerSet.h:
	* Color.cpp:
	* LineSet.h:
	* Sphere.h:
	* Cone.cpp:
	* X3DShapeNode.h:
	* Normal.cpp:
	* MetadataFloat.h:
	* MetadataSet.cpp:
	* PointSet.h:
	* ScreenGroup.h:
	* SupportedComponents.cpp:
	* X3DSensorNode.h:
	* SpotLight.h:
	* Appearance.cpp:
	* LayoutLayer.h:
	* LayoutGroup.h:
	* Arc2D.cpp:
	* NurbsCurve2D.h:
	* ShaderPart.h:
	* Script.cpp:
	* HAnimSite.cpp:
	* X3DSoundNode.h:
	* EspduTransform.h:
	* Transform.h:
	* X3DInfoNode.cpp:
	* NurbsCurve.cpp:
	* TransmitterPdu.h:
	* Disk2D.cpp:
	* Anchor.cpp:
	* CADFace.h:
	* Inline.cpp:
	* HAnimSegment.h:
	* QuadSet.h:
	* GeoLOD.cpp:
	* ColorRGBA.h:
	* Sphere.cpp:
	* Viewport.cpp:
	* PointLight.h:
	* ClipPlane.h:
	* LineSet.cpp:
	* LayerSet.cpp:
	* Circle2D.h:
	* HAnimJoint.cpp:
	* CADPart.h:
	* MetadataBool.cpp:
	* X3DChildNode.cpp:
	* MetadataString.h:
	* MetadataDouble.h:
	* Cylinder.h:
	* Billboard.h:
	* SpotLight.cpp:
	* Collision.h:
	* HAnimHumanoid.h:
	* Viewpoint.h:
	* NurbsCurve2D.cpp:
	* ScreenGroup.cpp:
	* MetadataFloat.cpp:
	* CADLayer.h:
	* LineProperties.h:
	* X3DShapeNode.cpp:
	* FillProperties.h:
	* GeoOrigin.h:
	* Transform.cpp:
	* X3DSensorNode.cpp:
	* MetadataInteger.h:
	* StaticGroup.h:
	* X3DBindableNode.h:
	* LayoutLayer.cpp:
	* PointSet.cpp:
	* X3DSoundNode.cpp:
	* X3DLayoutNode.h:
	* Coordinate.h:
	* TransmitterPdu.cpp:
	* ShaderPart.cpp:
	* EspduTransform.cpp:
	* DISEntityManager.h:
	* LayoutGroup.cpp:
	* Extrusion.h:
	* X3DShaderNode.h:
	* QuadSet.cpp:
	* ColorDamper.h:
	* ClipPlane.cpp:
	* X3DMaterialNode.h:
	* ShaderProgram.h:
	* PickableGroup.h:
	* HAnimSegment.cpp:
	* X3DLayerNode.h:
	* MetadataString.cpp:
	* TriangleSet.h:
	* MetadataDouble.cpp:
	* ProgramShader.h:
	* CADPart.cpp:
	* X3DLightNode.h:
	* PointLight.cpp:
	* ColorRGBA.cpp:
	* Cylinder.cpp:
	* X3DFontStyleNode.h:
	* CADFace.cpp:
	* Circle2D.cpp:
	* HAnimDisplacer.h:
	* Polyline2D.h:
	* LoadSensor.h:
	* ArcClose2D.h:
	* MovieTexture.h:
	* Viewpoint.cpp:
	* ScreenFontStyle.h:
	* PixelTexture.h:
	* ImageTexture.h:
	* LinePickSensor.h:
	* MultiTexture.h:
	* HAnimHumanoid.cpp:
	* Extrusion.cpp:
	* DISEntityManager.cpp:
	* DISEntityMapping.cpp:
	* X3DBindableNode.cpp:
	* GeoLocation.h:
	* ComposedShader.h:
	* PackagedShader.h:
	* Coordinate.cpp:
	* Rectangle2D.h:
	* CoordinateDouble.h:
	* FillProperties.cpp:
	* ScalarChaser.h:
	* StaticGroup.cpp:
	* LineProperties.cpp:
	* CADLayer.cpp:
	* GeoMetadata.h:
	* MetadataInteger.cpp:
	* X3DLayoutNode.cpp:
	* Billboard.cpp:
	* Polypoint2D.h:
	* X3DMetadataObject.h:
	* X3DColorNode.h:
	* GeoOrigin.cpp:
	* TwoSidedMaterial.h:
	* Collision.cpp:
	* GeoViewpoint.h:
	* ContourPolyline2D.h:
	* NurbsSwungSurface.h:
	* X3DDamperNode.h:
	* X3DNormalNode.h:
	* ProgramShader.cpp:
	* X3DChaserNode.h:
	* TriangleSet.cpp:
	* ColorDamper.cpp:
	* NurbsPatchSurface.h:
	* ShaderProgram.cpp:
	* X3DMaterialNode.cpp:
	* NurbsSweptSurface.h:
	* X3DLayerNode.cpp:
	* X3DScriptNode.h:
	* X3DUrlObject.h:
	* PointPickSensor.h:
	* X3DAppearanceNode.h:
	* X3DLightNode.cpp:
	* X3DShaderNode.cpp:
	* Polyline2D.cpp:
	* LoadSensor.cpp:
	* CADAssembly.h:
	* ArcClose2D.cpp:
	* X3DFontStyleNode.cpp:
	* GeoTransform.h:
	* PickableGroup.cpp:
	* HAnimDisplacer.cpp:
	* DISEntityTypeMapping.h:
	* ScalarChaser.cpp:
	* MovieTexture.cpp:
	* GeoLocation.cpp:
	* PixelTexture.cpp:
	* ElevationGrid.h:
	* GeoMetadata.cpp:
	* VolumePickSensor.h:
	* PackagedShader.cpp:
	* GeoCoordinate.h:
	* X3DTextureNode.h:
	* X3DMetadataObject.cpp:
	* LinePickSensor.cpp:
	* X3DViewportNode.h:
	* MultiTexture.cpp:
	* Rectangle2D.cpp:
	* IndexedLineSet.h:
	* X3DColorNode.cpp:
	* CoordinateDouble.cpp:
	* TwoSidedMaterial.cpp:
	* TriangleSet2D.h:
	* Polypoint2D.cpp:
	* Contact.h:
	* X3DSoundSourceNode.h:
	* ImageTexture.cpp:
	* Fog.h:
	* X3DGroupingNode.h:
	* PositionChaser.h:
	* ComposedShader.cpp:
	* TriangleFanSet.h:
	* ScreenFontStyle.cpp:
	* PositionDamper.h:
	* ContourPolyline2D.cpp:
	* NurbsSwungSurface.cpp:
	* NurbsTrimmedSurface.h:
	* GeoTouchSensor.h:
	* ViewpointGroup.h:
	* OrthoViewpoint.h:
	* GeoTransform.cpp:
	* NavigationInfo.h:
	* NurbsPatchSurface.cpp:
	* X3DUrlObject.cpp:
	* NurbsSweptSurface.cpp:
	* X3DTimeDependentNode.h:
	* X3DGeometryNode.h:
	* CADAssembly.cpp:
	* X3DPickSensorNode.h:
	* PointPickSensor.cpp:
	* IndexedFaceSet.h:
	* X3DFollowerNode.h:
	* X3DDamperNode.cpp:
	* X3DPrototypeInstance.h:
	* X3DNormalNode.cpp:
	* DirectionalLight.h:
	* GeoViewpoint.cpp:
	* X3DPickableObject.h:
	* X3DChaserNode.cpp:
	* X3DBoundedObject.h:
	* X3DScriptNode.cpp:
	* KeySensor.h:
	* X3DAppearanceNode.cpp:
	* IndexedQuadSet.h:
	* PositionChaser2D.h:
	* GeoCoordinate.cpp:
	* TexCoordDamper2D.h:
	* IndexedLineSet.cpp:
	* TriangleSet2D.cpp:
	* ImageTexture3D.h:
	* TriangleFanSet.cpp:
	* PositionDamper.cpp:
	* X3DTexture2DNode.h:
	* TriangleStripSet.h:
	* X3DGroupingNode.cpp:
	* BallJoint.h:
	* TextureTransform.h:
	* RigidBody.h:
	* TimeTrigger.h:
	* PixelTexture3D.h:
	* X3DViewportNode.cpp:
	* Fog.cpp:
	* Contact.cpp:
	* PositionChaser.cpp:
	* PositionDamper2D.h:
	* CoordinateDamper.h:
	* X3DSoundSourceNode.cpp:
	* ElevationGrid.cpp:
	* X3DTextureNode.cpp:
	* DISEntityTypeMapping.cpp:
	* VolumePickSensor.cpp:
	* ViewpointGroup.cpp:
	* ConeEmitter.h:
	* IndexedFaceSet.cpp:
	* MotorJoint.h:
	* X3DViewpointNode.h:
	* NurbsTrimmedSurface.cpp:
	* OrthoViewpoint.cpp:
	* X3DBoundedObject.cpp:
	* NavigationInfo.cpp:
	* PrimitivePickSensor.h:
	* X3DPickableObject.cpp:
	* X3DTimeDependentNode.cpp:
	* TextureProperties.h:
	* X3DPickSensorNode.cpp:
	* GeoElevationGrid.h:
	* GeoTouchSensor.cpp:
	* OrientationDamper.h:
	* OrientationChaser.h:
	* X3DCoordinateNode.h:
	* X3DFollowerNode.cpp:
	* DirectionalLight.cpp:
	* KeySensor.cpp:
	* X3DPrototypeInstance.cpp:
	* TextureCoordinate.h:
	* X3DGeometryNode.cpp:
	* EaseInEaseOut.h:
	* TextureTransform.cpp:
	* X3DTexture2DNode.cpp:
	* PointEmitter.h:
	* BallJoint.cpp:
	* BooleanToggle.h:
	* StringSensor.h:
	* TriangleStripSet.cpp:
	* TexCoordDamper2D.cpp:
	* IndexedQuadSet.cpp:
	* TimeTrigger.cpp:
	* BooleanFilter.h:
	* RigidBody.cpp:
	* X3DTexture3DNode.h:
	* NurbsTextureCoordinate.h:
	* SliderJoint.h:
	* X3DAppearanceChildNode.h:
	* PixelTexture3D.cpp:
	* ImageTexture3D.cpp:
	* CoordinateDamper.cpp:
	* PositionChaser2D.cpp:
	* FloatVertexAttribute.h:
	* PositionDamper2D.cpp:
	* IndexedTriangleSet.h:
	* EaseInEaseOut.cpp:
	* X3DViewpointNode.cpp:
	* ComposedTexture3D.h:
	* LocalFog.h:
	* TextureCoordinate.cpp:
	* VolumeEmitter.h:
	* OrientationChaser.cpp:
	* ConeEmitter.cpp:
	* PrimitivePickSensor.cpp:
	* GeoElevationGrid.cpp:
	* MotorJoint.cpp:
	* TextureProperties.cpp:
	* X3DCoordinateNode.cpp:
	* X3DTriggerNode.h:
	* BooleanTrigger.h:
	* OrientationDamper.cpp:
	* GeoProximitySensor.h:
	* IntegerTrigger.h:
	* BooleanFilter.cpp:
	* BooleanToggle.cpp:
	* X3DTexture3DNode.cpp:
	* TextureTransform3D.h:
	* X3DNurbsControlCurveNode.h:
	* Matrix4VertexAttribute.h:
	* Matrix3VertexAttribute.h:
	* NurbsSurfaceInterpolator.h:
	* NurbsTextureCoordinate.cpp:
	* SurfaceEmitter.h:
	* ParticleSystem.h:
	* IndexedTriangleSet.cpp:
	* StringSensor.cpp:
	* X3DAppearanceChildNode.cpp:
	* PointEmitter.cpp:
	* FloatVertexAttribute.cpp:
	* SliderJoint.cpp:
	* X3DVertexAttributeNode.h:
	* BooleanTrigger.cpp:
	* BooleanSequencer.h:
	* LocalFog.cpp:
	* PolylineEmitter.h:
	* CollisionSpace.h:
	* VolumeEmitter.cpp:
	* IntegerSequencer.h:
	* IntegerTrigger.cpp:
	* X3DNetworkSensorNode.h:
	* IndexedTriangleFanSet.h:
	* GeoProximitySensor.cpp:
	* UniversalJoint.h:
	* X3DSequencerNode.h:
	* X3DTriggerNode.cpp:
	* MultiTextureTransform.h:
	* TextureCoordinate4D.h:
	* TextureCoordinate3D.h:
	* X3DParametricGeometryNode.h:
	* NurbsPositionInterpolator.h:
	* ComposedTexture3D.cpp:
	* ColorInterpolator.h:
	* Background.h:
	* PlaneSensor.h:
	* TouchSensor.h:
	* CollidableShape.h:
	* X3DNurbsControlCurveNode.cpp:
	* Matrix4VertexAttribute.cpp:
	* ParticleSystem.cpp:
	* Matrix3VertexAttribute.cpp:
	* CollisionSensor.h:
	* NormalInterpolator.h:
	* MultiTextureCoordinate.h:
	* ScalarInterpolator.h:
	* WindPhysicsModel.h:
	* ExplosionEmitter.h:
	* TextureTransform3D.cpp:
	* NurbsSurfaceInterpolator.cpp:
	* SurfaceEmitter.cpp:
	* X3DVertexAttributeNode.cpp:
	* CollisionSpace.cpp:
	* X3DNetworkSensorNode.cpp:
	* CollidableOffset.h:
	* X3DParametricGeometryNode.cpp:
	* TextureCoordinate4D.cpp:
	* TextureCoordinate3D.cpp:
	* NurbsPositionInterpolator.cpp:
	* X3DInterpolatorNode.h:
	* ColorInterpolator.cpp:
	* X3DNurbsSurfaceGeometryNode.h:
	* IndexedTriangleFanSet.cpp:
	* IndexedTriangleStripSet.h:
	* X3DComposedGeometryNode.h:
	* UniversalJoint.cpp:
	* IntegerSequencer.cpp:
	* BooleanSequencer.cpp:
	* X3DSequencerNode.cpp:
	* MultiTextureTransform.cpp:
	* X3DFogObject.h:
	* SphereSensor.h:
	* X3DTextureTransformNode.h:
	* PolylineEmitter.cpp:
	* Background.cpp:
	* PlaneSensor.cpp:
	* NormalInterpolator.cpp:
	* PositionInterpolator.h:
	* TouchSensor.cpp:
	* X3DGeometricPropertyNode.h:
	* NurbsOrientationInterpolator.h:
	* GeoPositionInterpolator.h:
	* MultiTextureCoordinate.cpp:
	* CollisionSensor.cpp:
	* ExplosionEmitter.cpp:
	* X3DRigidJointNode.h:
	* X3DTextureCoordinateNode.h:
	* WindPhysicsModel.cpp:
	* FogCoordinate.h:
	* ScalarInterpolator.cpp:
	* CollidableShape.cpp:
	* X3DTextureTransformNode.cpp:
	* CollidableOffset.cpp:
	* GravityPhysicsModel.h:
	* X3DNurbsSurfaceGeometryNode.cpp:
	* X3DProgrammableShaderObject.h:
	* ProximitySensor.h:
	* X3DInterpolatorNode.cpp:
	* SphereSensor.cpp:
	* BoundedPhysicsModel.h:
	* TransformSensor.h:
	* X3DComposedGeometryNode.cpp:
	* IndexedTriangleStripSet.cpp:
	* X3DFogObject.cpp:
	* CylinderSensor.h:
	* TextureCoordinateGenerator.h:
	* TextureTransformMatrix3D.h:
	* ImageCubeMapTexture.h:
	* PositionInterpolator.cpp:
	* PositionInterpolator2D.h:
	* CoordinateInterpolator.h:
	* NurbsOrientationInterpolator.cpp:
	* FogCoordinate.cpp:
	* RigidBodyCollection.h:
	* X3DRigidJointNode.cpp:
	* GeoPositionInterpolator.cpp:
	* X3DTextureCoordinateNode.cpp:
	* CollisionCollection.h:
	* X3DGeometricPropertyNode.cpp:
	* VisibilitySensor.h:
	* SingleAxisHingeJoint.h:
	* TransformSensor.cpp:
	* X3DProgrammableShaderObject.cpp:
	* GravityPhysicsModel.cpp:
	* ProximitySensor.cpp:
	* BoundedPhysicsModel.cpp:
	* CylinderSensor.cpp:
	* DoubleAxisHingeJoint.h:
	* OrientationInterpolator.h:
	* X3DDragSensorNode.h:
	* CoordinateInterpolator.cpp:
	* SplineScalarInterpolator.h:
	* X3DBackgroundNode.h:
	* PositionInterpolator2D.cpp:
	* TextureBackground.h:
	* CoordinateInterpolator2D.h:
	* X3DKeyDeviceSensorNode.h:
	* RigidBodyCollection.cpp:
	* TextureCoordinateGenerator.cpp:
	* VisibilitySensor.cpp:
	* ImageCubeMapTexture.cpp:
	* TextureTransformMatrix3D.cpp:
	* X3DParticleEmitterNode.h:
	* CollisionCollection.cpp:
	* SingleAxisHingeJoint.cpp:
	* X3DNBodyCollidableNode.h:
	* DoubleAxisHingeJoint.cpp:
	* X3DTouchSensorNode.h:
	* OrientationInterpolator.cpp:
	* ComposedCubeMapTexture.h:
	* X3DProductStructureChildNode.h:
	* GeneratedCubeMapTexture.h:
	* SplinePositionInterpolator.h:
	* SplineScalarInterpolator.cpp:
	* TextureBackground.cpp:
	* X3DParticleEmitterNode.cpp:
	* X3DKeyDeviceSensorNode.cpp:
	* CoordinateInterpolator2D.cpp:
	* X3DBackgroundNode.cpp:
	* X3DDragSensorNode.cpp:
	* X3DNBodyCollidableNode.cpp:
	* ComposedCubeMapTexture.cpp:
	* X3DTouchSensorNode.cpp:
	* X3DEnvironmentTextureNode.h:
	* SplinePositionInterpolator.cpp:
	* X3DProductStructureChildNode.cpp:
	* GeneratedCubeMapTexture.cpp:
	* SquadOrientationInterpolator.h:
	* SplinePositionInterpolator2D.h:
	* X3DNBodyCollisionSpaceNode.h:
	* X3DParticlePhysicsModelNode.h:
	* SquadOrientationInterpolator.cpp:
	* X3DEnvironmentTextureNode.cpp:
	* SplinePositionInterpolator2D.cpp:
	* X3DParticlePhysicsModelNode.cpp:
	* X3DNBodyCollisionSpaceNode.cpp:
	* X3DEnvironmentalSensorNode.h:
	* X3DPointingDeviceSensorNode.h:
	* X3DEnvironmentalSensorNode.cpp:
	* X3DPointingDeviceSensorNode.cpp: 

2012-07-17  Holger Seelig  <holger.seelig@yahoo.de>

	* Parser.cpp:
	* Viewer.cpp:
	* X3DBaseNode.cpp:
	* X3DExecutionContext.h:
	* X3DExecutionContext.cpp:
	* X3DLayerNode.cpp:
	* Background.cpp: 

2012-07-17  Holger Seelig  <holger.seelig@yahoo.de>

	* JavaScript.h:
	* X3DField.h:
	* Router.h:
	* X3DObject.h:
	* Browser.h:
	* Viewer.cpp:
	* X3DObject.cpp:
	* Parser.cpp:
	* X3DBaseNode.h:
	* Browser.cpp:
	* X3DBaseNode.cpp:
	* Statistics.cpp:
	* X3DBrowser.cpp:
	* GarbageCollector.h:
	* X3DFieldDefinition.h:
	* X3DExecutionContext.h:
	* Material.h:
	* X3DFieldDefinition.cpp:
	* TimeSensor.h:
	* X3DExecutionContext.cpp:
	* Appearance.h:
	* Script.h:
	* Material.cpp:
	* LayerSet.h:
	* Inline.h:
	* BrowserApplication.cpp:
	* Viewport.h:
	* SpotLight.h:
	* Appearance.cpp:
	* Transform.h:
	* X3DShapeNode.h:
	* Inline.cpp:
	* PointLight.h:
	* LayerSet.cpp:
	* Viewport.cpp:
	* Viewpoint.h:
	* Extrusion.h:
	* X3DShapeNode.cpp:
	* SpotLight.cpp:
	* X3DLayerNode.h:
	* PointLight.cpp:
	* PixelTexture.h:
	* ImageTexture.h:
	* X3DLayerNode.cpp:
	* X3DGroupingNode.h:
	* IndexedLineSet.h:
	* Fog.h:
	* PixelTexture.cpp:
	* DirectionalLight.h:
	* X3DPrototypeInstance.h:
	* X3DGeometryNode.h:
	* NavigationInfo.h:
	* IndexedFaceSet.h:
	* TextureTransform.h:
	* X3DGroupingNode.cpp:
	* IndexedLineSet.cpp:
	* NavigationInfo.cpp:
	* X3DViewpointNode.h:
	* X3DGeometryNode.cpp:
	* DirectionalLight.cpp:
	* TextureTransform.cpp:
	* X3DTexture2DNode.cpp:
	* X3DViewpointNode.cpp:
	* Background.h:
	* X3DFogObject.h:
	* X3DComposedGeometryNode.h:
	* Background.cpp:
	* ProximitySensor.h:
	* X3DComposedGeometryNode.cpp:
	* VisibilitySensor.h:
	* TextureCoordinateGenerator.h:
	* ProximitySensor.cpp:
	* X3DBackgroundNode.h:
	* TextureCoordinateGenerator.cpp:
	* X3DBackgroundNode.cpp: 

2012-07-17  Holger Seelig  <holger.seelig@yahoo.de>

	* Scene.h:
	* Scene.cpp:
	* Browser.h:
	* X3DBaseNode.h:
	* Browser.cpp:
	* X3DBaseNode.cpp:
	* X3DBrowser.h:
	* X3DBrowser.cpp:
	* ExecutionContext.h:
	* ExecutionContext.cpp:
	* X3DExecutionContext.h:
	* X3DExecutionContext.cpp:
	* X3DPrototypeInstance.h:
	* X3DPrototypeInstance.cpp: 

2012-07-16  Holger Seelig  <holger.seelig@yahoo.de>

	* Browser.h:
	* Viewer.cpp:
	* Browser.cpp:
	* Renderer.cpp:
	* Statistics.cpp:
	* X3DExecutionContext.h:
	* X3DExecutionContext.cpp:
	* LayerSet.cpp:
	* X3DLayerNode.h:
	* Viewpoint.cpp:
	* X3DLayerNode.cpp:
	* X3DLightNode.cpp:
	* X3DViewpointNode.cpp:
	* LocalFog.cpp:
	* ProximitySensor.cpp:
	* X3DBackgroundNode.cpp: 

2012-07-16  Holger Seelig  <holger.seelig@yahoo.de>

	* Scene.h:
	* Browser.h:
	* X3DProto.cpp:
	* Scene.cpp:
	* X3DBaseNode.h:
	* Browser.cpp:
	* ExternProto.cpp:
	* X3DBaseNode.cpp:
	* X3DBrowser.cpp:
	* ExecutionContext.h:
	* ExecutionContext.cpp:
	* Generator.cpp:
	* GarbargeCollector.cpp:
	* X3DExecutionContext.cpp:
	* Inline.cpp:
	* X3DLayerNode.cpp:
	* X3DUrlObject.cpp:
	* X3DPrototypeInstance.h:
	* Fog.cpp:
	* X3DPrototypeInstance.cpp:
	* NavigationInfo.cpp:
	* X3DViewpointNode.cpp:
	* Background.cpp:
	* X3DBackgroundNode.cpp: 

2012-07-15  Holger Seelig  <holger.seelig@yahoo.de>

	* X3D.h:
	* X3D.cpp:
	* libtitania-x3d.md.pc:
	* libtitania-x3d.cproj:
	* Scene.cpp:
	* Browser.h:
	* SFScalar.h:
	* Parser.cpp:
	* X3DBaseNode.h:
	* Browser.cpp:
	* X3DBaseNode.cpp:
	* X3DBrowser.cpp:
	* GarbageCollector.h:
	* ExecutionContext.cpp:
	* X3DExecutionContext.h:
	* GarbargeCollector.cpp:
	* X3DExecutionContext.cpp:
	* X3DPrototypeInstance.cpp: 

2012-07-15  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.md.pc:
	* libtitania-x3d.cproj:
	* X3DObject.h:
	* Browser.h:
	* MFNode.cpp:
	* X3DObject.cpp:
	* Parser.cpp:
	* X3DBaseNode.h:
	* Browser.cpp:
	* X3DBaseNode.cpp:
	* ExternProto.cpp:
	* X3DBrowser.cpp:
	* GarbageCollector.h:
	* GarbageCollector.cpp:
	* Generator.cpp:
	* GarbageCollector.h:
	* X3DExecutionContext.h:
	* X3DFieldDefinition.cpp:
	* X3DExecutionContext.cpp:
	* GarbageCollector.cpp:
	* Inline.cpp:
	* X3DLayerNode.h:
	* X3DLayerNode.cpp:
	* X3DUrlObject.cpp:
	* Fog.cpp:
	* NavigationInfo.cpp:
	* X3DViewpointNode.cpp:
	* Background.cpp:
	* X3DFogObject.cpp:
	* X3DBackgroundNode.cpp: 

2012-07-14  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DObject.h:
	* MFNode.cpp:
	* X3DObject.cpp:
	* X3DFieldDefinition.h:
	* X3DFieldDefinition.cpp: 

2012-07-14  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DField.h:
	* X3DObject.h:
	* SFNode.cpp:
	* X3DObject.cpp:
	* X3DBaseNode.h:
	* X3DArrayField.h:
	* X3DBaseNode.cpp:
	* X3DFieldDefinition.h:
	* X3DFieldDefinition.cpp:
	* GarbageCollector.cpp: 

2012-07-13  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.md.pc:
	* libtitania-x3d.cproj:
	* X3DObject.h:
	* Scene.cpp:
	* X3DProto.cpp:
	* SFNode.cpp:
	* X3DObject.cpp:
	* X3DBaseNode.h:
	* SFImage.cpp:
	* Browser.cpp:
	* X3DObjectSet.h:
	* ExternProto.cpp:
	* X3DArrayField.h:
	* X3DBaseNode.cpp:
	* X3DObjectSet.cpp:
	* X3DFieldDefinition.h:
	* X3DFieldDefinition.cpp:
	* X3DExecutionContext.cpp:
	* PointSet.cpp:
	* X3DBindableNode.h:
	* X3DBindableNode.cpp:
	* X3DLayerNode.cpp:
	* X3DUrlObject.cpp:
	* X3DGeometryNode.h:
	* X3DGeometryNode.cpp:
	* X3DPrototypeInstance.cpp:
	* X3DComposedGeometryNode.h:
	* Background.cpp:
	* NormalInterpolator.cpp:
	* X3DComposedGeometryNode.cpp:
	* CoordinateInterpolator.cpp:
	* X3DBackgroundNode.cpp:
	* CoordinateInterpolator2D.cpp: 

2012-07-12  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.pidb:
	* X3DGeometryNode.cpp:
	* IndexedFaceSet.cpp: 

2012-07-11  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.md.pc:
	* libtitania-x3d.cproj:
	* Name.h:
	* X3DGeometryNode.h:
	* IndexedFaceSet.cpp:
	* X3DComposedGeometryNode.cpp: 

2012-07-11  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.md.pc:
	* X3DField.h:
	* X3DObject.h:
	* Router.h:
	* X3DBaseNode.h:
	* X3DBaseNode.cpp:
	* X3DNode.h:
	* X3DFieldDefinition.h:
	* X3DFieldDefinition.cpp:
	* PointSet.cpp:
	* IndexedLineSet.h:
	* ImageTexture.cpp:
	* PixelTexture.cpp:
	* X3DGeometryNode.h:
	* IndexedFaceSet.h:
	* IndexedLineSet.cpp:
	* ElevationGrid.cpp:
	* IndexedFaceSet.cpp:
	* X3DPrototypeInstance.cpp:
	* X3DGeometryNode.cpp:
	* X3DTexture2DNode.cpp:
	* X3DBackgroundNode.cpp: 

2012-07-11  Holger Seelig  <holger.seelig@yahoo.de>

	* X3D.h:
	* X3D.cpp:
	* Route.cpp:
	* X3DField.h:
	* X3DObject.h:
	* Parser.h:
	* Mouse.cpp:
	* Browser.h:
	* Viewer.cpp:
	* Parser.cpp:
	* X3DBaseNode.h:
	* Browser.cpp:
	* X3DConstants.h:
	* Statistics.h:
	* X3DBrowser.h:
	* X3DBaseNode.cpp:
	* Renderer.h:
	* ComponentInfo.cpp:
	* Renderer.cpp:
	* X3DNode.h:
	* X3DFieldDefinition.h:
	* X3DExecutionContext.h:
	* ShapeContainer.h:
	* ShapeContainer.cpp:
	* X3DExecutionContext.cpp:
	* BrowserApplication.h:
	* X3DInfoNode.h:
	* X3DChildNode.h:
	* BrowserApplication.cpp:
	* X3DSoundNode.h:
	* X3DSensorNode.h:
	* X3DShapeNode.h:
	* Viewport.cpp:
	* X3DLayoutNode.h:
	* X3DBindableNode.h:
	* X3DShapeNode.cpp:
	* X3DMaterialNode.h:
	* X3DLayerNode.h:
	* X3DFontStyleNode.h:
	* X3DShaderNode.h:
	* X3DLightNode.h:
	* X3DBindableNode.cpp:
	* X3DColorNode.h:
	* X3DMetadataObject.h:
	* X3DScriptNode.h:
	* X3DDamperNode.h:
	* X3DUrlObject.h:
	* X3DLayerNode.cpp:
	* X3DChaserNode.h:
	* X3DNormalNode.h:
	* X3DAppearanceNode.h:
	* X3DSoundSourceNode.h:
	* X3DTextureNode.h:
	* X3DGroupingNode.h:
	* X3DViewportNode.h:
	* X3DFollowerNode.h:
	* X3DPickSensorNode.h:
	* X3DBoundedObject.h:
	* X3DTimeDependentNode.h:
	* X3DPickableObject.h:
	* X3DGeometryNode.h:
	* X3DTexture2DNode.h:
	* X3DCoordinateNode.h:
	* X3DViewpointNode.h:
	* X3DTexture2DNode.cpp:
	* X3DAppearanceChildNode.h:
	* X3DTexture3DNode.h:
	* X3DTriggerNode.h:
	* X3DNurbsControlCurveNode.h:
	* X3DVertexAttributeNode.h:
	* X3DParametricGeometryNode.h:
	* X3DSequencerNode.h:
	* X3DNetworkSensorNode.h:
	* X3DFogObject.h:
	* X3DComposedGeometryNode.h:
	* X3DTextureTransformNode.h:
	* X3DInterpolatorNode.h:
	* X3DNurbsSurfaceGeometryNode.h:
	* X3DTextureCoordinateNode.h:
	* X3DGeometricPropertyNode.h:
	* X3DRigidJointNode.h:
	* X3DProgrammableShaderObject.h:
	* X3DKeyDeviceSensorNode.h:
	* X3DBackgroundNode.h:
	* X3DParticleEmitterNode.h:
	* X3DDragSensorNode.h:
	* X3DNBodyCollidableNode.h:
	* X3DTouchSensorNode.h:
	* X3DProductStructureChildNode.h:
	* X3DEnvironmentTextureNode.h:
	* X3DNBodyCollisionSpaceNode.h:
	* X3DParticlePhysicsModelNode.h:
	* X3DEnvironmentalSensorNode.h:
	* X3DPointingDeviceSensorNode.h: 

2012-07-10  Holger Seelig  <holger.seelig@yahoo.de>

	* Renderer.cpp:
	* ShapeContainer.h:
	* ShapeContainer.cpp: 

2012-07-10  Holger Seelig  <holger.seelig@yahoo.de>

	* X3D.h:
	* Time.h:
	* libtitania-x3d.md.pc:
	* Fields.h:
	* Cast.h:
	* Name.h:
	* Error.h:
	* Proto.h:
	* RegEx.h:
	* Components.h:
	* JavaScript.h:
	* Route.h:
	* Hit.h:
	* RefPtr.h:
	* Scene.h:
	* SFTime.h:
	* SFNode.h:
	* Mouse.h:
	* X3DField.h:
	* SFBool.h:
	* World.h:
	* SFVec3.h:
	* MFNode.h:
	* X3DProto.h:
	* SFVec4.h:
	* SFVec2.h:
	* NodeIndex.h:
	* X3DObject.h:
	* MFInt32.h:
	* SFColor.h:
	* SFImage.h:
	* DIS.h:
	* Parser.h:
	* Viewer.h:
	* Router.h:
	* SFScalar.h:
	* Text.h:
	* Core.h:
	* SFString.h:
	* Browser.h:
	* RouteArray.h:
	* ProtoArray.h:
	* Time.h:
	* SFMatrix3.h:
	* SFMatrix4.h:
	* HitArray.h:
	* strfsize.h:
	* NURBS.h:
	* Shape.h:
	* Matrix.h:
	* ProfileInfo.h:
	* Array.h:
	* ExternProto.h:
	* X3DBaseNode.h:
	* Sound.h:
	* X3DParser.h:
	* Browser.cpp:
	* SbLine.h:
	* X3DConstants.h:
	* ImportedNode.h:
	* H-Anim.h:
	* Layout.h:
	* Picking.h:
	* FieldCallback.h:
	* ComponentInfo.h:
	* NodeTypeArray.h:
	* X3DArrayField.h:
	* X3DBrowser.h:
	* Statistics.h:
	* MotionBlur.h:
	* Renderer.h:
	* geturl.h:
	* Shaders.h:
	* SbPlane.h:
	* jsfield.h:
	* SbBox3f.h:
	* ArrayFields.h:
	* SFRotation4.h:
	* SFColorRGBA.h:
	* Layering.h:
	* jsFields.h:
	* jsstring.h:
	* Grouping.h:
	* Lighting.h:
	* Scripting.h:
	* ViewVolume.h:
	* ExportedNode.h:
	* Text.h:
	* jsBrowser.h:
	* jsGlobals.h:
	* Rendering.h:
	* Renderer.cpp:
	* Followers.h:
	* Texturing.h:
	* Generator.h:
	* jsX3DScene.h:
	* Navigation.h:
	* Geometry3D.h:
	* jsX3DField.h:
	* ProfileInfoArray.h:
	* ExternProtoArray.h:
	* Geometry2D.h:
	* Networking.h:
	* Geospatial.h:
	* ExecutionContext.h:
	* Shape.h:
	* uncompress.h:
	* ViewVolume.cpp:
	* Texturing3D.h:
	* Sound.h:
	* CADGeometry.h:
	* jsX3DObject.h:
	* X3DNode.h:
	* FieldDefinitionSet.h:
	* X3DFieldDefinition.h:
	* ImportedNodesArray.h:
	* ComponentInfoArray.h:
	* FieldCallbackArray.h:
	* Image.h:
	* SignalPdu.h:
	* ShapeContainer.h:
	* Layout.h:
	* GarbageCollector.h:
	* X3DExecutionContext.h:
	* LightContainer.h:
	* Interpolation.h:
	* FontStyle.h:
	* Box.h:
	* LOD.h:
	* Layer.h:
	* NurbsSet.h:
	* EventUtilities.h:
	* WorldInfo.h:
	* FieldDefinitionArray.h:
	* SupportedProfiles.h:
	* Group.h:
	* Material.h:
	* AudioClip.h:
	* TimeSensor.h:
	* jsMFNode.h:
	* KeyDeviceSensor.h:
	* Contour2D.h:
	* jsMFBool.h:
	* Cone.h:
	* jsMFTime.h:
	* jsSFNode.h:
	* jsX3DArrayField.h:
	* Switch.h:
	* ExportedNodesArray.h:
	* Color.h:
	* BrowserApplication.h:
	* ReceiverPdu.h:
	* ParticleSystems.h:
	* Script.h:
	* MetadataSet.h:
	* jsSFVec3f.h:
	* jsMFVec4d.h:
	* CubeMapTexturing.h:
	* jsMFFloat.h:
	* X3DInfoNode.h:
	* Arc2D.h:
	* jsMFImage.h:
	* jsMFVec4f.h:
	* Appearance.h:
	* Normal.h:
	* jsSFVec4d.h:
	* jsSFVec2d.h:
	* jsSFVec2f.h:
	* SupportedComponents.h:
	* jsMFVec2d.h:
	* jsMFVec2f.h:
	* jsSFImage.h:
	* jsMFVec3f.h:
	* jsMFColor.h:
	* jsMFVec3d.h:
	* RigidBodyPhysics.h:
	* jsSFVec3d.h:
	* HAnimSite.h:
	* jsSFVec4f.h:
	* jsMFInt32.h:
	* jsSFColor.h:
	* NurbsCurve.h:
	* LineSet.h:
	* jsMFString.h:
	* Sphere.h:
	* jsMFDouble.h:
	* Inline.h:
	* LayerSet.h:
	* Viewport.h:
	* Disk2D.h:
	* GeoLOD.h:
	* X3DChildNode.h:
	* HAnimJoint.h:
	* ArrayTypes.h:
	* Anchor.h:
	* MetadataBool.h:
	* ScreenGroup.h:
	* LayoutLayer.h:
	* LayoutGroup.h:
	* EspduTransform.h:
	* X3DShapeNode.h:
	* SpotLight.h:
	* X3DSoundNode.h:
	* NurbsCurve2D.h:
	* PointSet.h:
	* TransmitterPdu.h:
	* Transform.h:
	* ShaderPart.h:
	* X3DSensorNode.h:
	* MetadataFloat.h:
	* jsProfileInfoArray.h:
	* LightContainerArray.h:
	* HAnimSegment.h:
	* EnvironmentalSensor.h:
	* jsSFMatrix4f.h:
	* jsSFMatrix3d.h:
	* PointLight.h:
	* Circle2D.h:
	* MetadataString.h:
	* CADPart.h:
	* MetadataDouble.h:
	* jsSFMatrix4d.h:
	* jsSFRotation.h:
	* jsMFMatrix4d.h:
	* Cylinder.h:
	* QuadSet.h:
	* CADFace.h:
	* jsSFMatrix3f.h:
	* jsMFMatrix4f.h:
	* ClipPlane.h:
	* jsVrmlMatrix.h:
	* ColorRGBA.h:
	* jsMFMatrix3d.h:
	* jsMFMatrix3f.h:
	* jsMFRotation.h:
	* CADLayer.h:
	* Extrusion.h:
	* MetadataInteger.h:
	* FillProperties.h:
	* GeoOrigin.h:
	* PointingDeviceSensor.h:
	* X3DBindableNode.h:
	* X3DLayoutNode.h:
	* Billboard.h:
	* StaticGroup.h:
	* EnvironmentalEffects.h:
	* Viewpoint.h:
	* Collision.h:
	* HAnimHumanoid.h:
	* jsX3DFieldDefinition.h:
	* Coordinate.h:
	* DISEntityManager.h:
	* jsMFColorRGBA.h:
	* LineProperties.h:
	* jsComponentInfoArray.h:
	* jsSFColorRGBA.h:
	* ColorDamper.h:
	* X3DLightNode.h:
	* TriangleSet.h:
	* X3DLayerNode.h:
	* X3DFontStyleNode.h:
	* X3DMaterialNode.h:
	* LoadSensor.h:
	* HAnimDisplacer.h:
	* jsX3DExecutionContext.h:
	* Polyline2D.h:
	* ArcClose2D.h:
	* PickableGroup.h:
	* ShaderProgram.h:
	* ProgramShader.h:
	* X3DShaderNode.h:
	* Rectangle2D.h:
	* PixelTexture.h:
	* GeoMetadata.h:
	* CoordinateDouble.h:
	* ImageTexture.h:
	* ComposedShader.h:
	* MovieTexture.h:
	* Extrusion.cpp:
	* X3DMetadataObject.h:
	* PackagedShader.h:
	* MultiTexture.h:
	* ScreenFontStyle.h:
	* Polypoint2D.h:
	* TwoSidedMaterial.h:
	* jsFieldDefinitionArray.h:
	* GeoLocation.h:
	* LinePickSensor.h:
	* ScalarChaser.h:
	* X3DColorNode.h:
	* PointPickSensor.h:
	* X3DAppearanceNode.h:
	* X3DDamperNode.h:
	* X3DNormalNode.h:
	* ContourPolyline2D.h:
	* GeoViewpoint.h:
	* NurbsPatchSurface.h:
	* NurbsSwungSurface.h:
	* X3DChaserNode.h:
	* X3DUrlObject.h:
	* X3DScriptNode.h:
	* GeoTransform.h:
	* NurbsSweptSurface.h:
	* CADAssembly.h:
	* GeoCoordinate.h:
	* X3DSoundSourceNode.h:
	* DISEntityTypeMapping.h:
	* TriangleSet2D.h:
	* X3DGroupingNode.h:
	* Contact.h:
	* X3DTextureNode.h:
	* VolumePickSensor.h:
	* PositionDamper.h:
	* TriangleFanSet.h:
	* IndexedLineSet.h:
	* Fog.h:
	* X3DViewportNode.h:
	* PositionChaser.h:
	* ElevationGrid.h:
	* X3DPrototypeInstance.h:
	* GeoTouchSensor.h:
	* X3DGeometryNode.h:
	* ViewpointGroup.h:
	* X3DFollowerNode.h:
	* OrthoViewpoint.h:
	* NurbsTrimmedSurface.h:
	* X3DTimeDependentNode.h:
	* X3DBoundedObject.h:
	* X3DPickSensorNode.h:
	* IndexedFaceSet.h:
	* X3DPickableObject.h:
	* KeySensor.h:
	* NavigationInfo.h:
	* DirectionalLight.h:
	* ImageTexture3D.h:
	* PositionChaser2D.h:
	* TriangleStripSet.h:
	* PositionDamper2D.h:
	* IndexedQuadSet.h:
	* RigidBody.h:
	* X3DTexture2DNode.h:
	* PixelTexture3D.h:
	* TexCoordDamper2D.h:
	* BallJoint.h:
	* TextureTransform.h:
	* TimeTrigger.h:
	* CoordinateDamper.h:
	* TextureProperties.h:
	* GeoElevationGrid.h:
	* OrientationChaser.h:
	* EaseInEaseOut.h:
	* TextureCoordinate.h:
	* OrientationDamper.h:
	* ConeEmitter.h:
	* PrimitivePickSensor.h:
	* X3DCoordinateNode.h:
	* MotorJoint.h:
	* X3DViewpointNode.h:
	* X3DTexture3DNode.h:
	* X3DAppearanceChildNode.h:
	* BooleanToggle.h:
	* BooleanFilter.h:
	* FloatVertexAttribute.h:
	* NurbsTextureCoordinate.h:
	* PointEmitter.h:
	* IndexedTriangleSet.h:
	* SliderJoint.h:
	* StringSensor.h:
	* IntegerTrigger.h:
	* VolumeEmitter.h:
	* BooleanTrigger.h:
	* X3DTriggerNode.h:
	* GeoProximitySensor.h:
	* LocalFog.h:
	* ComposedTexture3D.h:
	* ParticleSystem.h:
	* SurfaceEmitter.h:
	* TextureTransform3D.h:
	* NurbsSurfaceInterpolator.h:
	* X3DVertexAttributeNode.h:
	* X3DNurbsControlCurveNode.h:
	* Matrix4VertexAttribute.h:
	* Matrix3VertexAttribute.h:
	* TextureCoordinate3D.h:
	* TextureCoordinate4D.h:
	* CollisionSpace.h:
	* IndexedTriangleFanSet.h:
	* UniversalJoint.h:
	* Background.h:
	* ColorInterpolator.h:
	* X3DParametricGeometryNode.h:
	* PolylineEmitter.h:
	* BooleanSequencer.h:
	* MultiTextureTransform.h:
	* X3DSequencerNode.h:
	* IntegerSequencer.h:
	* X3DNetworkSensorNode.h:
	* NurbsPositionInterpolator.h:
	* NormalInterpolator.h:
	* TouchSensor.h:
	* ScalarInterpolator.h:
	* PlaneSensor.h:
	* CollisionSensor.h:
	* WindPhysicsModel.h:
	* ExplosionEmitter.h:
	* MultiTextureCoordinate.h:
	* CollidableShape.h:
	* IndexedTriangleStripSet.h:
	* X3DInterpolatorNode.h:
	* X3DTextureTransformNode.h:
	* SphereSensor.h:
	* X3DComposedGeometryNode.h:
	* X3DFogObject.h:
	* X3DNurbsSurfaceGeometryNode.h:
	* CollidableOffset.h:
	* FogCoordinate.h:
	* GeoPositionInterpolator.h:
	* NurbsOrientationInterpolator.h:
	* PositionInterpolator.h:
	* X3DTextureCoordinateNode.h:
	* X3DGeometricPropertyNode.h:
	* X3DRigidJointNode.h:
	* TransformSensor.h:
	* ProximitySensor.h:
	* GravityPhysicsModel.h:
	* X3DProgrammableShaderObject.h:
	* BoundedPhysicsModel.h:
	* CylinderSensor.h:
	* TextureCoordinateGenerator.h:
	* VisibilitySensor.h:
	* RigidBodyCollection.h:
	* ImageCubeMapTexture.h:
	* TextureTransformMatrix3D.h:
	* CoordinateInterpolator.h:
	* PositionInterpolator2D.h:
	* CollisionCollection.h:
	* OrientationInterpolator.h:
	* DoubleAxisHingeJoint.h:
	* SingleAxisHingeJoint.h:
	* TextureBackground.h:
	* X3DKeyDeviceSensorNode.h:
	* SplineScalarInterpolator.h:
	* VisibilitySensor.cpp:
	* X3DBackgroundNode.h:
	* X3DDragSensorNode.h:
	* CoordinateInterpolator2D.h:
	* X3DParticleEmitterNode.h:
	* ComposedCubeMapTexture.h:
	* X3DTouchSensorNode.h:
	* X3DNBodyCollidableNode.h:
	* GeneratedCubeMapTexture.h:
	* X3DProductStructureChildNode.h:
	* SplinePositionInterpolator.h:
	* X3DEnvironmentTextureNode.h:
	* SquadOrientationInterpolator.h:
	* SplinePositionInterpolator2D.h:
	* X3DParticlePhysicsModelNode.h:
	* X3DNBodyCollisionSpaceNode.h:
	* X3DEnvironmentalSensorNode.h:
	* X3DPointingDeviceSensorNode.h: 

2012-07-10  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* Matrix.h:
	* SFMatrix4.h:
	* Browser.cpp:
	* Renderer.h:
	* SFMatrix4.cpp:
	* Renderer.cpp:
	* ViewVolume.h:
	* SbMatrix4.h:
	* ViewVolume.cpp:
	* SbMatrix4.cpp:
	* SbViewVolume.h:
	* ShapeContainer.h:
	* LightContainer.h:
	* SbViewVolume.cpp:
	* ShapeContainer.cpp:
	* LOD.cpp:
	* X3DShapeNode.h:
	* Transform.h:
	* Extrusion.h:
	* X3DShapeNode.cpp:
	* X3DLayerNode.h:
	* Billboard.cpp:
	* Extrusion.cpp:
	* Viewpoint.cpp:
	* X3DLayerNode.cpp:
	* TextureTransform.h:
	* X3DViewpointNode.h:
	* X3DViewpointNode.cpp:
	* X3DFogObject.h:
	* ProximitySensor.h:
	* ProximitySensor.cpp:
	* VisibilitySensor.cpp:
	* X3DBackgroundNode.h: 

2012-07-10  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.pidb:
	* libtitania-x3d.cproj:
	* libtitania-x3d.md.pc:
	* Error.h:
	* X3DField.h:
	* X3DObject.h:
	* Viewer.h:
	* Browser.h:
	* X3DObject.cpp:
	* SFMatrix3.h:
	* ExternProto.h:
	* Browser.cpp:
	* X3DBrowser.h:
	* SFRotation4.h:
	* X3DBaseNode.cpp:
	* geturl.h:
	* SbMatrix4.h:
	* uncompress.h:
	* GarbageCollector.h:
	* GarbageCollector.cpp:
	* ImageTexture.h:
	* Billboard.cpp:
	* X3DLayerNode.cpp:
	* X3DUrlObject.h:
	* X3DUrlObject.cpp:
	* ProximitySensor.cpp:
	* X3DBackgroundNode.cpp: 

2012-07-09  Holger Seelig  <holger.seelig@yahoo.de>

	* SFColor.h:
	* Viewer.h:
	* SFMatrix3.h:
	* SFColor.cpp:
	* Viewer.cpp:
	* SFColorRGBA.h:
	* SFRotation4.h:
	* SFMatrix3.cpp:
	* SFColorRGBA.cpp:
	* SbMatrix4.h:
	* SFRotation4.cpp:
	* Billboard.cpp:
	* Extrusion.cpp:
	* X3DLayerNode.cpp:
	* TextureTransform.cpp:
	* ProximitySensor.cpp:
	* X3DBackgroundNode.h:
	* X3DBackgroundNode.cpp: 

2012-07-09  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* SFColor.h:
	* SFMatrix3.h:
	* SFRotation4.h:
	* SFColorRGBA.h:
	* SbColor.h:
	* SbMatrix3.h:
	* SbColor.cpp:
	* SbMatrix3.cpp:
	* SbColorRGBA.h:
	* SbRotation4.h:
	* SbQuaternion.h:
	* SbRotation4.cpp:
	* SbColorRGBA.cpp:
	* SbQuaternion.cpp: 

2012-07-09  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* SFVec3.h:
	* SFVec4.h:
	* SFVec2.h:
	* X3DField.h:
	* SFBool.h:
	* SFNode.h:
	* SFColor.h:
	* X3DObject.h:
	* SFBool.cpp:
	* SFNode.cpp:
	* Array.h:
	* X3DBaseNode.h:
	* SFColor.cpp:
	* SbLine.h:
	* SFColorRGBA.h:
	* SbBox3f.h:
	* SbColor.h:
	* X3DBaseNode.cpp:
	* SbPlane.h:
	* SFColorRGBA.cpp:
	* Statistics.cpp:
	* SbColor.cpp:
	* SbMatrix4.h:
	* SbMatrix3.h:
	* Generator.h:
	* SbLinear.cpp:
	* SbColorRGBA.h:
	* SbRotation4.h:
	* SbMatrix4.cpp:
	* SbMatrix3.cpp:
	* SbQuaternion.h:
	* Image.h:
	* SbRotation4.cpp:
	* SbColorRGBA.cpp:
	* SbQuaternion.cpp:
	* Layer.cpp:
	* Extrusion.cpp:
	* IndexedLineSet.cpp:
	* X3DGroupingNode.cpp:
	* X3DGeometryNode.cpp:
	* IndexedFaceSet.cpp:
	* X3DBackgroundNode.h:
	* X3DBackgroundNode.cpp: 

2012-07-09  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.pidb:
	* RegEx.h:
	* RegEx.cpp:
	* SFBool.h:
	* X3DObject.h:
	* SFBool.cpp:
	* X3DObject.cpp:
	* X3DBrowser.h:
	* ExternProto.cpp:
	* X3DBrowser.cpp:
	* Anchor.h:
	* ImageTexture.h:
	* PixelTexture.h:
	* MovieTexture.h:
	* X3DUrlObject.h:
	* PixelTexture.cpp:
	* ImageTexture.cpp:
	* X3DUrlObject.cpp:
	* X3DTexture2DNode.h:
	* X3DTexture2DNode.cpp: 

2012-07-08  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* geturl.h:
	* Browser.h:
	* geturl.cpp:
	* ExternProto.h:
	* Browser.cpp:
	* X3DBrowser.h:
	* uncompress.h:
	* ExternProto.cpp:
	* geturl.h:
	* uncompress.cpp:
	* X3DBrowser.cpp:
	* geturl.cpp:
	* uncompress.h:
	* uncompress.cpp:
	* Anchor.h:
	* Anchor.cpp:
	* Inline.cpp:
	* X3DUrlObject.h:
	* ImageTexture.cpp:
	* X3DUrlObject.cpp: 

2012-07-08  Holger Seelig  <holger.seelig@yahoo.de>

	* X3D.h:
	* libtitania-x3d.cproj:
	* Error.h:
	* Errors.h:
	* Error.cpp:
	* Route.cpp:
	* Errors.cpp:
	* Parser.h:
	* Scene.cpp:
	* Browser.h:
	* X3DBaseNode.h:
	* Browser.cpp:
	* ExternProto.cpp:
	* X3DBrowser.h:
	* X3DBaseNode.cpp:
	* X3DBrowser.cpp:
	* SbQuaternion.h:
	* X3DExecutionContext.h:
	* SupportedProfiles.h:
	* X3DExecutionContext.cpp:
	* SupportedComponents.h:
	* SupportedProfiles.cpp:
	* BrowserApplication.cpp:
	* SupportedComponents.cpp: 

2012-07-08  Holger Seelig  <holger.seelig@yahoo.de>

	* Name.h:
	* Hit.h:
	* X3DField.h:
	* SFTime.h:
	* SFVec4.h:
	* SFVec2.h:
	* SFVec3.h:
	* Viewer.h:
	* SFScalar.h:
	* SFNode.cpp:
	* Browser.h:
	* SFMatrix4.h:
	* SFMatrix3.h:
	* X3DParser.h:
	* SbBox3f.h:
	* SbPlane.h:
	* ArrayFields.h:
	* SFRotation4.h:
	* SbLine.cpp:
	* SbMatrix4.h:
	* SbPlane.cpp:
	* ArrayFields.cpp:
	* SbMatrix3.h:
	* Generator.h:
	* SbLinear.cpp:
	* SbRotation4.h:
	* Sphere.cpp:
	* Billboard.cpp:
	* X3DLayerNode.cpp:
	* ElevationGrid.cpp:
	* X3DGeometryNode.cpp:
	* IndexedFaceSet.cpp:
	* X3DTexture2DNode.cpp:
	* TextureProperties.cpp:
	* ScalarInterpolator.cpp:
	* ProximitySensor.cpp:
	* X3DBackgroundNode.cpp:
	* CoordinateInterpolator2D.cpp: 

2012-07-07  Holger Seelig  <holger.seelig@yahoo.de>

	* Fields.h:
	* libtitania-x3d.cproj:
	* MFInt32.h:
	* SFScalar.h:
	* SFScalar.cpp:
	* ArrayFields.h:
	* SbMatrix3.h:
	* SbLinear.cpp:
	* ArrayTypes.h: 

2012-07-07  Holger Seelig  <holger.seelig@yahoo.de>

	* Fields.h:
	* libtitania-x3d.cproj:
	* Viewer.h:
	* SFMatrix4.h:
	* Viewer.cpp:
	* SFMatrix3d.h:
	* SFMatrix3f.h:
	* ArrayFields.h:
	* SFRotation4.h:
	* SFRotation4.cpp:
	* LightContainer.h:
	* ShapeContainer.h:
	* SbViewVolume.cpp:
	* ArrayTypes.h:
	* Extrusion.cpp:
	* Billboard.cpp:
	* X3DLayerNode.cpp:
	* X3DViewpointNode.h:
	* ProximitySensor.cpp:
	* X3DBackgroundNode.cpp: 

2012-07-07  Holger Seelig  <holger.seelig@yahoo.de>

	* Fields.h:
	* libtitania-x3d.cproj:
	* Hit.h:
	* SFVec4.h:
	* SFVec3.h:
	* SFVec2.h:
	* Viewer.h:
	* SFVec3.cpp:
	* Browser.h:
	* Viewer.cpp:
	* SFMatrix4f.h:
	* Browser.cpp:
	* SbLine.h:
	* SFMatrix3d.h:
	* SFRotation.h:
	* SFMatrix3f.h:
	* SFMatrix4d.h:
	* SbBox3f.h:
	* ArrayFields.h:
	* SbPlane.h:
	* SbLine.cpp:
	* SbPlane.cpp:
	* SbMatrix4.h:
	* SbColor.cpp:
	* SbBox3f.cpp:
	* SbMatrix3.h:
	* SbMatrix3f.h:
	* SbMatrix4f.h:
	* SbLinear.cpp:
	* SbRotation.h:
	* SbMatrix3d.h:
	* SbMatrix4d.h:
	* SbRotationf.h:
	* SbRotationd.h:
	* SbQuaternion.h:
	* SbColorRGBA.cpp:
	* SbViewVolume.cpp:
	* Layer.cpp:
	* Box.cpp:
	* Cone.cpp:
	* ArrayTypes.h:
	* Transform.h:
	* Sphere.cpp:
	* Extrusion.h:
	* X3DShapeNode.cpp:
	* Transform.cpp:
	* Cylinder.cpp:
	* Extrusion.cpp:
	* Viewpoint.cpp:
	* Billboard.cpp:
	* X3DLayerNode.cpp:
	* ElevationGrid.h:
	* IndexedFaceSet.h:
	* X3DGeometryNode.h:
	* IndexedLineSet.cpp:
	* X3DGroupingNode.cpp:
	* ElevationGrid.cpp:
	* X3DViewpointNode.h:
	* IndexedFaceSet.cpp:
	* X3DGeometryNode.cpp:
	* X3DViewpointNode.cpp:
	* NormalInterpolator.h:
	* NormalInterpolator.cpp:
	* ProximitySensor.h:
	* PositionInterpolator.cpp:
	* ProximitySensor.cpp:
	* CoordinateInterpolator.cpp:
	* X3DBackgroundNode.cpp: 

2012-07-06  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* SFMatrix3d.cpp:
	* SFMatrix3f.cpp:
	* SbMatrix3.h:
	* SbMatrix4.h:
	* SbMatrix4d.h:
	* SbMatrix3d.h:
	* SbMatrix3f.h:
	* SbLinear.cpp:
	* SbMatrix4f.h:
	* Transform.cpp:
	* Extrusion.cpp:
	* ElevationGrid.h:
	* IndexedFaceSet.h:
	* ElevationGrid.cpp:
	* IndexedFaceSet.cpp:
	* TextureTransform.cpp: 

2012-07-06  Holger Seelig  <holger.seelig@yahoo.de>

	* Math.h:
	* Math.cpp:
	* Fields.h:
	* libtitania-x3d.cproj:
	* SFVec4.h:
	* SFVec2.h:
	* SFVec2.cpp:
	* SbVec2.h:
	* SFMatrix3d.h:
	* SbVec4.h:
	* SbVec3.h:
	* SbColor.h:
	* SFMatrix3d.cpp:
	* SFMatrix3f.cpp:
	* SbColor.cpp:
	* SbColorRGBA.h:
	* SbColorRGBA.cpp:
	* Material.cpp:
	* Cone.cpp:
	* ArrayTypes.h:
	* Sphere.cpp:
	* SpotLight.cpp:
	* Transform.cpp:
	* Cylinder.cpp:
	* Extrusion.cpp:
	* Billboard.cpp:
	* TextureTransform.cpp:
	* X3DTexture2DNode.cpp:
	* TextureProperties.cpp:
	* ScalarInterpolator.cpp:
	* PositionInterpolator2D.cpp:
	* X3DBackgroundNode.cpp:
	* CoordinateInterpolator2D.cpp: 

2012-07-06  Holger Seelig  <holger.seelig@yahoo.de>

	* Fields.h:
	* libtitania-x3d.cproj:
	* SFVec4.h:
	* SFVec4f.h:
	* SFVec2f.h:
	* SFVec4d.h:
	* SFVec3d.h:
	* SFVec3f.h:
	* SFVec4.cpp:
	* SFVec4d.cpp:
	* SFVec4f.cpp:
	* ArrayFields.h:
	* ArrayTypes.h: 

2012-07-06  Holger Seelig  <holger.seelig@yahoo.de>

	* SbLinear.cpp: 

2012-07-06  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* SFBool.h:
	* SFTime.h:
	* SFNode.h:
	* X3DField.h:
	* SFVec3d.h:
	* SFVec3f.h:
	* SFColor.h:
	* SFVec4d.h:
	* SFVec4f.h:
	* SFVec2f.h:
	* SFVec2d.h:
	* SFFloat.h:
	* SFImage.h:
	* SFInt32.h:
	* SFNumber.h:
	* SFNode.cpp:
	* SFBool.cpp:
	* SFString.h:
	* SFTime.cpp:
	* SFDouble.h:
	* SFVec3d.cpp:
	* SFVec3f.cpp:
	* SFInt32.cpp:
	* SFVec2f.cpp:
	* SFVec4d.cpp:
	* SFFloat.cpp:
	* SFVec4f.cpp:
	* SFImage.cpp:
	* SFVec2d.cpp:
	* SFColor.cpp:
	* SFRotation.h:
	* SFString.cpp:
	* SFMatrix3d.h:
	* SFDouble.cpp:
	* SFMatrix4f.h:
	* SFMatrix3f.h:
	* SFMatrix4d.h:
	* X3DArrayField.h:
	* SFColorRGBA.h:
	* SFMatrix4d.cpp:
	* SFRotation.cpp:
	* SFMatrix4f.cpp:
	* SFMatrix3d.cpp:
	* SFMatrix3f.cpp:
	* SFColorRGBA.cpp:
	* X3DLayerNode.cpp: 

2012-07-06  Holger Seelig  <holger.seelig@yahoo.de>

	* Proto.cpp:
	* Parser.cpp:
	* X3DBaseNode.cpp:
	* ExternProto.cpp:
	* ArrayFields.cpp:
	* Generator.h:
	* Generator.cpp: 

2012-07-06  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* Name.h:
	* Route.h:
	* SFNode.h:
	* X3DProto.h:
	* SFTime.h:
	* SFBool.h:
	* X3DField.h:
	* SFInt32.h:
	* SFVec4d.h:
	* SFVec2d.h:
	* Parser.h:
	* SFColor.h:
	* SFVec3d.h:
	* SFVec3f.h:
	* X3DObject.h:
	* SFFloat.h:
	* SFVec4f.h:
	* SFImage.h:
	* SFVec2f.h:
	* MFNode.cpp:
	* SFNode.cpp:
	* SFDouble.h:
	* SFTime.cpp:
	* SFString.h:
	* Browser.h:
	* SFBool.cpp:
	* SFFloat.cpp:
	* SFVec2f.cpp:
	* SFVec4f.cpp:
	* SFVec3d.cpp:
	* SFVec3f.cpp:
	* SFColor.cpp:
	* SFImage.cpp:
	* MFInt32.cpp:
	* SFInt32.cpp:
	* ProfileInfo.h:
	* Parser.cpp:
	* ExternProto.h:
	* X3DBaseNode.h:
	* SFVec4d.cpp:
	* SFVec2d.cpp:
	* SFRotation.h:
	* X3DParser.h:
	* SFMatrix4d.h:
	* SFMatrix4f.h:
	* Browser.cpp:
	* SFDouble.cpp:
	* SFMatrix3d.h:
	* SFMatrix3f.h:
	* SFString.cpp:
	* ComponentInfo.h:
	* X3DBaseNode.cpp:
	* ArrayFields.h:
	* SFColorRGBA.h:
	* ExternProto.cpp:
	* SFMatrix3d.cpp:
	* SFMatrix4d.cpp:
	* SFMatrix4f.cpp:
	* X3DParser.cpp:
	* SFRotation.cpp:
	* SFMatrix3f.cpp:
	* SFColorRGBA.cpp:
	* ArrayFields.cpp:
	* SbMatrix3.h:
	* SbMatrix4.h:
	* GarbageCollector.h:
	* X3DExecutionContext.cpp:
	* GarbageCollector.cpp:
	* BrowserApplication.cpp:
	* EspduTransform.cpp:
	* X3DPrototypeInstance.h:
	* X3DPrototypeInstance.cpp:
	* X3DBackgroundNode.cpp: 

2012-07-05  Holger Seelig  <holger.seelig@yahoo.de>

	* SFNode.h:
	* SFNode.cpp:
	* MFNode.cpp: 

2012-07-05  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* SFNode.h:
	* SFBool.h:
	* SFTime.h:
	* SFColor.h:
	* SFInt32.h:
	* SFVec3d.h:
	* SFVec3f.h:
	* SFVec4d.h:
	* SFVec4f.h:
	* SFVec2f.h:
	* SFVec2d.h:
	* SFFloat.h:
	* SFImage.h:
	* SFDouble.h:
	* SFString.h:
	* SFNode.cpp:
	* SFTime.cpp:
	* SFBool.cpp:
	* SFVec4d.cpp:
	* SFInt32.cpp:
	* SFVec2f.cpp:
	* SFVec2d.cpp:
	* SFVec3f.cpp:
	* SFVec3d.cpp:
	* SFFloat.cpp:
	* SFImage.cpp:
	* SFColor.cpp:
	* SFVec4f.cpp:
	* SFMatrix4d.h:
	* SFRotation.h:
	* SFDouble.cpp:
	* SFString.cpp:
	* SFMatrix4f.h:
	* SFMatrix3d.h:
	* SFMatrix3f.h:
	* SFColorRGBA.h:
	* SFMatrix3d.cpp:
	* SFMatrix4d.cpp:
	* SFRotation.cpp:
	* SFMatrix3f.cpp:
	* SFMatrix4f.cpp:
	* SFColorRGBA.cpp: 

2012-07-05  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.pidb:
	* Parser.h:
	* Parser.cpp:
	* Browser.cpp:
	* X3DParser.h:
	* BrowserApplication.cpp:
	* DISEntityMapping.cpp: 

2012-07-04  Holger Seelig  <holger.seelig@yahoo.de>

	* Parser.h:
	* Parser.cpp:
	* X3DParser.h: 

2012-07-03  Holger Seelig  <holger.seelig@yahoo.de>

	* Time.h:
	* Time.cpp:
	* libtitania-x3d.cproj:
	* Extensions:
	* Parser.h:
	* Scene.cpp:
	* Parser.cpp:
	* X3DParser.h:
	* Browser.cpp:
	* X3DBaseNode.cpp:
	* CosmoWorlds:
	* CosmoWorlds:
	* uncompress.cpp:
	* X3DExecutionContext.h:
	* X3DExecutionContext.cpp:
	* BrowserApplication.cpp:
	* CosmoWorlds.wrl:
	* X3DPrototypeInstance.cpp:
	* kopierter Text.txt: 

2012-07-03  Holger Seelig  <holger.seelig@yahoo.de>

	* SFNode.h:
	* MFNode.h:
	* X3DProto.h:
	* Browser.h:
	* MFNode.cpp:
	* Parser.cpp:
	* X3DBaseNode.h:
	* Browser.cpp:
	* X3DBaseNode.cpp:
	* X3DArrayField.h:
	* ExecutionContext.h:
	* X3DFieldDefinition.h:
	* ExecutionContext.cpp:
	* X3DFieldDefinition.cpp:
	* X3DPrototypeInstance.h:
	* X3DPrototypeInstance.cpp: 

2012-07-03  Holger Seelig  <holger.seelig@yahoo.de>

	* Parser.cpp:
	* X3DArrayField.h:
	* ExecutionContext.cpp: 

2012-07-03  Holger Seelig  <holger.seelig@yahoo.de>

	* Proto.h:
	* Route.h:
	* Route.cpp:
	* X3DProto.h:
	* X3DProto.cpp:
	* ExternProto.h:
	* ExternProto.cpp:
	* X3DExecutionContext.cpp:
	* X3DPrototypeInstance.h:
	* X3DPrototypeInstance.cpp: 

2012-07-03  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DBaseNode.cpp: 

2012-07-03  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DBaseNode.cpp:
	* BrowserApplication.cpp: 

2012-07-02  Holger Seelig  <holger.seelig@yahoo.de>

	* Parser.cpp:
	* GarbageCollector.cpp:
	* BrowserApplication.cpp:
	* X3DPrototypeInstance.cpp: 

2012-07-02  Holger Seelig  <holger.seelig@yahoo.de>

	* Route.h:
	* Proto.h:
	* Route.cpp:
	* Proto.cpp:
	* X3DProto.h:
	* Browser.h:
	* X3DProto.cpp:
	* X3DBaseNode.h:
	* ExternProto.h:
	* Parser.cpp:
	* Browser.cpp:
	* X3DArrayField.h:
	* ExternProto.cpp:
	* X3DFieldDefinition.cpp:
	* X3DPrototypeInstance.h:
	* X3DPrototypeInstance.cpp: 

2012-07-02  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DPrototypeInstance.h:
	* X3DPrototypeInstance.cpp: 

2012-07-02  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DField.h:
	* X3DObject.h:
	* Viewer.h:
	* Parser.h:
	* SFNode.cpp:
	* Browser.h:
	* X3DBaseNode.h:
	* Browser.cpp:
	* X3DArrayField.h:
	* X3DBaseNode.cpp:
	* GarbageCollector.h:
	* BrowserApplication.h:
	* GarbageCollector.cpp:
	* X3DExecutionContext.cpp: 

2012-07-01  Holger Seelig  <holger.seelig@yahoo.de>

	* JavaScript.h:
	* Route.h:
	* Proto.h:
	* RefPtr.h:
	* SFBool.h:
	* Scene.h:
	* SFTime.h:
	* SFNode.h:
	* SFVec2f.h:
	* SFVec3f.h:
	* SFFloat.h:
	* SFVec4d.h:
	* SFInt32.h:
	* SFVec2d.h:
	* SFVec3d.h:
	* SFVec4f.h:
	* SFImage.h:
	* SFColor.h:
	* Browser.h:
	* SFNode.cpp:
	* SFString.h:
	* SFDouble.h:
	* ProfileInfo.h:
	* X3DBaseNode.h:
	* ExternProto.h:
	* SFMatrix4d.h:
	* SFMatrix3d.h:
	* SFMatrix4f.h:
	* SFMatrix3f.h:
	* SFRotation.h:
	* X3DArrayField.h:
	* SFColorRGBA.h:
	* ComponentInfo.h:
	* X3DBaseNode.cpp:
	* MotionBlur.h:
	* Statistics.h:
	* Text.h:
	* ExecutionContext.h:
	* Shape.h:
	* Sound.h:
	* Generator.cpp:
	* X3DFieldDefinition.h:
	* Layout.h:
	* SignalPdu.h:
	* LOD.h:
	* NurbsSet.h:
	* Layer.h:
	* Box.h:
	* Group.h:
	* Material.h:
	* WorldInfo.h:
	* FontStyle.h:
	* Cone.h:
	* TimeSensor.h:
	* Switch.h:
	* ReceiverPdu.h:
	* Contour2D.h:
	* Color.h:
	* AudioClip.h:
	* HAnimSite.h:
	* Script.h:
	* Appearance.h:
	* Arc2D.h:
	* MetadataSet.h:
	* NurbsCurve.h:
	* Normal.h:
	* MetadataBool.h:
	* Sphere.h:
	* Disk2D.h:
	* HAnimJoint.h:
	* GeoLOD.h:
	* LayerSet.h:
	* Viewport.h:
	* BrowserApplication.cpp:
	* LineSet.h:
	* Anchor.h:
	* Inline.h:
	* SpotLight.h:
	* NurbsCurve2D.h:
	* PointSet.h:
	* Transform.h:
	* ShaderPart.h:
	* X3DShapeNode.h:
	* LayoutLayer.h:
	* LayoutGroup.h:
	* MetadataFloat.h:
	* ScreenGroup.h:
	* EspduTransform.h:
	* TransmitterPdu.h:
	* Circle2D.h:
	* PointLight.h:
	* ColorRGBA.h:
	* CADFace.h:
	* QuadSet.h:
	* CADPart.h:
	* HAnimSegment.h:
	* MetadataString.h:
	* MetadataDouble.h:
	* ClipPlane.h:
	* Cylinder.h:
	* GeoOrigin.h:
	* Extrusion.h:
	* MetadataInteger.h:
	* CADLayer.h:
	* Collision.h:
	* Billboard.h:
	* Viewpoint.h:
	* StaticGroup.h:
	* Coordinate.h:
	* HAnimHumanoid.h:
	* DISEntityManager.h:
	* FillProperties.h:
	* LineProperties.h:
	* TriangleSet.h:
	* X3DLightNode.h:
	* Polyline2D.h:
	* ArcClose2D.h:
	* ProgramShader.h:
	* ShaderProgram.h:
	* HAnimDisplacer.h:
	* PickableGroup.h:
	* ColorDamper.h:
	* LoadSensor.h:
	* MultiTexture.h:
	* ImageTexture.h:
	* PackagedShader.h:
	* Rectangle2D.h:
	* Polypoint2D.h:
	* CoordinateDouble.h:
	* GeoLocation.h:
	* TwoSidedMaterial.h:
	* LinePickSensor.h:
	* PixelTexture.h:
	* MovieTexture.h:
	* GeoMetadata.h:
	* ComposedShader.h:
	* ScalarChaser.h:
	* ScreenFontStyle.h:
	* PointPickSensor.h:
	* ContourPolyline2D.h:
	* NurbsSweptSurface.h:
	* CADAssembly.h:
	* NurbsSwungSurface.h:
	* GeoViewpoint.h:
	* GeoTransform.h:
	* NurbsPatchSurface.h:
	* GeoCoordinate.h:
	* ElevationGrid.h:
	* Fog.h:
	* TriangleFanSet.h:
	* TriangleSet2D.h:
	* Contact.h:
	* VolumePickSensor.h:
	* IndexedLineSet.h:
	* PositionDamper.h:
	* DISEntityTypeMapping.h:
	* PositionChaser.h:
	* DirectionalLight.h:
	* ViewpointGroup.h:
	* NavigationInfo.h:
	* OrthoViewpoint.h:
	* GeoTouchSensor.h:
	* NurbsTrimmedSurface.h:
	* X3DGeometryNode.h:
	* KeySensor.h:
	* IndexedFaceSet.h:
	* X3DPrototypeInstance.h:
	* X3DTexture2DNode.h:
	* CoordinateDamper.h:
	* TexCoordDamper2D.h:
	* PixelTexture3D.h:
	* TextureTransform.h:
	* TimeTrigger.h:
	* ImageTexture3D.h:
	* IndexedQuadSet.h:
	* TriangleStripSet.h:
	* RigidBody.h:
	* PositionDamper2D.h:
	* BallJoint.h:
	* PositionChaser2D.h:
	* EaseInEaseOut.h:
	* OrientationChaser.h:
	* ConeEmitter.h:
	* PrimitivePickSensor.h:
	* TextureCoordinate.h:
	* GeoElevationGrid.h:
	* MotorJoint.h:
	* TextureProperties.h:
	* OrientationDamper.h:
	* IndexedTriangleSet.h:
	* BooleanToggle.h:
	* FloatVertexAttribute.h:
	* PointEmitter.h:
	* StringSensor.h:
	* SliderJoint.h:
	* NurbsTextureCoordinate.h:
	* BooleanFilter.h:
	* LocalFog.h:
	* GeoProximitySensor.h:
	* BooleanTrigger.h:
	* IntegerTrigger.h:
	* VolumeEmitter.h:
	* ComposedTexture3D.h:
	* TextureTransform3D.h:
	* SurfaceEmitter.h:
	* ParticleSystem.h:
	* NurbsSurfaceInterpolator.h:
	* Matrix3VertexAttribute.h:
	* Matrix4VertexAttribute.h:
	* Background.h:
	* IntegerSequencer.h:
	* IndexedTriangleFanSet.h:
	* BooleanSequencer.h:
	* ColorInterpolator.h:
	* MultiTextureTransform.h:
	* NurbsPositionInterpolator.h:
	* TextureCoordinate3D.h:
	* UniversalJoint.h:
	* CollisionSpace.h:
	* PolylineEmitter.h:
	* TextureCoordinate4D.h:
	* CollisionSensor.h:
	* ScalarInterpolator.h:
	* ExplosionEmitter.h:
	* WindPhysicsModel.h:
	* CollidableShape.h:
	* MultiTextureCoordinate.h:
	* PlaneSensor.h:
	* NormalInterpolator.h:
	* TouchSensor.h:
	* IndexedTriangleStripSet.h:
	* SphereSensor.h:
	* X3DFogObject.h:
	* CollidableOffset.h:
	* GeoPositionInterpolator.h:
	* FogCoordinate.h:
	* NurbsOrientationInterpolator.h:
	* PositionInterpolator.h:
	* BoundedPhysicsModel.h:
	* GravityPhysicsModel.h:
	* TransformSensor.h:
	* ProximitySensor.h:
	* CylinderSensor.h:
	* CollisionCollection.h:
	* TextureCoordinateGenerator.h:
	* RigidBodyCollection.h:
	* VisibilitySensor.h:
	* CoordinateInterpolator.h:
	* TextureTransformMatrix3D.h:
	* ImageCubeMapTexture.h:
	* PositionInterpolator2D.h:
	* DoubleAxisHingeJoint.h:
	* OrientationInterpolator.h:
	* SingleAxisHingeJoint.h:
	* SplineScalarInterpolator.h:
	* TextureBackground.h:
	* X3DBackgroundNode.h:
	* CoordinateInterpolator2D.h:
	* ComposedCubeMapTexture.h:
	* SplinePositionInterpolator.h:
	* GeneratedCubeMapTexture.h:
	* SquadOrientationInterpolator.h:
	* SplinePositionInterpolator2D.h:
	* X3DPointingDeviceSensorNode.h: 

2012-06-30  Holger Seelig  <holger.seelig@yahoo.de>

	* MetadataBool.cpp: 

2012-06-30  Holger Seelig  <holger.seelig@yahoo.de>

	* SbMatrix3.h:
	* SbMatrix4.h:
	* Text.cpp:
	* Layout.h:
	* SignalPdu.h:
	* Sound.cpp:
	* Shape.cpp:
	* X3DNode.cpp:
	* ReceiverPdu.h:
	* Layout.cpp:
	* SignalPdu.cpp:
	* Material.cpp:
	* NurbsSet.cpp:
	* Box.cpp:
	* LOD.cpp:
	* Group.cpp:
	* Layer.cpp:
	* WorldInfo.cpp:
	* FontStyle.cpp:
	* AudioClip.cpp:
	* Contour2D.cpp:
	* Switch.cpp:
	* ReceiverPdu.cpp:
	* Color.cpp:
	* Cone.cpp:
	* TimeSensor.cpp:
	* Normal.cpp:
	* MetadataSet.cpp:
	* EspduTransform.h:
	* Script.cpp:
	* Arc2D.cpp:
	* NurbsCurve.cpp:
	* HAnimSite.cpp:
	* Appearance.cpp:
	* X3DInfoNode.cpp:
	* TransmitterPdu.h:
	* LayerSet.cpp:
	* Inline.cpp:
	* Anchor.cpp:
	* GeoLOD.cpp:
	* Sphere.cpp:
	* LineSet.cpp:
	* HAnimJoint.cpp:
	* X3DChildNode.cpp:
	* Viewport.cpp:
	* Disk2D.cpp:
	* LayoutLayer.cpp:
	* ShaderPart.cpp:
	* EspduTransform.cpp:
	* MetadataFloat.cpp:
	* NurbsCurve2D.cpp:
	* SpotLight.cpp:
	* ScreenGroup.cpp:
	* TransmitterPdu.cpp:
	* X3DShapeNode.cpp:
	* PointSet.cpp:
	* X3DSensorNode.cpp:
	* LayoutGroup.cpp:
	* Transform.cpp:
	* X3DSoundNode.cpp:
	* QuadSet.cpp:
	* HAnimSegment.cpp:
	* PointLight.cpp:
	* CADPart.cpp:
	* MetadataString.cpp:
	* MetadataDouble.cpp:
	* Cylinder.cpp:
	* Circle2D.cpp:
	* CADFace.cpp:
	* ClipPlane.cpp:
	* ColorRGBA.cpp:
	* Billboard.cpp:
	* Collision.cpp:
	* X3DLayoutNode.cpp:
	* GeoOrigin.cpp:
	* MetadataInteger.cpp:
	* FillProperties.cpp:
	* DISEntityManager.cpp:
	* Viewpoint.cpp:
	* LineProperties.cpp:
	* CADLayer.cpp:
	* X3DBindableNode.cpp:
	* HAnimHumanoid.cpp:
	* Coordinate.cpp:
	* Extrusion.cpp:
	* StaticGroup.cpp:
	* X3DShaderNode.cpp:
	* X3DFontStyleNode.cpp:
	* ProgramShader.cpp:
	* ShaderProgram.cpp:
	* X3DLightNode.cpp:
	* ArcClose2D.cpp:
	* Polyline2D.cpp:
	* ColorDamper.cpp:
	* X3DLayerNode.cpp:
	* PickableGroup.cpp:
	* LoadSensor.cpp:
	* TriangleSet.cpp:
	* HAnimDisplacer.cpp:
	* X3DMaterialNode.cpp:
	* CoordinateDouble.cpp:
	* Polypoint2D.cpp:
	* LinePickSensor.cpp:
	* ComposedShader.cpp:
	* X3DColorNode.cpp:
	* GeoMetadata.cpp:
	* ImageTexture.cpp:
	* ScreenFontStyle.cpp:
	* TwoSidedMaterial.cpp:
	* Rectangle2D.cpp:
	* MovieTexture.cpp:
	* PixelTexture.cpp:
	* ScalarChaser.cpp:
	* X3DMetadataObject.cpp:
	* MultiTexture.cpp:
	* GeoLocation.cpp:
	* PackagedShader.cpp:
	* X3DScriptNode.cpp:
	* GeoViewpoint.cpp:
	* NurbsSweptSurface.cpp:
	* ContourPolyline2D.cpp:
	* GeoTransform.cpp:
	* CADAssembly.cpp:
	* X3DAppearanceNode.cpp:
	* X3DUrlObject.cpp:
	* X3DNormalNode.cpp:
	* NurbsPatchSurface.cpp:
	* PointPickSensor.cpp:
	* NurbsSwungSurface.cpp:
	* PositionChaser.cpp:
	* IndexedLineSet.cpp:
	* ElevationGrid.cpp:
	* DISEntityTypeMapping.cpp:
	* Fog.cpp:
	* TriangleFanSet.cpp:
	* PositionDamper.cpp:
	* X3DSoundSourceNode.cpp:
	* X3DGroupingNode.cpp:
	* VolumePickSensor.cpp:
	* TriangleSet2D.cpp:
	* X3DTextureNode.cpp:
	* Contact.cpp:
	* GeoCoordinate.cpp:
	* X3DViewportNode.cpp:
	* X3DPickSensorNode.cpp:
	* X3DPickableObject.cpp:
	* DirectionalLight.cpp:
	* X3DPrototypeInstance.cpp:
	* X3DBoundedObject.cpp:
	* X3DGeometryNode.cpp:
	* NurbsTrimmedSurface.cpp:
	* NavigationInfo.cpp:
	* OrthoViewpoint.cpp:
	* IndexedFaceSet.cpp:
	* KeySensor.cpp:
	* X3DTimeDependentNode.cpp:
	* GeoTouchSensor.cpp:
	* ViewpointGroup.cpp:
	* ImageTexture3D.cpp:
	* BallJoint.cpp:
	* PixelTexture3D.cpp:
	* RigidBody.cpp:
	* IndexedQuadSet.cpp:
	* PositionChaser2D.cpp:
	* CoordinateDamper.cpp:
	* TriangleStripSet.cpp:
	* TextureTransform.cpp:
	* X3DTexture2DNode.cpp:
	* TimeTrigger.cpp:
	* TexCoordDamper2D.cpp:
	* PositionDamper2D.cpp:
	* X3DCoordinateNode.cpp:
	* TextureProperties.cpp:
	* TextureCoordinate.cpp:
	* OrientationDamper.cpp:
	* OrientationChaser.cpp:
	* ConeEmitter.cpp:
	* X3DViewpointNode.cpp:
	* PrimitivePickSensor.cpp:
	* EaseInEaseOut.cpp:
	* MotorJoint.cpp:
	* GeoElevationGrid.cpp:
	* X3DTexture3DNode.cpp:
	* BooleanToggle.cpp:
	* BooleanFilter.cpp:
	* SliderJoint.cpp:
	* StringSensor.cpp:
	* IndexedTriangleSet.cpp:
	* PointEmitter.cpp:
	* NurbsTextureCoordinate.cpp:
	* FloatVertexAttribute.cpp:
	* X3DAppearanceChildNode.cpp:
	* GeoProximitySensor.cpp:
	* LocalFog.cpp:
	* X3DTriggerNode.cpp:
	* BooleanTrigger.cpp:
	* ComposedTexture3D.cpp:
	* VolumeEmitter.cpp:
	* IntegerTrigger.cpp:
	* TextureTransform3D.cpp:
	* NurbsSurfaceInterpolator.cpp:
	* X3DVertexAttributeNode.cpp:
	* ParticleSystem.cpp:
	* X3DNurbsControlCurveNode.cpp:
	* SurfaceEmitter.cpp:
	* Matrix4VertexAttribute.cpp:
	* Matrix3VertexAttribute.cpp:
	* IntegerSequencer.cpp:
	* CollisionSpace.cpp:
	* X3DParametricGeometryNode.cpp:
	* BooleanSequencer.cpp:
	* UniversalJoint.cpp:
	* MultiTextureTransform.cpp:
	* X3DSequencerNode.cpp:
	* ColorInterpolator.cpp:
	* IndexedTriangleFanSet.cpp:
	* X3DNetworkSensorNode.cpp:
	* TextureCoordinate4D.cpp:
	* TextureCoordinate3D.cpp:
	* NurbsPositionInterpolator.cpp:
	* Background.cpp:
	* PolylineEmitter.cpp:
	* TouchSensor.cpp:
	* PlaneSensor.cpp:
	* WindPhysicsModel.cpp:
	* CollidableShape.cpp:
	* NormalInterpolator.cpp:
	* MultiTextureCoordinate.cpp:
	* CollisionSensor.cpp:
	* ExplosionEmitter.cpp:
	* ScalarInterpolator.cpp:
	* X3DComposedGeometryNode.cpp:
	* IndexedTriangleStripSet.cpp:
	* X3DFogObject.cpp:
	* X3DTextureTransformNode.cpp:
	* X3DNurbsSurfaceGeometryNode.cpp:
	* SphereSensor.cpp:
	* X3DInterpolatorNode.cpp:
	* CollidableOffset.cpp:
	* X3DTextureCoordinateNode.cpp:
	* GeoPositionInterpolator.cpp:
	* X3DGeometricPropertyNode.cpp:
	* PositionInterpolator.cpp:
	* FogCoordinate.cpp:
	* CollisionCollection.h:
	* X3DRigidJointNode.cpp:
	* NurbsOrientationInterpolator.cpp:
	* ProximitySensor.cpp:
	* BoundedPhysicsModel.cpp:
	* X3DProgrammableShaderObject.cpp:
	* TransformSensor.cpp:
	* GravityPhysicsModel.cpp:
	* CylinderSensor.cpp:
	* TextureCoordinateGenerator.cpp:
	* CollisionCollection.cpp:
	* VisibilitySensor.cpp:
	* ImageCubeMapTexture.cpp:
	* CoordinateInterpolator.cpp:
	* PositionInterpolator2D.cpp:
	* TextureTransformMatrix3D.cpp:
	* RigidBodyCollection.cpp:
	* OrientationInterpolator.cpp:
	* SingleAxisHingeJoint.cpp:
	* DoubleAxisHingeJoint.cpp:
	* X3DDragSensorNode.cpp:
	* X3DKeyDeviceSensorNode.cpp:
	* CoordinateInterpolator2D.cpp:
	* X3DBackgroundNode.cpp:
	* TextureBackground.cpp:
	* SplineScalarInterpolator.cpp:
	* X3DParticleEmitterNode.cpp:
	* X3DNBodyCollidableNode.cpp:
	* ComposedCubeMapTexture.cpp:
	* X3DTouchSensorNode.cpp:
	* X3DProductStructureChildNode.cpp:
	* SplinePositionInterpolator.cpp:
	* GeneratedCubeMapTexture.cpp:
	* SquadOrientationInterpolator.cpp:
	* SplinePositionInterpolator2D.cpp:
	* X3DEnvironmentTextureNode.cpp:
	* X3DNBodyCollisionSpaceNode.cpp:
	* X3DParticlePhysicsModelNode.cpp:
	* X3DEnvironmentalSensorNode.cpp:
	* X3DPointingDeviceSensorNode.cpp: 

2012-06-30  Holger Seelig  <holger.seelig@yahoo.de>

	* Text.cpp:
	* Sound.cpp:
	* SignalPdu.cpp:
	* FontStyle.cpp:
	* Box.cpp:
	* LOD.cpp:
	* NurbsSet.cpp:
	* Layer.cpp:
	* WorldInfo.cpp:
	* Cone.cpp:
	* Contour2D.cpp:
	* NurbsCurve.cpp:
	* Appearance.cpp:
	* Script.cpp:
	* Normal.cpp:
	* Arc2D.cpp:
	* MetadataSet.cpp:
	* GeoLOD.cpp:
	* HAnimJoint.cpp:
	* LineSet.cpp:
	* Sphere.cpp:
	* LayerSet.cpp:
	* Anchor.cpp:
	* Disk2D.cpp:
	* ShaderPart.cpp:
	* EspduTransform.cpp:
	* PointSet.cpp:
	* NurbsCurve2D.cpp:
	* LayoutLayer.cpp:
	* Cylinder.cpp:
	* Circle2D.cpp:
	* HAnimSegment.cpp:
	* StaticGroup.cpp:
	* Collision.cpp:
	* GeoOrigin.cpp:
	* Extrusion.cpp:
	* DISEntityManager.cpp:
	* HAnimHumanoid.cpp:
	* ProgramShader.cpp:
	* ArcClose2D.cpp:
	* LoadSensor.cpp:
	* HAnimDisplacer.cpp:
	* ShaderProgram.cpp:
	* X3DShaderNode.cpp:
	* Polyline2D.cpp:
	* Rectangle2D.cpp:
	* Polypoint2D.cpp:
	* CoordinateDouble.cpp:
	* GeoLocation.cpp:
	* MultiTexture.cpp:
	* ComposedShader.cpp:
	* ScreenFontStyle.cpp:
	* GeoMetadata.cpp:
	* ScalarChaser.cpp:
	* NurbsSwungSurface.cpp:
	* GeoTransform.cpp:
	* X3DUrlObject.cpp:
	* NurbsSweptSurface.cpp:
	* GeoViewpoint.cpp:
	* PositionDamper.cpp:
	* TriangleSet2D.cpp:
	* PositionChaser.cpp:
	* GeoCoordinate.cpp:
	* DISEntityTypeMapping.cpp:
	* IndexedLineSet.cpp:
	* ElevationGrid.cpp:
	* X3DGroupingNode.cpp:
	* TriangleFanSet.cpp:
	* X3DBoundedObject.cpp:
	* GeoTouchSensor.cpp:
	* NurbsTrimmedSurface.cpp:
	* IndexedFaceSet.cpp:
	* X3DPickSensorNode.cpp:
	* CoordinateDamper.cpp:
	* PositionChaser2D.cpp:
	* PositionDamper2D.cpp:
	* TexCoordDamper2D.cpp:
	* IndexedQuadSet.cpp:
	* TriangleStripSet.cpp:
	* RigidBody.cpp:
	* X3DTexture2DNode.cpp:
	* EaseInEaseOut.cpp:
	* TextureCoordinate.cpp:
	* OrientationChaser.cpp:
	* MotorJoint.cpp:
	* GeoElevationGrid.cpp:
	* OrientationDamper.cpp:
	* IndexedTriangleSet.cpp:
	* X3DTexture3DNode.cpp:
	* FloatVertexAttribute.cpp:
	* NurbsTextureCoordinate.cpp:
	* VolumeEmitter.cpp:
	* GeoProximitySensor.cpp:
	* ComposedTexture3D.cpp:
	* ParticleSystem.cpp:
	* Matrix4VertexAttribute.cpp:
	* Matrix3VertexAttribute.cpp:
	* X3DNurbsControlCurveNode.cpp:
	* X3DVertexAttributeNode.cpp:
	* NurbsSurfaceInterpolator.cpp:
	* SurfaceEmitter.cpp:
	* IntegerSequencer.cpp:
	* NurbsPositionInterpolator.cpp:
	* X3DSequencerNode.cpp:
	* IndexedTriangleFanSet.cpp:
	* TextureCoordinate4D.cpp:
	* TextureCoordinate3D.cpp:
	* PolylineEmitter.cpp:
	* ColorInterpolator.cpp:
	* NormalInterpolator.cpp:
	* CollidableShape.cpp:
	* ScalarInterpolator.cpp:
	* X3DInterpolatorNode.cpp:
	* X3DNurbsSurfaceGeometryNode.cpp:
	* IndexedTriangleStripSet.cpp:
	* CollidableOffset.cpp:
	* X3DComposedGeometryNode.cpp:
	* FogCoordinate.cpp:
	* PositionInterpolator.cpp:
	* GeoPositionInterpolator.cpp:
	* NurbsOrientationInterpolator.cpp:
	* RigidBodyCollection.cpp:
	* ImageCubeMapTexture.cpp:
	* CoordinateInterpolator.cpp:
	* PositionInterpolator2D.cpp:
	* TextureCoordinateGenerator.cpp:
	* OrientationInterpolator.cpp:
	* X3DParticleEmitterNode.cpp:
	* CoordinateInterpolator2D.cpp:
	* SplineScalarInterpolator.cpp:
	* GeneratedCubeMapTexture.cpp:
	* SplinePositionInterpolator.cpp:
	* SquadOrientationInterpolator.cpp:
	* SplinePositionInterpolator2D.cpp: 

2012-06-30  Holger Seelig  <holger.seelig@yahoo.de>

	* HAnimJoint.cpp:
	* HAnimHumanoid.cpp:
	* ViewpointGroup.cpp:
	* CollisionSpace.cpp:
	* CollisionCollection.cpp: 

2012-06-30  Holger Seelig  <holger.seelig@yahoo.de>

	* Text.cpp:
	* Sound.cpp:
	* Shape.cpp:
	* X3DNode.cpp:
	* Layout.cpp:
	* SignalPdu.cpp:
	* Material.cpp:
	* FontStyle.cpp:
	* Box.cpp:
	* WorldInfo.cpp:
	* NurbsSet.cpp:
	* Layer.cpp:
	* LOD.cpp:
	* Group.cpp:
	* Contour2D.cpp:
	* TimeSensor.cpp:
	* AudioClip.cpp:
	* Cone.cpp:
	* Switch.cpp:
	* Color.cpp:
	* ReceiverPdu.cpp:
	* X3DInfoNode.cpp:
	* Appearance.cpp:
	* Arc2D.cpp:
	* Script.cpp:
	* NurbsCurve.cpp:
	* Normal.cpp:
	* MetadataSet.cpp:
	* HAnimSite.cpp:
	* Sphere.cpp:
	* Anchor.cpp:
	* GeoLOD.cpp:
	* Inline.cpp:
	* LayerSet.cpp:
	* Viewport.cpp:
	* LineSet.cpp:
	* HAnimJoint.cpp:
	* Disk2D.cpp:
	* X3DChildNode.cpp:
	* SpotLight.cpp:
	* TransmitterPdu.cpp:
	* PointSet.cpp:
	* EspduTransform.cpp:
	* ScreenGroup.cpp:
	* MetadataFloat.cpp:
	* LayoutGroup.cpp:
	* LayoutLayer.cpp:
	* X3DSensorNode.cpp:
	* X3DSoundNode.cpp:
	* X3DShapeNode.cpp:
	* Transform.cpp:
	* ShaderPart.cpp:
	* NurbsCurve2D.cpp:
	* MetadataDouble.cpp:
	* CADPart.cpp:
	* MetadataString.cpp:
	* ColorRGBA.cpp:
	* PointLight.cpp:
	* ClipPlane.cpp:
	* Cylinder.cpp:
	* HAnimSegment.cpp:
	* CADFace.cpp:
	* QuadSet.cpp:
	* Circle2D.cpp:
	* X3DLayoutNode.cpp:
	* Extrusion.cpp:
	* Collision.cpp:
	* Billboard.cpp:
	* Viewpoint.cpp:
	* DISEntityManager.cpp:
	* StaticGroup.cpp:
	* Coordinate.cpp:
	* MetadataInteger.cpp:
	* HAnimHumanoid.cpp:
	* GeoOrigin.cpp:
	* FillProperties.cpp:
	* LineProperties.cpp:
	* CADLayer.cpp:
	* X3DBindableNode.cpp:
	* ColorDamper.cpp:
	* TriangleSet.cpp:
	* LoadSensor.cpp:
	* X3DMaterialNode.cpp:
	* ProgramShader.cpp:
	* PickableGroup.cpp:
	* X3DShaderNode.cpp:
	* ShaderProgram.cpp:
	* X3DFontStyleNode.cpp:
	* X3DLightNode.cpp:
	* HAnimDisplacer.cpp:
	* ArcClose2D.cpp:
	* Polyline2D.cpp:
	* X3DLayerNode.cpp:
	* Polypoint2D.cpp:
	* TwoSidedMaterial.cpp:
	* LinePickSensor.cpp:
	* Rectangle2D.cpp:
	* X3DColorNode.cpp:
	* CoordinateDouble.cpp:
	* ComposedShader.cpp:
	* PackagedShader.cpp:
	* ScalarChaser.cpp:
	* MultiTexture.cpp:
	* ScreenFontStyle.cpp:
	* GeoMetadata.cpp:
	* GeoLocation.cpp:
	* PixelTexture.cpp:
	* MovieTexture.cpp:
	* ImageTexture.cpp:
	* X3DMetadataObject.cpp:
	* ContourPolyline2D.cpp:
	* X3DAppearanceNode.cpp:
	* GeoTransform.cpp:
	* NurbsSwungSurface.cpp:
	* X3DNormalNode.cpp:
	* X3DScriptNode.cpp:
	* NurbsSweptSurface.cpp:
	* NurbsPatchSurface.cpp:
	* GeoViewpoint.cpp:
	* PointPickSensor.cpp:
	* X3DUrlObject.cpp:
	* CADAssembly.cpp:
	* X3DSoundSourceNode.cpp:
	* IndexedLineSet.cpp:
	* Contact.cpp:
	* VolumePickSensor.cpp:
	* X3DViewportNode.cpp:
	* PositionChaser.cpp:
	* PositionDamper.cpp:
	* GeoCoordinate.cpp:
	* DISEntityTypeMapping.cpp:
	* ElevationGrid.cpp:
	* TriangleFanSet.cpp:
	* TriangleSet2D.cpp:
	* X3DTextureNode.cpp:
	* X3DGroupingNode.cpp:
	* Fog.cpp:
	* NavigationInfo.cpp:
	* X3DBoundedObject.cpp:
	* X3DPickSensorNode.cpp:
	* X3DPrototypeInstance.cpp:
	* X3DPickableObject.cpp:
	* NurbsTrimmedSurface.cpp:
	* DirectionalLight.cpp:
	* ViewpointGroup.cpp:
	* X3DTimeDependentNode.cpp:
	* X3DGeometryNode.cpp:
	* GeoTouchSensor.cpp:
	* KeySensor.cpp:
	* OrthoViewpoint.cpp:
	* IndexedFaceSet.cpp:
	* PositionDamper2D.cpp:
	* CoordinateDamper.cpp:
	* TimeTrigger.cpp:
	* X3DTexture2DNode.cpp:
	* TextureTransform.cpp:
	* PositionChaser2D.cpp:
	* TriangleStripSet.cpp:
	* RigidBody.cpp:
	* IndexedQuadSet.cpp:
	* ImageTexture3D.cpp:
	* PixelTexture3D.cpp:
	* BallJoint.cpp:
	* TexCoordDamper2D.cpp:
	* MotorJoint.cpp:
	* EaseInEaseOut.cpp:
	* OrientationChaser.cpp:
	* GeoElevationGrid.cpp:
	* TextureCoordinate.cpp:
	* PrimitivePickSensor.cpp:
	* X3DViewpointNode.cpp:
	* OrientationDamper.cpp:
	* X3DCoordinateNode.cpp:
	* ConeEmitter.cpp:
	* NurbsTextureCoordinate.cpp:
	* FloatVertexAttribute.cpp:
	* BooleanFilter.cpp:
	* IndexedTriangleSet.cpp:
	* X3DAppearanceChildNode.cpp:
	* PointEmitter.cpp:
	* SliderJoint.cpp:
	* BooleanToggle.cpp:
	* X3DTexture3DNode.cpp:
	* StringSensor.cpp:
	* GeoProximitySensor.cpp:
	* LocalFog.cpp:
	* IntegerTrigger.cpp:
	* X3DTriggerNode.cpp:
	* VolumeEmitter.cpp:
	* BooleanTrigger.cpp:
	* CollisionSpace.h:
	* ComposedTexture3D.cpp:
	* TextureTransform3D.cpp:
	* NurbsSurfaceInterpolator.cpp:
	* X3DNurbsControlCurveNode.cpp:
	* SurfaceEmitter.cpp:
	* Matrix4VertexAttribute.cpp:
	* Matrix3VertexAttribute.cpp:
	* X3DVertexAttributeNode.cpp:
	* ParticleSystem.cpp:
	* X3DParametricGeometryNode.cpp:
	* NurbsPositionInterpolator.cpp:
	* TextureCoordinate4D.cpp:
	* CollisionSpace.cpp:
	* IndexedTriangleFanSet.cpp:
	* X3DNetworkSensorNode.cpp:
	* PolylineEmitter.cpp:
	* TextureCoordinate3D.cpp:
	* Background.cpp:
	* MultiTextureTransform.cpp:
	* UniversalJoint.cpp:
	* IntegerSequencer.cpp:
	* X3DSequencerNode.cpp:
	* BooleanSequencer.cpp:
	* ColorInterpolator.cpp:
	* ScalarInterpolator.cpp:
	* ExplosionEmitter.cpp:
	* CollisionSensor.cpp:
	* MultiTextureCoordinate.cpp:
	* NormalInterpolator.cpp:
	* TouchSensor.cpp:
	* PlaneSensor.cpp:
	* WindPhysicsModel.cpp:
	* CollidableShape.cpp:
	* SphereSensor.cpp:
	* X3DInterpolatorNode.cpp:
	* X3DFogObject.cpp:
	* CollidableOffset.cpp:
	* X3DComposedGeometryNode.cpp:
	* X3DNurbsSurfaceGeometryNode.cpp:
	* IndexedTriangleStripSet.cpp:
	* X3DTextureTransformNode.cpp:
	* X3DTextureCoordinateNode.cpp:
	* X3DGeometricPropertyNode.cpp:
	* FogCoordinate.cpp:
	* NurbsOrientationInterpolator.cpp:
	* X3DRigidJointNode.cpp:
	* GeoPositionInterpolator.cpp:
	* PositionInterpolator.cpp:
	* ProximitySensor.cpp:
	* TransformSensor.cpp:
	* CylinderSensor.cpp:
	* X3DProgrammableShaderObject.cpp:
	* BoundedPhysicsModel.cpp:
	* GravityPhysicsModel.cpp:
	* TextureCoordinateGenerator.cpp:
	* TextureTransformMatrix3D.cpp:
	* PositionInterpolator2D.cpp:
	* RigidBodyCollection.cpp:
	* CollisionCollection.cpp:
	* ImageCubeMapTexture.cpp:
	* CoordinateInterpolator.cpp:
	* VisibilitySensor.cpp:
	* DoubleAxisHingeJoint.cpp:
	* SingleAxisHingeJoint.cpp:
	* OrientationInterpolator.cpp:
	* CoordinateInterpolator2D.cpp:
	* X3DKeyDeviceSensorNode.cpp:
	* TextureBackground.cpp:
	* X3DBackgroundNode.cpp:
	* X3DDragSensorNode.cpp:
	* X3DParticleEmitterNode.cpp:
	* SplineScalarInterpolator.cpp:
	* X3DNBodyCollidableNode.cpp:
	* X3DTouchSensorNode.cpp:
	* ComposedCubeMapTexture.cpp:
	* X3DProductStructureChildNode.cpp:
	* GeneratedCubeMapTexture.cpp:
	* SplinePositionInterpolator.cpp:
	* SquadOrientationInterpolator.cpp:
	* X3DEnvironmentTextureNode.cpp:
	* SplinePositionInterpolator2D.cpp:
	* X3DNBodyCollisionSpaceNode.cpp:
	* X3DParticlePhysicsModelNode.cpp:
	* X3DEnvironmentalSensorNode.cpp:
	* X3DPointingDeviceSensorNode.cpp: 

2012-06-30  Holger Seelig  <holger.seelig@yahoo.de>

	* SignalPdu.h:
	* Layout.h:
	* ReceiverPdu.h:
	* SignalPdu.cpp:
	* Layout.cpp:
	* ReceiverPdu.cpp:
	* TransmitterPdu.h:
	* EspduTransform.h:
	* TransmitterPdu.cpp:
	* EspduTransform.cpp:
	* CollisionSpace.h:
	* CollisionSpace.cpp:
	* CollisionSensor.cpp:
	* CollisionCollection.h:
	* CollisionCollection.cpp: 

2012-06-27  Holger Seelig  <holger.seelig@yahoo.de>

	* Route.cpp:
	* Text.cpp:
	* ExecutionContext.cpp:
	* Shape.cpp:
	* Sound.cpp:
	* SignalPdu.cpp:
	* Layout.cpp:
	* FontStyle.cpp:
	* NurbsSet.cpp:
	* Material.cpp:
	* WorldInfo.cpp:
	* Layer.cpp:
	* Group.cpp:
	* Box.cpp:
	* LOD.cpp:
	* TimeSensor.cpp:
	* ReceiverPdu.cpp:
	* AudioClip.cpp:
	* Contour2D.cpp:
	* Switch.cpp:
	* Color.cpp:
	* Cone.cpp:
	* Arc2D.cpp:
	* Script.cpp:
	* MetadataSet.cpp:
	* Normal.cpp:
	* HAnimSite.cpp:
	* NurbsCurve.cpp:
	* Appearance.cpp:
	* Sphere.cpp:
	* Anchor.cpp:
	* Inline.cpp:
	* LineSet.cpp:
	* Viewport.cpp:
	* HAnimJoint.cpp:
	* MetadataBool.cpp:
	* Disk2D.cpp:
	* LayerSet.cpp:
	* GeoLOD.cpp:
	* ScreenGroup.cpp:
	* EspduTransform.cpp:
	* TransmitterPdu.cpp:
	* SpotLight.cpp:
	* NurbsCurve2D.cpp:
	* PointSet.cpp:
	* ShaderPart.cpp:
	* Transform.cpp:
	* MetadataFloat.cpp:
	* LayoutGroup.cpp:
	* LayoutLayer.cpp:
	* CADPart.cpp:
	* PointLight.cpp:
	* MetadataString.cpp:
	* ColorRGBA.cpp:
	* HAnimSegment.cpp:
	* Circle2D.cpp:
	* ClipPlane.cpp:
	* CADFace.cpp:
	* Cylinder.cpp:
	* QuadSet.cpp:
	* MetadataDouble.cpp:
	* DISEntityManager.cpp:
	* StaticGroup.cpp:
	* Viewpoint.cpp:
	* Extrusion.cpp:
	* HAnimHumanoid.cpp:
	* CADLayer.cpp:
	* LineProperties.cpp:
	* FillProperties.cpp:
	* Coordinate.cpp:
	* Billboard.cpp:
	* GeoOrigin.cpp:
	* Collision.cpp:
	* MetadataInteger.cpp:
	* ShaderProgram.cpp:
	* ProgramShader.cpp:
	* TriangleSet.cpp:
	* PickableGroup.cpp:
	* Polyline2D.cpp:
	* ColorDamper.cpp:
	* ArcClose2D.cpp:
	* LoadSensor.cpp:
	* HAnimDisplacer.cpp:
	* CoordinateDouble.cpp:
	* MovieTexture.cpp:
	* GeoLocation.cpp:
	* TwoSidedMaterial.cpp:
	* ScreenFontStyle.cpp:
	* LinePickSensor.cpp:
	* Rectangle2D.cpp:
	* GeoMetadata.cpp:
	* Polypoint2D.cpp:
	* ImageTexture.cpp:
	* ComposedShader.cpp:
	* PackagedShader.cpp:
	* MultiTexture.cpp:
	* ScalarChaser.cpp:
	* PixelTexture.cpp:
	* GeoTransform.cpp:
	* CADAssembly.cpp:
	* NurbsSweptSurface.cpp:
	* NurbsPatchSurface.cpp:
	* NurbsSwungSurface.cpp:
	* ContourPolyline2D.cpp:
	* GeoViewpoint.cpp:
	* PointPickSensor.cpp:
	* Fog.cpp:
	* VolumePickSensor.cpp:
	* PositionDamper.cpp:
	* Contact.cpp:
	* ElevationGrid.cpp:
	* GeoCoordinate.cpp:
	* TriangleSet2D.cpp:
	* TriangleFanSet.cpp:
	* DISEntityTypeMapping.cpp:
	* PositionChaser.cpp:
	* IndexedLineSet.cpp:
	* NavigationInfo.cpp:
	* NurbsTrimmedSurface.cpp:
	* ViewpointGroup.cpp:
	* IndexedFaceSet.cpp:
	* OrthoViewpoint.cpp:
	* KeySensor.cpp:
	* GeoTouchSensor.cpp:
	* DirectionalLight.cpp:
	* TextureTransform.cpp:
	* TriangleStripSet.cpp:
	* IndexedQuadSet.cpp:
	* PixelTexture3D.cpp:
	* TexCoordDamper2D.cpp:
	* PositionDamper2D.cpp:
	* ImageTexture3D.cpp:
	* CoordinateDamper.cpp:
	* RigidBody.cpp:
	* PositionChaser2D.cpp:
	* TimeTrigger.cpp:
	* BallJoint.cpp:
	* ConeEmitter.cpp:
	* MotorJoint.cpp:
	* GeoElevationGrid.cpp:
	* PrimitivePickSensor.cpp:
	* TextureProperties.cpp:
	* OrientationDamper.cpp:
	* OrientationChaser.cpp:
	* EaseInEaseOut.cpp:
	* TextureCoordinate.cpp:
	* FloatVertexAttribute.cpp:
	* IndexedTriangleSet.cpp:
	* StringSensor.cpp:
	* BooleanFilter.cpp:
	* SliderJoint.cpp:
	* BooleanToggle.cpp:
	* PointEmitter.cpp:
	* NurbsTextureCoordinate.cpp:
	* GeoProximitySensor.cpp:
	* IntegerTrigger.cpp:
	* BooleanTrigger.cpp:
	* ComposedTexture3D.cpp:
	* VolumeEmitter.cpp:
	* LocalFog.cpp:
	* TextureTransform3D.cpp:
	* SurfaceEmitter.cpp:
	* NurbsSurfaceInterpolator.cpp:
	* ParticleSystem.cpp:
	* Matrix3VertexAttribute.cpp:
	* Matrix4VertexAttribute.cpp:
	* IndexedTriangleFanSet.cpp:
	* TextureCoordinate4D.cpp:
	* Background.cpp:
	* TextureCoordinate3D.cpp:
	* BooleanSequencer.cpp:
	* MultiTextureTransform.cpp:
	* ColorInterpolator.cpp:
	* IntegerSequencer.cpp:
	* CollisionSpace.cpp:
	* PolylineEmitter.cpp:
	* UniversalJoint.cpp:
	* NurbsPositionInterpolator.cpp:
	* MultiTextureCoordinate.cpp:
	* CollidableShape.cpp:
	* PlaneSensor.cpp:
	* ExplosionEmitter.cpp:
	* WindPhysicsModel.cpp:
	* CollisionSensor.cpp:
	* ScalarInterpolator.cpp:
	* NormalInterpolator.cpp:
	* TouchSensor.cpp:
	* SphereSensor.cpp:
	* CollidableOffset.cpp:
	* IndexedTriangleStripSet.cpp:
	* NurbsOrientationInterpolator.cpp:
	* GeoPositionInterpolator.cpp:
	* PositionInterpolator.cpp:
	* FogCoordinate.cpp:
	* CylinderSensor.cpp:
	* BoundedPhysicsModel.cpp:
	* ProximitySensor.cpp:
	* TransformSensor.cpp:
	* GravityPhysicsModel.cpp:
	* TextureTransformMatrix3D.cpp:
	* CoordinateInterpolator.cpp:
	* TextureCoordinateGenerator.cpp:
	* PositionInterpolator2D.cpp:
	* RigidBodyCollection.cpp:
	* ImageCubeMapTexture.cpp:
	* CollisionCollection.cpp:
	* VisibilitySensor.cpp:
	* OrientationInterpolator.cpp:
	* DoubleAxisHingeJoint.cpp:
	* SingleAxisHingeJoint.cpp:
	* SplineScalarInterpolator.cpp:
	* CoordinateInterpolator2D.cpp:
	* TextureBackground.cpp:
	* ComposedCubeMapTexture.cpp:
	* GeneratedCubeMapTexture.cpp:
	* SplinePositionInterpolator.cpp:
	* SquadOrientationInterpolator.cpp:
	* SplinePositionInterpolator2D.cpp: 

2012-06-27  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DBackgroundNode.cpp: 

2012-06-27  Holger Seelig  <holger.seelig@yahoo.de>

	* X3D.h:
	* Cast.h:
	* Route.h:
	* Proto.h:
	* RegEx.h:
	* Hit.h:
	* Errors.h:
	* RefPtr.h:
	* World.h:
	* Mouse.h:
	* X3DField.h:
	* Scene.h:
	* X3DProto.h:
	* Parser.h:
	* SFVec2d.h:
	* SFVec3d.h:
	* SFVec4f.h:
	* SFColor.h:
	* SFVec3f.h:
	* SFVec2f.h:
	* SFVec4d.h:
	* Router.h:
	* NodeIndex.h:
	* Viewer.h:
	* geturl.h:
	* RouteArray.h:
	* Mouse.cpp:
	* Scene.cpp:
	* ProtoArray.h:
	* ExternProto.h:
	* X3DBaseNode.h:
	* ProfileInfo.h:
	* Array.h:
	* Parser.cpp:
	* HitArray.h:
	* Router.cpp:
	* strfsize.h:
	* SbVec3.h:
	* SbVec2.h:
	* SbLine.h:
	* SbVec4.h:
	* SFMatrix3f.h:
	* SFMatrix4d.h:
	* SFMatrix3d.h:
	* SFMatrix4f.h:
	* X3DConstants.h:
	* ImportedNode.h:
	* SFRotation.h:
	* SbBox3f.h:
	* FieldCallback.h:
	* Statistics.h:
	* uncompress.h:
	* MotionBlur.h:
	* X3DBrowser.h:
	* Renderer.h:
	* SbColor.h:
	* SFColorRGBA.h:
	* SbVec3d.h:
	* SbVec3f.h:
	* SbVec2f.h:
	* SbVec4d.h:
	* SbVec2d.h:
	* X3DArrayField.h:
	* SbVec4f.h:
	* NodeTypeArray.h:
	* ComponentInfo.h:
	* SbPlane.h:
	* SbMatrix3.h:
	* Renderer.cpp:
	* ExportedNode.h:
	* SbMatrix4.h:
	* SbRotation.h:
	* SbMatrix4f.h:
	* SbMatrix4d.h:
	* ExternProtoArray.h:
	* ProfileInfoArray.h:
	* SbMatrix3f.h:
	* SbMatrix3d.h:
	* ExecutionContext.h:
	* Generator.h:
	* SbRotationd.h:
	* SbRotationf.h:
	* SbColorRGBA.h:
	* SbViewVolume.h:
	* FieldCallbackArray.h:
	* FieldDefinitionSet.h:
	* X3DNode.h:
	* ComponentInfoArray.h:
	* SbQuaternion.h:
	* X3DFieldDefinition.h:
	* ImportedNodesArray.h:
	* Sound.cpp:
	* ShapeContainer.h:
	* LightContainer.h:
	* GarbageCollector.h:
	* FieldDefinitionArray.h:
	* SupportedProfiles.h:
	* ExportedNodesArray.h:
	* HAnimSite.h:
	* Box.cpp:
	* Material.cpp:
	* SupportedComponents.h:
	* LOD.cpp:
	* FontStyle.cpp:
	* Cone.cpp:
	* HAnimJoint.h:
	* Script.cpp:
	* HAnimSite.cpp:
	* LightContainerArray.h:
	* Inline.cpp:
	* GeoLOD.cpp:
	* HAnimSegment.h:
	* Anchor.cpp:
	* LayerSet.cpp:
	* Sphere.cpp:
	* HAnimJoint.cpp:
	* X3DShapeNode.cpp:
	* Transform.cpp:
	* SpotLight.cpp:
	* HAnimHumanoid.h:
	* TransmitterPdu.cpp:
	* EspduTransform.cpp:
	* HAnimSegment.cpp:
	* CADPart.cpp:
	* PointLight.cpp:
	* ClipPlane.cpp:
	* X3DLayerNode.h:
	* HAnimDisplacer.h:
	* Cylinder.cpp:
	* HAnimHumanoid.cpp:
	* Extrusion.cpp:
	* GeoOrigin.cpp:
	* X3DMetadataObject.h:
	* FillProperties.cpp:
	* LineProperties.cpp:
	* X3DLightNode.cpp:
	* X3DLayerNode.cpp:
	* X3DUrlObject.h:
	* GeoLocation.cpp:
	* MultiTexture.cpp:
	* TwoSidedMaterial.cpp:
	* ScreenFontStyle.cpp:
	* NurbsSweptSurface.cpp:
	* GeoViewpoint.cpp:
	* GeoTransform.cpp:
	* X3DBoundedObject.h:
	* X3DPickableObject.h:
	* NurbsSwungSurface.cpp:
	* PositionChaser.cpp:
	* PositionDamper.cpp:
	* X3DGroupingNode.cpp:
	* Contact.cpp:
	* IndexedLineSet.cpp:
	* ElevationGrid.cpp:
	* IndexedFaceSet.cpp:
	* NavigationInfo.cpp:
	* X3DBoundedObject.cpp:
	* ViewpointGroup.cpp:
	* X3DPickableObject.cpp:
	* X3DPrototypeInstance.cpp:
	* PositionDamper2D.cpp:
	* X3DTexture2DNode.cpp:
	* TextureTransform.cpp:
	* PositionChaser2D.cpp:
	* CoordinateDamper.cpp:
	* PixelTexture3D.cpp:
	* BallJoint.cpp:
	* RigidBody.cpp:
	* ConeEmitter.cpp:
	* OrientationDamper.cpp:
	* OrientationChaser.cpp:
	* MotorJoint.cpp:
	* GeoElevationGrid.cpp:
	* TextureProperties.cpp:
	* X3DViewpointNode.cpp:
	* PointEmitter.cpp:
	* StringSensor.cpp:
	* LocalFog.cpp:
	* GeoProximitySensor.cpp:
	* VolumeEmitter.cpp:
	* TextureTransform3D.cpp:
	* ParticleSystem.cpp:
	* X3DFogObject.h:
	* UniversalJoint.cpp:
	* PlaneSensor.cpp:
	* WindPhysicsModel.cpp:
	* ExplosionEmitter.cpp:
	* SphereSensor.cpp:
	* X3DNurbsSurfaceGeometryNode.cpp:
	* X3DProgrammableShaderObject.h:
	* X3DFogObject.cpp:
	* X3DComposedGeometryNode.cpp:
	* CylinderSensor.cpp:
	* RigidBodyCollection.cpp:
	* TextureTransformMatrix3D.cpp:
	* DoubleAxisHingeJoint.cpp:
	* SingleAxisHingeJoint.cpp:
	* X3DDragSensorNode.cpp:
	* X3DBackgroundNode.cpp:
	* X3DNBodyCollidableNode.cpp:
	* X3DNBodyCollisionSpaceNode.cpp:
	* X3DParticlePhysicsModelNode.cpp:
	* X3DEnvironmentalSensorNode.cpp: 

2012-06-27  Holger Seelig  <holger.seelig@yahoo.de>

	* Sound.cpp:
	* LOD.cpp:
	* Material.cpp:
	* HAnimSite.cpp:
	* HAnimJoint.cpp:
	* GeoLOD.cpp:
	* SpotLight.cpp:
	* Transform.cpp:
	* TransmitterPdu.cpp:
	* EspduTransform.cpp:
	* HAnimSegment.cpp:
	* CADPart.cpp:
	* PointLight.cpp:
	* Cylinder.cpp:
	* GeoOrigin.cpp:
	* HAnimHumanoid.cpp:
	* Extrusion.cpp:
	* GeoLocation.cpp:
	* TwoSidedMaterial.cpp:
	* GeoTransform.cpp:
	* PositionDamper.cpp:
	* Contact.cpp:
	* PositionChaser.cpp:
	* ViewpointGroup.cpp:
	* X3DBoundedObject.cpp:
	* RigidBody.cpp:
	* BallJoint.cpp:
	* PositionChaser2D.cpp:
	* PositionDamper2D.cpp:
	* CoordinateDamper.cpp:
	* TextureTransform.cpp:
	* MotorJoint.cpp:
	* GeoElevationGrid.cpp:
	* ConeEmitter.cpp:
	* PointEmitter.cpp:
	* GeoProximitySensor.cpp:
	* TextureTransform3D.cpp:
	* UniversalJoint.cpp:
	* WindPhysicsModel.cpp:
	* ExplosionEmitter.cpp:
	* PlaneSensor.cpp:
	* DoubleAxisHingeJoint.cpp:
	* SingleAxisHingeJoint.cpp:
	* X3DNBodyCollidableNode.cpp:
	* X3DEnvironmentalSensorNode.cpp: 

2012-06-27  Holger Seelig  <holger.seelig@yahoo.de>

moved all files fom X3D/ into separate directories

	* BrowserApplication.cpp: 

2012-06-27  Holger Seelig  <holger.seelig@yahoo.de>

	* X3D.h:
	* Base:
	* Hit.h:
	* Name.h:
	* Cast.h:
	* Scene.h:
	* Proto.h:
	* Mouse.h:
	* RegEx.h:
	* World.h:
	* Route.h:
	* Browser:
	* Parser.h:
	* RefPtr.h:
	* geturl.h:
	* Viewer.h:
	* libtitania-x3d.md.pc:
	* Router.h:
	* Errors.h:
	* libtitania-x3d.cproj:
	* Mouse.cpp:
	* Route.cpp:
	* Browser.h:
	* Scene.cpp:
	* Proto.cpp:
	* RegEx.cpp:
	* Parser.cpp:
	* geturl.cpp:
	* Router.cpp:
	* X3DField.h:
	* Viewer.cpp:
	* HitArray.h:
	* Renderer.h:
	* X3DProto.h:
	* strfsize.h:
	* Errors.cpp:
	* Browser.cpp:
	* X3DObject.h:
	* Name.h:
	* NodeIndex.h:
	* Application:
	* Cast.h:
	* Generator.h:
	* Route.h:
	* Statistics.h:
	* MotionBlur.h:
	* Proto.h:
	* ProtoArray.h:
	* Renderer.cpp:
	* X3DBrowser.h:
	* strfsize.cpp:
	* RouteArray.h:
	* X3DProto.cpp:
	* RegEx.h:
	* uncompress.h:
	* X3DBaseNode.h:
	* Hit.h:
	* NodeIndex.cpp:
	* Errors.h:
	* RefPtr.h:
	* X3DObject.cpp:
	* Generator.cpp:
	* ExternProto.h:
	* ProfileInfo.h:
	* Route.cpp:
	* RegEx.cpp:
	* ImportedNode.h:
	* Statistics.cpp:
	* uncompress.cpp:
	* ExportedNode.h:
	* X3DConstants.h:
	* X3DBrowser.cpp:
	* Proto.cpp:
	* Scene.h:
	* World.h:
	* MFNode.h:
	* Mouse.h:
	* X3DField.h:
	* ProfileInfo.cpp:
	* SFNode.h:
	* ComponentInfo.h:
	* SFBool.h:
	* SFTime.h:
	* X3DProto.h:
	* X3DArrayField.h:
	* NodeTypeArray.h:
	* ExternProto.cpp:
	* FieldCallback.h:
	* X3DBaseNode.cpp:
	* Errors.cpp:
	* Viewer.h:
	* ShapeContainer.h:
	* NodeIndex.h:
	* SFVec3f.h:
	* SFColor.h:
	* Parser.h:
	* LightContainer.h:
	* Router.h:
	* SFVec4f.h:
	* geturl.h:
	* SFVec2d.h:
	* SFVec3d.h:
	* SFFloat.h:
	* X3DObject.h:
	* SFInt32.h:
	* SFImage.h:
	* SFVec2f.h:
	* SFVec4d.h:
	* MFInt32.h:
	* SFString.h:
	* SFNode.cpp:
	* SFDouble.h:
	* Scene.cpp:
	* Mouse.cpp:
	* ProtoArray.h:
	* RouteArray.h:
	* Browser.h:
	* ComponentInfo.cpp:
	* X3DProto.cpp:
	* geturl.cpp:
	* Viewer.cpp:
	* ShapeContainer.cpp:
	* ExternProto.h:
	* X3DObject.cpp:
	* NodeIndex.cpp:
	* X3DBaseNode.h:
	* ExternProtoArray.h:
	* GarbageCollector.h:
	* ProfileInfo.h:
	* ProfileInfoArray.h:
	* strfsize.h:
	* Array.h:
	* Parser.cpp:
	* ExecutionContext.h:
	* Router.cpp:
	* HitArray.h:
	* SFRotation.h:
	* SFMatrix4f.h:
	* ImportedNode.h:
	* Browser.cpp:
	* SupportedProfiles.h:
	* SFMatrix3f.h:
	* X3DConstants.h:
	* SFMatrix3d.h:
	* SFMatrix4d.h:
	* X3DArrayField.h:
	* Renderer.h:
	* FieldCallbackArray.h:
	* uncompress.h:
	* ExportedNodesArray.h:
	* GarbageCollector.cpp:
	* ProfileInfo.cpp:
	* ComponentInfo.h:
	* NodeTypeArray.h:
	* ExternProto.cpp:
	* SFColorRGBA.h:
	* ArrayFields.h:
	* ExecutionContext.cpp:
	* FieldCallback.h:
	* MotionBlur.h:
	* ComponentInfoArray.h:
	* ImportedNodesArray.h:
	* X3DFieldDefinition.h:
	* strfsize.cpp:
	* BrowserApplication.h:
	* FieldDefinitionSet.h:
	* X3DBrowser.h:
	* Statistics.h:
	* X3DBaseNode.cpp:
	* SupportedProfiles.cpp:
	* LightContainerArray.h:
	* SupportedComponents.h:
	* X3DExecutionContext.h:
	* BrowserApplication.cpp:
	* X3DFieldDefinition.cpp:
	* Statistics.cpp:
	* ExportedNode.h:
	* X3DBrowser.cpp:
	* uncompress.cpp:
	* ComponentInfo.cpp:
	* FieldDefinitionArray.h:
	* Renderer.cpp:
	* Generator.h:
	* ExecutionContext.h:
	* SupportedComponents.cpp:
	* ProfileInfoArray.h:
	* ExternProtoArray.h:
	* X3DExecutionContext.cpp:
	* X3DFieldDefinition.h:
	* ComponentInfoArray.h:
	* X3DNode.h:
	* ImportedNodesArray.h:
	* FieldCallbackArray.h:
	* FieldDefinitionSet.h:
	* Image.h:
	* ExecutionContext.cpp:
	* Generator.cpp:
	* Array.h:
	* LightContainer.h:
	* GarbageCollector.h:
	* X3DExecutionContext.h:
	* ShapeContainer.h:
	* X3DFieldDefinition.cpp:
	* SupportedProfiles.h:
	* FieldDefinitionArray.h:
	* ExportedNodesArray.h:
	* X3DExecutionContext.cpp:
	* BrowserApplication.h:
	* GarbageCollector.cpp:
	* ShapeContainer.cpp:
	* Material.cpp:
	* Layer.cpp:
	* SupportedComponents.h:
	* SupportedProfiles.cpp:
	* TimeSensor.cpp:
	* BrowserApplication.cpp:
	* ArrayTypes.h:
	* Inline.h:
	* Viewport.h:
	* Appearance.cpp:
	* LightContainerArray.h:
	* Script.cpp:
	* SupportedComponents.cpp:
	* Inline.cpp:
	* Anchor.cpp:
	* LayerSet.cpp:
	* Viewport.cpp:
	* SpotLight.cpp:
	* X3DShapeNode.cpp:
	* PointSet.cpp:
	* Transform.cpp:
	* PointLight.cpp:
	* X3DLayerNode.h:
	* X3DMetadataObject.h:
	* X3DBindableNode.cpp:
	* Viewpoint.cpp:
	* X3DUrlObject.h:
	* X3DLightNode.cpp:
	* X3DLayerNode.cpp:
	* ImageTexture.cpp:
	* X3DPickableObject.h:
	* X3DGeometryNode.h:
	* X3DBoundedObject.h:
	* X3DPrototypeInstance.h:
	* X3DUrlObject.cpp:
	* ElevationGrid.cpp:
	* Fog.cpp:
	* X3DGroupingNode.cpp:
	* IndexedLineSet.cpp:
	* X3DPrototypeInstance.cpp:
	* IndexedFaceSet.cpp:
	* NavigationInfo.cpp:
	* DirectionalLight.cpp:
	* X3DTexture2DNode.cpp:
	* X3DViewpointNode.cpp:
	* LocalFog.cpp:
	* Background.h:
	* Background.cpp:
	* X3DFogObject.h:
	* X3DProgrammableShaderObject.h:
	* ProximitySensor.cpp:
	* VisibilitySensor.cpp:
	* X3DBackgroundNode.cpp:
	* X3DPointingDeviceSensorNode.h:
	* X3DPointingDeviceSensorNode.cpp: 

2012-06-27  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.md.pc:
	* libtitania-x3d.cproj:
	* Renderer.h:
	* Browser.cpp:
	* Statistics.h:
	* Renderer.cpp:
	* Statistics.cpp:
	* GLConfigUtil.cpp: 

2012-06-26  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* Mouse.cpp:
	* Browser.cpp:
	* DrawingArea.h:
	* DrawingArea.cpp:
	* X3DBaseNode.cpp:
	* FieldCallback.h:
	* BrowserApplication.h:
	* BrowserApplication.cpp:
	* X3DFieldDefinition.cpp:
	* TimeSensor.h:
	* TimeSensor.cpp: 

2012-06-26  Holger Seelig  <holger.seelig@yahoo.de>

	* info.h:
	* config.h:
	* libtitania-x3d.cproj: 

2012-06-25  Holger Seelig  <holger.seelig@yahoo.de>

	* IO:
	* libtitania-x3d.cproj:
	* InputOutput: 

2012-06-24  Holger Seelig  <holger.seelig@yahoo.de>

	* Statistics.cpp: 

2012-06-23  Holger Seelig  <holger.seelig@yahoo.de>

	* FPS.h:
	* Scene.h:
	* FPS.cpp:
	* libtitania-x3d.cproj:
	* Mouse.cpp:
	* Scene.cpp:
	* Viewer.cpp:
	* Statistics.h:
	* Statistics.cpp:
	* BrowserApplication.h:
	* BrowserApplication.cpp: 

2012-06-23  Holger Seelig  <holger.seelig@yahoo.de>

	* FPS.h:
	* FPS.cpp:
	* Route.h:
	* Parser.h:
	* Errors.h:
	* Proto.cpp:
	* Scene.cpp:
	* Mouse.cpp:
	* Route.cpp:
	* X3DField.h:
	* Parser.cpp:
	* Viewer.cpp:
	* Errors.cpp:
	* Browser.cpp:
	* Generator.h:
	* X3DProto.cpp:
	* Renderer.cpp:
	* X3DObject.cpp:
	* ExternProto.h:
	* X3DBrowser.cpp:
	* JavaScript.cpp:
	* ExternProto.cpp:
	* X3DArrayField.h:
	* DrawingArea.cpp:
	* SFTime.h:
	* SFBool.h:
	* SFNode.h:
	* ProfileInfo.cpp:
	* X3DBaseNode.cpp:
	* SFVec4d.h:
	* SFFloat.h:
	* SFVec2f.h:
	* SFVec2d.h:
	* SFVec3d.h:
	* SFColor.h:
	* SFVec4f.h:
	* SFVec3f.h:
	* ComponentInfo.cpp:
	* SFDouble.h:
	* ShapeContainer.cpp:
	* SFMatrix4d.h:
	* SFMatrix3d.h:
	* SbVec2.h:
	* SFRotation.h:
	* SbVec3.h:
	* SbVec4.h:
	* SFMatrix3f.h:
	* SFMatrix4f.h:
	* ExecutionContext.cpp:
	* GarbageCollector.cpp:
	* SFColorRGBA.h:
	* X3DFieldDefinition.h:
	* ComponentInfoArray.h:
	* SbLine.cpp:
	* X3DExecutionContext.h:
	* Text.h:
	* BrowserApplication.cpp:
	* X3DFieldDefinition.cpp:
	* SbMatrix4.h:
	* SbMatrix3.h:
	* SbPlane.cpp:
	* SbBox3f.cpp:
	* SbColor.cpp:
	* X3DExecutionContext.cpp:
	* SbRotation.h:
	* jsX3DField.h:
	* Text.cpp:
	* Sound.h:
	* Array.h:
	* jsX3DField.cpp:
	* SbQuaternion.h:
	* SbColorRGBA.cpp:
	* Shape.cpp:
	* Sound.cpp:
	* SignalPdu.h:
	* Box.h:
	* FontStyle.h:
	* X3DNode.cpp:
	* LOD.h:
	* Image.cpp:
	* NurbsSet.h:
	* TimeSensor.h:
	* SignalPdu.cpp:
	* Layout.cpp:
	* Cone.h:
	* ReceiverPdu.h:
	* NurbsCurve.h:
	* NurbsSet.cpp:
	* FontStyle.cpp:
	* Material.cpp:
	* Layer.cpp:
	* Script.h:
	* LOD.cpp:
	* HAnimSite.h:
	* Group.cpp:
	* WorldInfo.cpp:
	* Sphere.h:
	* LayerSet.h:
	* Disk2D.h:
	* LineSet.h:
	* Color.cpp:
	* AudioClip.cpp:
	* HAnimJoint.h:
	* Switch.cpp:
	* ReceiverPdu.cpp:
	* Contour2D.cpp:
	* GeoLOD.h:
	* Transform.h:
	* Normal.cpp:
	* Appearance.cpp:
	* TransmitterPdu.h:
	* NurbsCurve2D.h:
	* HAnimSite.cpp:
	* MetadataSet.cpp:
	* X3DInfoNode.cpp:
	* EspduTransform.h:
	* NurbsCurve.cpp:
	* Arc2D.cpp:
	* Script.cpp:
	* LineSet.cpp:
	* ClipPlane.h:
	* Cylinder.h:
	* LayerSet.cpp:
	* Viewport.cpp:
	* HAnimSegment.h:
	* Disk2D.cpp:
	* CADPart.h:
	* Sphere.cpp:
	* HAnimJoint.cpp:
	* MetadataBool.cpp:
	* Anchor.cpp:
	* X3DChildNode.cpp:
	* GeoLOD.cpp:
	* Inline.cpp:
	* Extrusion.h:
	* EspduTransform.cpp:
	* CADLayer.h:
	* ShaderPart.cpp:
	* X3DShapeNode.cpp:
	* X3DSoundNode.cpp:
	* GeoOrigin.h:
	* SpotLight.cpp:
	* NurbsCurve2D.cpp:
	* Transform.cpp:
	* LineProperties.h:
	* TransmitterPdu.cpp:
	* DISEntityManager.h:
	* HAnimHumanoid.h:
	* FillProperties.h:
	* X3DSensorNode.cpp:
	* MetadataFloat.cpp:
	* PointSet.cpp:
	* LayoutGroup.cpp:
	* ScreenGroup.cpp:
	* LayoutLayer.cpp:
	* Circle2D.cpp:
	* HAnimDisplacer.h:
	* ColorDamper.h:
	* HAnimSegment.cpp:
	* CADFace.cpp:
	* QuadSet.cpp:
	* CADPart.cpp:
	* LoadSensor.h:
	* X3DLightNode.h:
	* ArcClose2D.h:
	* ClipPlane.cpp:
	* PointLight.cpp:
	* Cylinder.cpp:
	* MetadataDouble.cpp:
	* ColorRGBA.cpp:
	* X3DShaderNode.h:
	* MetadataString.cpp:
	* GeoOrigin.cpp:
	* Rectangle2D.h:
	* Coordinate.cpp:
	* CADLayer.cpp:
	* GeoMetadata.h:
	* LineProperties.cpp:
	* Viewpoint.cpp:
	* Billboard.cpp:
	* Collision.cpp:
	* StaticGroup.cpp:
	* FillProperties.cpp:
	* TwoSidedMaterial.h:
	* X3DBindableNode.cpp:
	* ScalarChaser.h:
	* MultiTexture.h:
	* HAnimHumanoid.cpp:
	* GeoLocation.h:
	* MetadataInteger.cpp:
	* ScreenFontStyle.h:
	* Extrusion.cpp:
	* DISEntityManager.cpp:
	* X3DLayoutNode.cpp:
	* X3DShaderNode.cpp:
	* X3DLayerNode.cpp:
	* ColorDamper.cpp:
	* ShaderProgram.cpp:
	* GeoTransform.h:
	* ArcClose2D.cpp:
	* Polyline2D.cpp:
	* X3DLightNode.cpp:
	* LoadSensor.cpp:
	* GeoViewpoint.h:
	* PickableGroup.cpp:
	* ProgramShader.cpp:
	* HAnimDisplacer.cpp:
	* X3DFontStyleNode.cpp:
	* TriangleSet.cpp:
	* X3DMaterialNode.cpp:
	* Rectangle2D.cpp:
	* TriangleSet2D.h:
	* ScalarChaser.cpp:
	* IndexedLineSet.h:
	* Contact.h:
	* ElevationGrid.h:
	* X3DMetadataObject.cpp:
	* DISEntityTypeMapping.h:
	* GeoMetadata.cpp:
	* PixelTexture.cpp:
	* ImageTexture.cpp:
	* ScreenFontStyle.cpp:
	* X3DColorNode.cpp:
	* MovieTexture.cpp:
	* PositionDamper.h:
	* Polypoint2D.cpp:
	* PositionChaser.h:
	* CoordinateDouble.cpp:
	* MultiTexture.cpp:
	* ComposedShader.cpp:
	* GeoLocation.cpp:
	* LinePickSensor.cpp:
	* TwoSidedMaterial.cpp:
	* X3DSoundSourceNode.h:
	* GeoCoordinate.h:
	* PackagedShader.cpp:
	* X3DScriptNode.cpp:
	* X3DChaserNode.cpp:
	* NurbsPatchSurface.cpp:
	* ContourPolyline2D.cpp:
	* KeySensor.h:
	* NurbsSwungSurface.cpp:
	* X3DDamperNode.cpp:
	* NurbsSweptSurface.cpp:
	* X3DUrlObject.cpp:
	* GeoViewpoint.cpp:
	* IndexedFaceSet.h:
	* X3DPickableObject.h:
	* ViewpointGroup.h:
	* GeoTransform.cpp:
	* NavigationInfo.h:
	* X3DAppearanceNode.cpp:
	* PointPickSensor.cpp:
	* GeoTouchSensor.h:
	* X3DPickSensorNode.h:
	* X3DNormalNode.cpp:
	* CADAssembly.cpp:
	* GeoCoordinate.cpp:
	* Contact.cpp:
	* VolumePickSensor.cpp:
	* DISEntityTypeMapping.cpp:
	* RigidBody.h:
	* Fog.cpp:
	* ElevationGrid.cpp:
	* TriangleFanSet.cpp:
	* IndexedLineSet.cpp:
	* CoordinateDamper.h:
	* TexCoordDamper2D.h:
	* PositionDamper.cpp:
	* PositionChaser2D.h:
	* PositionChaser.cpp:
	* PositionDamper2D.h:
	* X3DSoundSourceNode.cpp:
	* TriangleSet2D.cpp:
	* X3DViewportNode.cpp:
	* X3DGroupingNode.cpp:
	* X3DTextureNode.cpp:
	* X3DGeometryNode.cpp:
	* X3DFollowerNode.cpp:
	* X3DBoundedObject.cpp:
	* OrthoViewpoint.cpp:
	* ViewpointGroup.cpp:
	* OrientationDamper.h:
	* OrientationChaser.h:
	* NurbsTrimmedSurface.cpp:
	* NavigationInfo.cpp:
	* X3DViewpointNode.h:
	* GeoElevationGrid.h:
	* GeoTouchSensor.cpp:
	* MotorJoint.h:
	* IndexedFaceSet.cpp:
	* TextureProperties.h:
	* X3DTimeDependentNode.cpp:
	* X3DPickSensorNode.cpp:
	* X3DPrototypeInstance.cpp:
	* DirectionalLight.cpp:
	* KeySensor.cpp:
	* X3DPickableObject.cpp:
	* CoordinateDamper.cpp:
	* PositionChaser2D.cpp:
	* TimeTrigger.cpp:
	* PositionDamper2D.cpp:
	* RigidBody.cpp:
	* BallJoint.cpp:
	* ImageTexture3D.cpp:
	* TriangleStripSet.cpp:
	* NurbsTextureCoordinate.h:
	* IndexedQuadSet.cpp:
	* TextureTransform.cpp:
	* StringSensor.h:
	* X3DTexture2DNode.cpp:
	* PixelTexture3D.cpp:
	* TexCoordDamper2D.cpp:
	* TextureProperties.cpp:
	* PrimitivePickSensor.cpp:
	* EaseInEaseOut.cpp:
	* MotorJoint.cpp:
	* GeoElevationGrid.cpp:
	* GeoProximitySensor.h:
	* IntegerTrigger.h:
	* X3DCoordinateNode.cpp:
	* X3DViewpointNode.cpp:
	* ConeEmitter.cpp:
	* TextureCoordinate.cpp:
	* OrientationDamper.cpp:
	* VolumeEmitter.h:
	* OrientationChaser.cpp:
	* StringSensor.cpp:
	* TextureTransform3D.h:
	* BooleanFilter.cpp:
	* SliderJoint.cpp:
	* BooleanToggle.cpp:
	* NurbsSurfaceInterpolator.h:
	* SurfaceEmitter.h:
	* IndexedTriangleSet.cpp:
	* X3DTexture3DNode.cpp:
	* PointEmitter.cpp:
	* ParticleSystem.h:
	* X3DAppearanceChildNode.cpp:
	* NurbsTextureCoordinate.cpp:
	* FloatVertexAttribute.cpp:
	* PolylineEmitter.h:
	* VolumeEmitter.cpp:
	* GeoProximitySensor.cpp:
	* X3DTriggerNode.cpp:
	* NurbsPositionInterpolator.h:
	* LocalFog.cpp:
	* X3DSequencerNode.h:
	* IntegerTrigger.cpp:
	* ComposedTexture3D.cpp:
	* BooleanTrigger.cpp:
	* Matrix3VertexAttribute.cpp:
	* X3DVertexAttributeNode.cpp:
	* X3DNurbsControlCurveNode.cpp:
	* TextureTransform3D.cpp:
	* NurbsSurfaceInterpolator.cpp:
	* PlaneSensor.h:
	* Matrix4VertexAttribute.cpp:
	* ParticleSystem.cpp:
	* SurfaceEmitter.cpp:
	* X3DParametricGeometryNode.cpp:
	* IndexedTriangleFanSet.cpp:
	* TextureCoordinate3D.cpp:
	* X3DFogObject.h:
	* TextureCoordinate4D.cpp:
	* Background.cpp:
	* ColorInterpolator.cpp:
	* X3DSequencerNode.cpp:
	* X3DNetworkSensorNode.cpp:
	* MultiTextureTransform.cpp:
	* PolylineEmitter.cpp:
	* NurbsPositionInterpolator.cpp:
	* CollisionSpace.cpp:
	* X3DNurbsSurfaceGeometryNode.h:
	* UniversalJoint.cpp:
	* BooleanSequencer.cpp:
	* IntegerSequencer.cpp:
	* X3DRigidJointNode.h:
	* WindPhysicsModel.cpp:
	* TouchSensor.cpp:
	* PlaneSensor.cpp:
	* MultiTextureCoordinate.cpp:
	* GeoPositionInterpolator.h:
	* NormalInterpolator.cpp:
	* ExplosionEmitter.cpp:
	* CollidableShape.cpp:
	* CollisionSensor.cpp:
	* ScalarInterpolator.cpp:
	* NurbsOrientationInterpolator.h:
	* SphereSensor.cpp:
	* ProximitySensor.h:
	* CylinderSensor.h:
	* X3DTextureTransformNode.cpp:
	* X3DInterpolatorNode.cpp:
	* TransformSensor.h:
	* X3DComposedGeometryNode.cpp:
	* X3DFogObject.cpp:
	* IndexedTriangleStripSet.cpp:
	* CollidableOffset.cpp:
	* X3DNurbsSurfaceGeometryNode.cpp:
	* PositionInterpolator.cpp:
	* X3DGeometricPropertyNode.cpp:
	* FogCoordinate.cpp:
	* X3DRigidJointNode.cpp:
	* CollisionCollection.h:
	* RigidBodyCollection.h:
	* TextureCoordinateGenerator.h:
	* X3DTextureCoordinateNode.cpp:
	* NurbsOrientationInterpolator.cpp:
	* GeoPositionInterpolator.cpp:
	* X3DProgrammableShaderObject.cpp:
	* ProximitySensor.cpp:
	* CylinderSensor.cpp:
	* TransformSensor.cpp:
	* GravityPhysicsModel.cpp:
	* BoundedPhysicsModel.cpp:
	* TextureCoordinateGenerator.cpp:
	* SplineScalarInterpolator.h:
	* CollisionCollection.cpp:
	* CoordinateInterpolator.cpp:
	* VisibilitySensor.cpp:
	* ImageCubeMapTexture.cpp:
	* TextureTransformMatrix3D.cpp:
	* PositionInterpolator2D.cpp:
	* X3DDragSensorNode.h:
	* X3DBackgroundNode.h:
	* RigidBodyCollection.cpp:
	* SingleAxisHingeJoint.cpp:
	* OrientationInterpolator.cpp:
	* X3DNBodyCollidableNode.h:
	* DoubleAxisHingeJoint.cpp:
	* X3DDragSensorNode.cpp:
	* CoordinateInterpolator2D.cpp:
	* GeneratedCubeMapTexture.h:
	* X3DParticleEmitterNode.cpp:
	* TextureBackground.cpp:
	* SplinePositionInterpolator.h:
	* X3DKeyDeviceSensorNode.cpp:
	* X3DBackgroundNode.cpp:
	* SplineScalarInterpolator.cpp:
	* X3DNBodyCollidableNode.cpp:
	* ComposedCubeMapTexture.cpp:
	* X3DTouchSensorNode.cpp:
	* SplinePositionInterpolator.cpp:
	* GeneratedCubeMapTexture.cpp:
	* X3DProductStructureChildNode.cpp:
	* SplinePositionInterpolator2D.h:
	* SquadOrientationInterpolator.h:
	* X3DEnvironmentTextureNode.cpp:
	* SplinePositionInterpolator2D.cpp:
	* SquadOrientationInterpolator.cpp:
	* X3DParticlePhysicsModelNode.cpp:
	* X3DNBodyCollisionSpaceNode.cpp:
	* X3DEnvironmentalSensorNode.h:
	* X3DEnvironmentalSensorNode.cpp:
	* X3DPointingDeviceSensorNode.h:
	* X3DPointingDeviceSensorNode.cpp: 

2012-06-23  Holger Seelig  <holger.seelig@yahoo.de>

	* Generator.cpp:
	* Box.cpp:
	* TimeSensor.cpp:
	* Cone.cpp:
	* X3DTimeDependentNode.cpp: 

2012-06-23  Holger Seelig  <holger.seelig@yahoo.de>

	* Generator.cpp:
	* TimeSensor.cpp: 

2012-06-23  Holger Seelig  <holger.seelig@yahoo.de>

	* Proto.cpp:
	* Parser.cpp:
	* Generator.h:
	* Generator.cpp:
	* ExternProto.cpp:
	* X3DBaseNode.cpp: 

2012-06-23  Holger Seelig  <holger.seelig@yahoo.de>

	* Router.cpp:
	* X3DBaseNode.cpp: 

2012-06-23  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DBaseNode.cpp: 

2012-06-23  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DBaseNode.cpp: 

2012-06-23  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DBaseNode.cpp:
	* ComponentInfoArray.h:
	* X3DFieldDefinition.h:
	* X3DFieldDefinition.cpp: 

2012-06-23  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DObject.h:
	* SFTime.h:
	* X3DBaseNode.cpp:
	* SFVec3d.h:
	* SFVec4d.h:
	* SFFloat.h:
	* SFVec4f.h:
	* SFColor.h:
	* SFVec2f.h:
	* SFVec3f.h:
	* SFVec2d.h:
	* SFInt32.h:
	* SFString.h:
	* SFDouble.h:
	* SFMatrix3d.h:
	* SFRotation.h:
	* SFMatrix4d.h:
	* SFMatrix3f.h:
	* SFMatrix4f.h:
	* SFColorRGBA.h:
	* X3DPrototypeInstance.cpp: 

2012-06-22  Holger Seelig  <holger.seelig@yahoo.de>

	* Route.h:
	* Viewer.h:
	* Browser.h:
	* Mouse.cpp:
	* Route.cpp:
	* Viewer.cpp:
	* Browser.cpp:
	* X3DBaseNode.h:
	* JavaScript.cpp:
	* ComponentInfo.h:
	* X3DArrayField.h:
	* X3DBaseNode.cpp:
	* X3DExecutionContext.h:
	* Text.h:
	* Sound.h:
	* Text.cpp:
	* X3DNode.h:
	* SignalPdu.h:
	* Sound.cpp:
	* Layout.h:
	* NurbsSet.h:
	* X3DNode.cpp:
	* Material.h:
	* Layer.h:
	* WorldInfo.h:
	* Box.h:
	* LOD.h:
	* FontStyle.h:
	* Switch.h:
	* Contour2D.h:
	* ReceiverPdu.h:
	* SignalPdu.cpp:
	* Cone.h:
	* TimeSensor.h:
	* Color.h:
	* Layout.cpp:
	* HAnimSite.h:
	* Normal.h:
	* FontStyle.cpp:
	* NurbsSet.cpp:
	* LOD.cpp:
	* Script.h:
	* MetadataSet.h:
	* Layer.cpp:
	* Appearance.h:
	* WorldInfo.cpp:
	* Material.cpp:
	* NurbsCurve.h:
	* Box.cpp:
	* Arc2D.h:
	* Viewport.h:
	* Disk2D.h:
	* MetadataBool.h:
	* Inline.h:
	* TimeSensor.cpp:
	* GeoLOD.h:
	* HAnimJoint.h:
	* Color.cpp:
	* Anchor.h:
	* Contour2D.cpp:
	* ReceiverPdu.cpp:
	* Switch.cpp:
	* Sphere.h:
	* LineSet.h:
	* Cone.cpp:
	* LayerSet.h:
	* HAnimSite.cpp:
	* Normal.cpp:
	* MetadataFloat.h:
	* Script.cpp:
	* NurbsCurve.cpp:
	* X3DSensorNode.h:
	* Transform.h:
	* MetadataSet.cpp:
	* X3DShapeNode.h:
	* Appearance.cpp:
	* SpotLight.h:
	* TransmitterPdu.h:
	* LayoutLayer.h:
	* LayoutGroup.h:
	* ShaderPart.h:
	* NurbsCurve2D.h:
	* EspduTransform.h:
	* Arc2D.cpp:
	* PointSet.h:
	* ClipPlane.h:
	* MetadataString.h:
	* MetadataDouble.h:
	* CADFace.h:
	* LineSet.cpp:
	* Cylinder.h:
	* CADPart.h:
	* Sphere.cpp:
	* Circle2D.h:
	* Inline.cpp:
	* PointLight.h:
	* HAnimJoint.cpp:
	* Disk2D.cpp:
	* Viewport.cpp:
	* ColorRGBA.h:
	* LayerSet.cpp:
	* MetadataBool.cpp:
	* Anchor.cpp:
	* GeoLOD.cpp:
	* HAnimSegment.h:
	* LayoutGroup.cpp:
	* CADLayer.h:
	* LayoutLayer.cpp:
	* Extrusion.h:
	* GeoOrigin.h:
	* SpotLight.cpp:
	* StaticGroup.h:
	* HAnimHumanoid.h:
	* Transform.cpp:
	* EspduTransform.cpp:
	* TransmitterPdu.cpp:
	* DISEntityManager.h:
	* Billboard.h:
	* Viewpoint.h:
	* X3DSensorNode.cpp:
	* X3DBindableNode.h:
	* NurbsCurve2D.cpp:
	* MetadataFloat.cpp:
	* MetadataInteger.h:
	* FillProperties.h:
	* ShaderPart.cpp:
	* PointSet.cpp:
	* LineProperties.h:
	* Coordinate.h:
	* X3DShapeNode.cpp:
	* Collision.h:
	* Circle2D.cpp:
	* HAnimSegment.cpp:
	* LoadSensor.h:
	* ColorRGBA.cpp:
	* HAnimDisplacer.h:
	* ClipPlane.cpp:
	* X3DLayerNode.h:
	* PointLight.cpp:
	* X3DLightNode.h:
	* Cylinder.cpp:
	* ArcClose2D.h:
	* ColorDamper.h:
	* Polyline2D.h:
	* CADFace.cpp:
	* ProgramShader.h:
	* CADPart.cpp:
	* MetadataDouble.cpp:
	* ShaderProgram.h:
	* X3DShaderNode.h:
	* MetadataString.cpp:
	* DISEntityManager.cpp:
	* Billboard.cpp:
	* Collision.cpp:
	* CADLayer.cpp:
	* X3DBindableNode.cpp:
	* Viewpoint.cpp:
	* Coordinate.cpp:
	* ComposedShader.h:
	* TwoSidedMaterial.h:
	* ScreenFontStyle.h:
	* Extrusion.cpp:
	* MultiTexture.h:
	* FillProperties.cpp:
	* StaticGroup.cpp:
	* PixelTexture.h:
	* LineProperties.cpp:
	* MovieTexture.h:
	* CoordinateDouble.h:
	* X3DMetadataObject.h:
	* GeoLocation.h:
	* MetadataInteger.cpp:
	* GeoOrigin.cpp:
	* Polypoint2D.h:
	* Rectangle2D.h:
	* HAnimHumanoid.cpp:
	* GeoMetadata.h:
	* LinePickSensor.h:
	* ScalarChaser.h:
	* GeoTransform.h:
	* NurbsSweptSurface.h:
	* X3DShaderNode.cpp:
	* PointPickSensor.h:
	* HAnimDisplacer.cpp:
	* X3DUrlObject.h:
	* X3DLayerNode.cpp:
	* Polyline2D.cpp:
	* ArcClose2D.cpp:
	* LoadSensor.cpp:
	* ProgramShader.cpp:
	* NurbsSwungSurface.h:
	* GeoViewpoint.h:
	* X3DLightNode.cpp:
	* ColorDamper.cpp:
	* ShaderProgram.cpp:
	* MovieTexture.cpp:
	* CoordinateDouble.cpp:
	* ElevationGrid.h:
	* X3DSoundSourceNode.h:
	* GeoLocation.cpp:
	* GeoCoordinate.h:
	* PositionChaser.h:
	* ScalarChaser.cpp:
	* PositionDamper.h:
	* ScreenFontStyle.cpp:
	* MultiTexture.cpp:
	* ImageTexture.cpp:
	* PixelTexture.cpp:
	* X3DGroupingNode.h:
	* TwoSidedMaterial.cpp:
	* GeoMetadata.cpp:
	* TriangleSet2D.h:
	* DISEntityTypeMapping.h:
	* ComposedShader.cpp:
	* Polypoint2D.cpp:
	* LinePickSensor.cpp:
	* X3DMetadataObject.cpp:
	* Rectangle2D.cpp:
	* IndexedLineSet.h:
	* Contact.h:
	* TriangleFanSet.h:
	* DirectionalLight.h:
	* X3DPickableObject.h:
	* NurbsTrimmedSurface.h:
	* NavigationInfo.h:
	* OrthoViewpoint.h:
	* X3DBoundedObject.h:
	* NurbsSweptSurface.cpp:
	* ViewpointGroup.h:
	* NurbsSwungSurface.cpp:
	* X3DGeometryNode.h:
	* GeoTouchSensor.h:
	* X3DUrlObject.cpp:
	* GeoTransform.cpp:
	* GeoViewpoint.cpp:
	* IndexedFaceSet.h:
	* X3DPickSensorNode.h:
	* PointPickSensor.cpp:
	* KeySensor.h:
	* X3DTimeDependentNode.h:
	* DISEntityTypeMapping.cpp:
	* RigidBody.h:
	* IndexedQuadSet.h:
	* GeoCoordinate.cpp:
	* BallJoint.h:
	* CoordinateDamper.h:
	* TexCoordDamper2D.h:
	* PositionChaser2D.h:
	* X3DSoundSourceNode.cpp:
	* PixelTexture3D.h:
	* PositionDamper2D.h:
	* TriangleSet2D.cpp:
	* PositionChaser.cpp:
	* Fog.cpp:
	* PositionDamper.cpp:
	* TextureTransform.h:
	* X3DGroupingNode.cpp:
	* TimeTrigger.h:
	* ElevationGrid.cpp:
	* TriangleStripSet.h:
	* Contact.cpp:
	* TriangleFanSet.cpp:
	* X3DTexture2DNode.h:
	* IndexedLineSet.cpp:
	* X3DGeometryNode.cpp:
	* EaseInEaseOut.h:
	* X3DViewpointNode.h:
	* TextureCoordinate.h:
	* X3DTimeDependentNode.cpp:
	* NurbsTrimmedSurface.cpp:
	* ConeEmitter.h:
	* IndexedFaceSet.cpp:
	* TextureProperties.h:
	* OrientationChaser.h:
	* GeoElevationGrid.h:
	* GeoTouchSensor.cpp:
	* X3DPickSensorNode.cpp:
	* ViewpointGroup.cpp:
	* OrientationDamper.h:
	* X3DPrototypeInstance.cpp:
	* OrthoViewpoint.cpp:
	* X3DBoundedObject.cpp:
	* X3DPickableObject.cpp:
	* DirectionalLight.cpp:
	* MotorJoint.h:
	* NavigationInfo.cpp:
	* KeySensor.cpp:
	* TextureTransform.cpp:
	* StringSensor.h:
	* IndexedQuadSet.cpp:
	* PixelTexture3D.cpp:
	* BooleanToggle.h:
	* BallJoint.cpp:
	* FloatVertexAttribute.h:
	* NurbsTextureCoordinate.h:
	* IndexedTriangleSet.h:
	* SliderJoint.h:
	* RigidBody.cpp:
	* BooleanFilter.h:
	* TexCoordDamper2D.cpp:
	* TimeTrigger.cpp:
	* PositionDamper2D.cpp:
	* X3DTexture3DNode.h:
	* X3DTexture2DNode.cpp:
	* PointEmitter.h:
	* CoordinateDamper.cpp:
	* TriangleStripSet.cpp:
	* PositionChaser2D.cpp:
	* LocalFog.h:
	* ConeEmitter.cpp:
	* IntegerTrigger.h:
	* TextureProperties.cpp:
	* VolumeEmitter.h:
	* MotorJoint.cpp:
	* X3DViewpointNode.cpp:
	* BooleanTrigger.h:
	* OrientationChaser.cpp:
	* ComposedTexture3D.h:
	* GeoElevationGrid.cpp:
	* EaseInEaseOut.cpp:
	* GeoProximitySensor.h:
	* OrientationDamper.cpp:
	* TextureCoordinate.cpp:
	* IndexedTriangleSet.cpp:
	* SurfaceEmitter.h:
	* X3DNurbsControlCurveNode.h:
	* StringSensor.cpp:
	* BooleanToggle.cpp:
	* BooleanFilter.cpp:
	* NurbsSurfaceInterpolator.h:
	* FloatVertexAttribute.cpp:
	* X3DVertexAttributeNode.h:
	* Matrix4VertexAttribute.h:
	* NurbsTextureCoordinate.cpp:
	* Matrix3VertexAttribute.h:
	* ParticleSystem.h:
	* TextureTransform3D.h:
	* PointEmitter.cpp:
	* SliderJoint.cpp:
	* X3DTexture3DNode.cpp:
	* NurbsPositionInterpolator.h:
	* X3DSequencerNode.h:
	* IntegerTrigger.cpp:
	* UniversalJoint.h:
	* IntegerSequencer.h:
	* BooleanTrigger.cpp:
	* BooleanSequencer.h:
	* Background.h:
	* MultiTextureTransform.h:
	* LocalFog.cpp:
	* CollisionSpace.h:
	* TextureCoordinate4D.h:
	* TextureCoordinate3D.h:
	* IndexedTriangleFanSet.h:
	* ColorInterpolator.h:
	* VolumeEmitter.cpp:
	* PolylineEmitter.h:
	* ComposedTexture3D.cpp:
	* GeoProximitySensor.cpp:
	* X3DNurbsControlCurveNode.cpp:
	* NurbsSurfaceInterpolator.cpp:
	* ScalarInterpolator.h:
	* CollisionSensor.h:
	* NormalInterpolator.h:
	* TextureTransform3D.cpp:
	* WindPhysicsModel.h:
	* ExplosionEmitter.h:
	* X3DVertexAttributeNode.cpp:
	* Matrix3VertexAttribute.cpp:
	* PlaneSensor.h:
	* TouchSensor.h:
	* Matrix4VertexAttribute.cpp:
	* ParticleSystem.cpp:
	* SurfaceEmitter.cpp:
	* MultiTextureCoordinate.h:
	* CollidableShape.h:
	* X3DNurbsSurfaceGeometryNode.h:
	* PolylineEmitter.cpp:
	* TextureCoordinate3D.cpp:
	* X3DComposedGeometryNode.h:
	* SphereSensor.h:
	* TextureCoordinate4D.cpp:
	* UniversalJoint.cpp:
	* CollidableOffset.h:
	* CollisionSpace.cpp:
	* BooleanSequencer.cpp:
	* IntegerSequencer.cpp:
	* NurbsPositionInterpolator.cpp:
	* IndexedTriangleFanSet.cpp:
	* IndexedTriangleStripSet.h:
	* MultiTextureTransform.cpp:
	* X3DSequencerNode.cpp:
	* ColorInterpolator.cpp:
	* Background.cpp:
	* X3DFogObject.h:
	* X3DInterpolatorNode.h:
	* NurbsOrientationInterpolator.h:
	* FogCoordinate.h:
	* CollidableShape.cpp:
	* ScalarInterpolator.cpp:
	* PositionInterpolator.h:
	* MultiTextureCoordinate.cpp:
	* CollisionSensor.cpp:
	* PlaneSensor.cpp:
	* X3DRigidJointNode.h:
	* WindPhysicsModel.cpp:
	* ExplosionEmitter.cpp:
	* NormalInterpolator.cpp:
	* TouchSensor.cpp:
	* GeoPositionInterpolator.h:
	* SphereSensor.cpp:
	* GravityPhysicsModel.h:
	* BoundedPhysicsModel.h:
	* CollidableOffset.cpp:
	* X3DNurbsSurfaceGeometryNode.cpp:
	* X3DInterpolatorNode.cpp:
	* CylinderSensor.h:
	* X3DFogObject.cpp:
	* ProximitySensor.h:
	* X3DComposedGeometryNode.cpp:
	* IndexedTriangleStripSet.cpp:
	* TransformSensor.h:
	* TextureCoordinateGenerator.h:
	* NurbsOrientationInterpolator.cpp:
	* X3DRigidJointNode.cpp:
	* PositionInterpolator2D.h:
	* TextureTransformMatrix3D.h:
	* FogCoordinate.cpp:
	* RigidBodyCollection.h:
	* CollisionCollection.h:
	* CoordinateInterpolator.h:
	* ImageCubeMapTexture.h:
	* GeoPositionInterpolator.cpp:
	* PositionInterpolator.cpp:
	* CylinderSensor.cpp:
	* BoundedPhysicsModel.cpp:
	* ProximitySensor.cpp:
	* OrientationInterpolator.h:
	* TransformSensor.cpp:
	* DoubleAxisHingeJoint.h:
	* GravityPhysicsModel.cpp:
	* SingleAxisHingeJoint.h:
	* CoordinateInterpolator.cpp:
	* TextureBackground.h:
	* X3DParticleEmitterNode.h:
	* X3DDragSensorNode.h:
	* VisibilitySensor.cpp:
	* PositionInterpolator2D.cpp:
	* RigidBodyCollection.cpp:
	* ImageCubeMapTexture.cpp:
	* TextureTransformMatrix3D.cpp:
	* TextureCoordinateGenerator.cpp:
	* CoordinateInterpolator2D.h:
	* CollisionCollection.cpp:
	* X3DBackgroundNode.h:
	* SplineScalarInterpolator.h:
	* OrientationInterpolator.cpp:
	* X3DNBodyCollidableNode.h:
	* ComposedCubeMapTexture.h:
	* X3DTouchSensorNode.h:
	* SingleAxisHingeJoint.cpp:
	* DoubleAxisHingeJoint.cpp:
	* GeneratedCubeMapTexture.h:
	* X3DParticleEmitterNode.cpp:
	* SplineScalarInterpolator.cpp:
	* TextureBackground.cpp:
	* CoordinateInterpolator2D.cpp:
	* X3DBackgroundNode.cpp:
	* X3DProductStructureChildNode.h:
	* SplinePositionInterpolator.h:
	* X3DDragSensorNode.cpp:
	* ComposedCubeMapTexture.cpp:
	* X3DTouchSensorNode.cpp:
	* X3DNBodyCollidableNode.cpp:
	* SplinePositionInterpolator2D.h:
	* SplinePositionInterpolator.cpp:
	* GeneratedCubeMapTexture.cpp:
	* SquadOrientationInterpolator.h:
	* X3DProductStructureChildNode.cpp:
	* X3DParticlePhysicsModelNode.h:
	* X3DNBodyCollisionSpaceNode.h:
	* SplinePositionInterpolator2D.cpp:
	* SquadOrientationInterpolator.cpp:
	* X3DNBodyCollisionSpaceNode.cpp:
	* X3DParticlePhysicsModelNode.cpp:
	* X3DEnvironmentalSensorNode.h:
	* X3DPointingDeviceSensorNode.h:
	* X3DEnvironmentalSensorNode.cpp:
	* X3DPointingDeviceSensorNode.cpp: 

2012-06-21  Holger Seelig  <holger.seelig@yahoo.de>

	* Mouse.cpp: 

2012-06-21  Holger Seelig  <holger.seelig@yahoo.de>

	* findNode:
	* Browser.h:
	* Proto.cpp:
	* Parser.cpp:
	* Generator.cpp:
	* X3DBaseNode.h:
	* JavaScript.cpp:
	* X3DBaseNode.cpp:
	* SFNode.cpp:
	* SupportedProfiles.h:
	* X3DFieldDefinition.h:
	* SupportedComponents.h:
	* X3DFieldDefinition.cpp:
	* X3DExecutionContext.cpp: 

2012-06-21  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj: 

2012-06-21  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DConstants.h:
	* X3DFieldDefinition.cpp: 

2012-06-21  Holger Seelig  <holger.seelig@yahoo.de>

	* X3D.h:
	* Name.h:
	* Cast.h:
	* FPS.cpp:
	* libtitania-x3d.cproj:
	* Parser.h:
	* Errors.h:
	* RefPtr.h:
	* Route.cpp:
	* Browser.h:
	* Proto.cpp:
	* Scene.cpp:
	* Parser.cpp:
	* X3DField.h:
	* Errors.cpp:
	* Generator.h:
	* X3DObject.h:
	* Browser.cpp:
	* Exception.h:
	* Renderer.cpp:
	* Generator.cpp:
	* Exception.cpp:
	* X3DBaseNode.h:
	* X3DObject.cpp:
	* X3DConstants.h:
	* X3DBaseNode.cpp:
	* MFNode.h:
	* SFTime.h:
	* SFNode.h:
	* SFBool.h:
	* X3DArrayField.h:
	* ExternProto.cpp:
	* SFVec3d.h:
	* SFInt32.h:
	* SFVec2d.h:
	* SFFloat.h:
	* SFVec4d.h:
	* SFVec2f.h:
	* SFColor.h:
	* SFImage.h:
	* MFInt32.h:
	* SFVec3f.h:
	* SFVec4f.h:
	* SFDouble.h:
	* SFString.h:
	* SFMatrix4d.h:
	* SFMatrix3d.h:
	* SFMatrix3f.h:
	* SFRotation.h:
	* SFMatrix4f.h:
	* X3DFieldDefinition.h:
	* ArrayFields.h:
	* SFColorRGBA.h:
	* X3DExecutionContext.h:
	* X3DFieldDefinition.cpp:
	* ArrayFields.cpp:
	* BrowserApplication.cpp:
	* X3DExecutionContext.cpp:
	* Appearance.cpp:
	* LayerSet.cpp:
	* Inline.cpp:
	* X3DShapeNode.cpp:
	* X3DLayerNode.h:
	* X3DLayerNode.cpp:
	* X3DPrototypeInstance.h:
	* X3DPrototypeInstance.cpp:
	* X3DGeometryNode.cpp:
	* ProximitySensor.cpp: 

2012-06-19  Holger Seelig  <holger.seelig@yahoo.de>

	* X3D.h:
	* Scene.h:
	* Route.h:
	* libtitania-x3d.cproj:
	* Parser.h:
	* libtitania-x3d.md.pc:
	* Route.cpp:
	* Scene.cpp:
	* Browser.h:
	* Parser.cpp:
	* Browser.cpp:
	* Exception.h:
	* X3DObject.h:
	* ExternProto.h:
	* Exception.cpp:
	* Generator.cpp:
	* X3DObject.cpp:
	* ExternProto.cpp:
	* SFNode.h:
	* X3DBaseNode.cpp:
	* SFNode.cpp:
	* GarbageColector.h:
	* GarbageCollector.h:
	* SbVec2.h:
	* SbVec4.h:
	* SbVec3.h:
	* GarbageColector.cpp:
	* GarbageCollector.cpp:
	* ExecutionContext.cpp:
	* X3DExecutionContext.h:
	* SbMatrix4.h:
	* SbMatrix3.h:
	* BrowserApplication.cpp:
	* SbColor.cpp:
	* SbRotation.h:
	* X3DExecutionContext.cpp:
	* SbQuaternion.h:
	* SbColorRGBA.cpp: 

2012-06-19  Holger Seelig  <holger.seelig@yahoo.de>

	* Error.h:
	* libtitania-x3d.cproj:
	* Exception.h:
	* SbVec3.h:
	* SbVec4.h:
	* SbVec2.h:
	* SbMatrix3.h:
	* SbMatrix4.h:
	* SbColor.cpp:
	* BrowserApplication.cpp:
	* SbRotation.h:
	* SbQuaternion.h:
	* SbColorRGBA.cpp: 

2012-06-19  Holger Seelig  <holger.seelig@yahoo.de>

	* Scene.cpp:
	* Proto.cpp:
	* Parser.cpp:
	* NodeIndex.h:
	* Browser.cpp:
	* X3DBaseNode.h:
	* NodeIndex.cpp:
	* Generator.cpp:
	* ExternProto.cpp:
	* X3DBaseNode.cpp:
	* ExecutionContext.cpp:
	* X3DExecutionContext.h:
	* X3DExecutionContext.cpp:
	* X3DNode.h:
	* Script.h:
	* X3DPrototypeInstance.cpp: 

2012-06-18  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.md.pc:
	* Scene.cpp:
	* Route.cpp:
	* Browser.cpp:
	* NodeIndex.cpp:
	* X3DBaseNode.h:
	* X3DBaseNode.cpp:
	* ExecutionContext.cpp:
	* Text.cpp:
	* Sound.cpp:
	* Shape.cpp:
	* X3DNode.cpp:
	* Layout.cpp:
	* SignalPdu.cpp:
	* LOD.cpp:
	* FontStyle.cpp:
	* Group.cpp:
	* WorldInfo.cpp:
	* Material.cpp:
	* Box.cpp:
	* Layer.cpp:
	* NurbsSet.cpp:
	* AudioClip.cpp:
	* Contour2D.cpp:
	* TimeSensor.cpp:
	* Cone.cpp:
	* Switch.cpp:
	* Color.cpp:
	* ReceiverPdu.cpp:
	* Arc2D.cpp:
	* X3DInfoNode.cpp:
	* MetadataSet.cpp:
	* NurbsCurve.cpp:
	* Normal.cpp:
	* Appearance.cpp:
	* HAnimSite.cpp:
	* Script.cpp:
	* GeoLOD.cpp:
	* LayerSet.cpp:
	* X3DChildNode.cpp:
	* HAnimJoint.cpp:
	* Inline.cpp:
	* LineSet.cpp:
	* Viewport.cpp:
	* Sphere.cpp:
	* Anchor.cpp:
	* MetadataBool.cpp:
	* Disk2D.cpp:
	* NurbsCurve2D.cpp:
	* LayoutGroup.cpp:
	* ShaderPart.cpp:
	* X3DShapeNode.cpp:
	* SpotLight.cpp:
	* X3DSoundNode.cpp:
	* PointSet.cpp:
	* Transform.cpp:
	* EspduTransform.cpp:
	* TransmitterPdu.cpp:
	* MetadataFloat.cpp:
	* X3DSensorNode.cpp:
	* LayoutLayer.cpp:
	* ScreenGroup.cpp:
	* ColorRGBA.cpp:
	* PointLight.cpp:
	* MetadataString.cpp:
	* MetadataDouble.cpp:
	* Cylinder.cpp:
	* ClipPlane.cpp:
	* CADPart.cpp:
	* QuadSet.cpp:
	* CADFace.cpp:
	* Circle2D.cpp:
	* HAnimSegment.cpp:
	* GeoOrigin.cpp:
	* FillProperties.cpp:
	* Billboard.cpp:
	* Viewpoint.cpp:
	* Extrusion.cpp:
	* X3DLayoutNode.cpp:
	* CADLayer.cpp:
	* DISEntityManager.cpp:
	* Coordinate.cpp:
	* HAnimHumanoid.cpp:
	* LineProperties.cpp:
	* X3DBindableNode.cpp:
	* MetadataInteger.cpp:
	* StaticGroup.cpp:
	* Collision.cpp:
	* Polyline2D.cpp:
	* X3DFontStyleNode.cpp:
	* PickableGroup.cpp:
	* X3DLayerNode.cpp:
	* LoadSensor.cpp:
	* X3DShaderNode.cpp:
	* HAnimDisplacer.cpp:
	* ProgramShader.cpp:
	* ShaderProgram.cpp:
	* TriangleSet.cpp:
	* ArcClose2D.cpp:
	* X3DMaterialNode.cpp:
	* ColorDamper.cpp:
	* X3DLightNode.cpp:
	* CoordinateDouble.cpp:
	* ScalarChaser.cpp:
	* ScreenFontStyle.cpp:
	* ComposedShader.cpp:
	* PixelTexture.cpp:
	* GeoMetadata.cpp:
	* PackagedShader.cpp:
	* TwoSidedMaterial.cpp:
	* X3DMetadataObject.cpp:
	* MovieTexture.cpp:
	* X3DColorNode.cpp:
	* LinePickSensor.cpp:
	* Polypoint2D.cpp:
	* Rectangle2D.cpp:
	* ImageTexture.cpp:
	* GeoLocation.cpp:
	* MultiTexture.cpp:
	* X3DAppearanceNode.cpp:
	* X3DNormalNode.cpp:
	* NurbsPatchSurface.cpp:
	* NurbsSwungSurface.cpp:
	* NurbsSweptSurface.cpp:
	* X3DUrlObject.cpp:
	* X3DScriptNode.cpp:
	* PointPickSensor.cpp:
	* X3DDamperNode.cpp:
	* CADAssembly.cpp:
	* GeoTransform.cpp:
	* X3DChaserNode.cpp:
	* GeoViewpoint.cpp:
	* ContourPolyline2D.cpp:
	* Contact.cpp:
	* PositionDamper.cpp:
	* PositionChaser.cpp:
	* X3DViewportNode.cpp:
	* TriangleSet2D.cpp:
	* Fog.cpp:
	* X3DTextureNode.cpp:
	* X3DGroupingNode.cpp:
	* X3DSoundSourceNode.cpp:
	* DISEntityTypeMapping.cpp:
	* IndexedLineSet.cpp:
	* VolumePickSensor.cpp:
	* TriangleFanSet.cpp:
	* GeoCoordinate.cpp:
	* ElevationGrid.cpp:
	* NavigationInfo.cpp:
	* X3DGeometryNode.cpp:
	* X3DPickSensorNode.cpp:
	* X3DTimeDependentNode.cpp:
	* GeoTouchSensor.cpp:
	* ViewpointGroup.cpp:
	* OrthoViewpoint.cpp:
	* X3DPickableObject.cpp:
	* IndexedFaceSet.cpp:
	* X3DFollowerNode.cpp:
	* NurbsTrimmedSurface.cpp:
	* X3DPrototypeInstance.cpp:
	* KeySensor.cpp:
	* DirectionalLight.cpp:
	* X3DBoundedObject.cpp:
	* TimeTrigger.cpp:
	* CoordinateDamper.cpp:
	* PositionChaser2D.cpp:
	* PositionDamper2D.cpp:
	* BallJoint.cpp:
	* PixelTexture3D.cpp:
	* TextureTransform.cpp:
	* ImageTexture3D.cpp:
	* RigidBody.cpp:
	* X3DTexture2DNode.cpp:
	* IndexedQuadSet.cpp:
	* TriangleStripSet.cpp:
	* TexCoordDamper2D.cpp:
	* X3DCoordinateNode.cpp:
	* PrimitivePickSensor.cpp:
	* EaseInEaseOut.cpp:
	* OrientationDamper.cpp:
	* MotorJoint.cpp:
	* GeoElevationGrid.cpp:
	* X3DViewpointNode.cpp:
	* TextureProperties.cpp:
	* ConeEmitter.cpp:
	* TextureCoordinate.cpp:
	* OrientationChaser.cpp:
	* BooleanFilter.cpp:
	* SliderJoint.cpp:
	* FloatVertexAttribute.cpp:
	* StringSensor.cpp:
	* BooleanToggle.cpp:
	* IndexedTriangleSet.cpp:
	* PointEmitter.cpp:
	* X3DTexture3DNode.cpp:
	* X3DAppearanceChildNode.cpp:
	* NurbsTextureCoordinate.cpp:
	* IntegerTrigger.cpp:
	* GeoProximitySensor.cpp:
	* X3DTriggerNode.cpp:
	* VolumeEmitter.cpp:
	* BooleanTrigger.cpp:
	* ComposedTexture3D.cpp:
	* LocalFog.cpp:
	* Matrix3VertexAttribute.cpp:
	* Matrix4VertexAttribute.cpp:
	* SurfaceEmitter.cpp:
	* TextureTransform3D.cpp:
	* X3DVertexAttributeNode.cpp:
	* ParticleSystem.cpp:
	* X3DNurbsControlCurveNode.cpp:
	* NurbsSurfaceInterpolator.cpp:
	* ColorInterpolator.cpp:
	* BooleanSequencer.cpp:
	* IndexedTriangleFanSet.cpp:
	* X3DSequencerNode.cpp:
	* IntegerSequencer.cpp:
	* PolylineEmitter.cpp:
	* CollisionSpace.cpp:
	* X3DNetworkSensorNode.cpp:
	* UniversalJoint.cpp:
	* TextureCoordinate4D.cpp:
	* MultiTextureTransform.cpp:
	* NurbsPositionInterpolator.cpp:
	* TextureCoordinate3D.cpp:
	* Background.cpp:
	* X3DParametricGeometryNode.cpp:
	* WindPhysicsModel.cpp:
	* ScalarInterpolator.cpp:
	* TouchSensor.cpp:
	* NormalInterpolator.cpp:
	* ExplosionEmitter.cpp:
	* CollidableShape.cpp:
	* MultiTextureCoordinate.cpp:
	* PlaneSensor.cpp:
	* CollisionSensor.cpp:
	* X3DNurbsSurfaceGeometryNode.cpp:
	* X3DInterpolatorNode.cpp:
	* X3DComposedGeometryNode.cpp:
	* IndexedTriangleStripSet.cpp:
	* CollidableOffset.cpp:
	* X3DTextureTransformNode.cpp:
	* SphereSensor.cpp:
	* X3DFogObject.cpp:
	* FogCoordinate.cpp:
	* NurbsOrientationInterpolator.cpp:
	* X3DTextureCoordinateNode.cpp:
	* X3DRigidJointNode.cpp:
	* GeoPositionInterpolator.cpp:
	* X3DGeometricPropertyNode.cpp:
	* PositionInterpolator.cpp:
	* GravityPhysicsModel.cpp:
	* X3DProgrammableShaderObject.cpp:
	* ProximitySensor.cpp:
	* BoundedPhysicsModel.cpp:
	* CylinderSensor.cpp:
	* TransformSensor.cpp:
	* TextureCoordinateGenerator.cpp:
	* RigidBodyCollection.cpp:
	* CollisionCollection.cpp:
	* ImageCubeMapTexture.cpp:
	* PositionInterpolator2D.cpp:
	* CoordinateInterpolator.cpp:
	* TextureTransformMatrix3D.cpp:
	* VisibilitySensor.cpp:
	* SingleAxisHingeJoint.cpp:
	* DoubleAxisHingeJoint.cpp:
	* OrientationInterpolator.cpp:
	* X3DKeyDeviceSensorNode.cpp:
	* SplineScalarInterpolator.cpp:
	* X3DBackgroundNode.cpp:
	* CoordinateInterpolator2D.cpp:
	* X3DDragSensorNode.cpp:
	* TextureBackground.cpp:
	* X3DParticleEmitterNode.cpp:
	* X3DNBodyCollidableNode.cpp:
	* X3DTouchSensorNode.cpp:
	* ComposedCubeMapTexture.cpp:
	* X3DProductStructureChildNode.cpp:
	* SplinePositionInterpolator.cpp:
	* GeneratedCubeMapTexture.cpp:
	* SplinePositionInterpolator2D.cpp:
	* SquadOrientationInterpolator.cpp:
	* X3DEnvironmentTextureNode.cpp:
	* X3DParticlePhysicsModelNode.cpp:
	* X3DNBodyCollisionSpaceNode.cpp:
	* X3DEnvironmentalSensorNode.cpp:
	* X3DPointingDeviceSensorNode.cpp: 

2012-06-18  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* Components.h:
	* H-Anim.h: 

2012-06-18  Holger Seelig  <holger.seelig@yahoo.de>

	* X3DBaseNode.h:
	* X3DObject.cpp:
	* X3DBaseNode.cpp:
	* SbVec3.h:
	* SbVec2.h:
	* SbVec4.h:
	* X3DFieldDefinition.h:
	* SbMatrix3.h:
	* SbMatrix4.h:
	* SbRotation.h:
	* jsX3DArrayField.h:
	* FontStyle.cpp:
	* HAnimJoint.cpp:
	* GeoLOD.cpp:
	* HAnimSegment.cpp:
	* ColorDamper.h:
	* ScalarChaser.h:
	* GeoOrigin.cpp:
	* Extrusion.cpp:
	* ColorDamper.cpp:
	* ScreenFontStyle.cpp:
	* PositionDamper.h:
	* PositionChaser.h:
	* ScalarChaser.cpp:
	* OrthoViewpoint.h:
	* GeoViewpoint.cpp:
	* PositionDamper2D.h:
	* CoordinateDamper.h:
	* PositionChaser2D.h:
	* PositionChaser.cpp:
	* PositionDamper.cpp:
	* TexCoordDamper2D.h:
	* Contact.cpp:
	* OrientationDamper.h:
	* OrientationChaser.h:
	* OrthoViewpoint.cpp:
	* NavigationInfo.cpp:
	* X3DPickSensorNode.cpp:
	* X3DPickableObject.cpp:
	* PositionDamper2D.cpp:
	* TexCoordDamper2D.cpp:
	* CoordinateDamper.cpp:
	* PositionChaser2D.cpp:
	* GeoElevationGrid.cpp:
	* OrientationDamper.cpp:
	* OrientationChaser.cpp:
	* VolumeEmitter.cpp:
	* SurfaceEmitter.cpp:
	* CollisionCollection.cpp:
	* X3DBackgroundNode.cpp: 

2012-06-18  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.md.pc:
	* libtitania-x3d.cproj:
	* Browser.h:
	* BasicTypes:
	* Browser.cpp:
	* X3DObject.h:
	* X3DBaseNode.h:
	* X3DBaseNode.cpp:
	* SFVec3d.h:
	* SFVec4d.h:
	* SFVec3f.h:
	* SFVec4f.h:
	* SFVec2f.h:
	* SFColor.h:
	* SFVec2d.h:
	* ShapeContainer.h:
	* LightContainer.h:
	* ShapeContainer.cpp:
	* SFMatrix3f.h:
	* SFMatrix4f.h:
	* SFMatrix4d.h:
	* SFMatrix3d.h:
	* SFRotation.h:
	* X3DFieldDefinition.h:
	* SFColorRGBA.h:
	* ArrayFields.h:
	* X3DExecutionContext.h:
	* SbMatrix4.h:
	* ArrayFields.cpp:
	* X3DFieldDefinition.cpp:
	* ArrayTypes.h:
	* ArrayTypes.cpp:
	* X3DShapeNode.cpp:
	* X3DLayerNode.h:
	* X3DBoundedObject.h:
	* X3DGeometryNode.h:
	* X3DViewpointNode.h:
	* ProximitySensor.cpp:
	* VisibilitySensor.cpp: 

2012-06-18  Holger Seelig  <holger.seelig@yahoo.de>

	* FPS.h:
	* libtitania-x3d.cproj:
	* BasicTypes:
	* BrowserApplication.h:
	* BrowserApplication.cpp: 

2012-06-18  Holger Seelig  <holger.seelig@yahoo.de>

	* X3D.h:
	* X3D.cpp:
	* FPS.h:
	* Hit.h:
	* Cast.h:
	* Math.h:
	* Time.h:
	* FPS.cpp:
	* World.h:
	* Error.h:
	* Route.h:
	* Mouse.h:
	* Scene.h:
	* RegEx.h:
	* Proto.h:
	* Math.cpp:
	* RefPtr.h:
	* Router.h:
	* Parser.h:
	* Viewer.h:
	* Fields.h:
	* Time.cpp:
	* geturl.h:
	* Route.cpp:
	* Scene.cpp:
	* RegEx.cpp:
	* Mouse.cpp:
	* Proto.cpp:
	* Browser.h:
	* Renderer.h:
	* strfsize.h:
	* Parser.cpp:
	* X3DProto.h:
	* Router.cpp:
	* Viewer.cpp:
	* X3DField.h:
	* HitArray.h:
	* geturl.cpp:
	* Browser.cpp:
	* NodeIndex.h:
	* X3DObject.h:
	* Generator.h:
	* Renderer.cpp:
	* MotionBlur.h:
	* uncompress.h:
	* RouteArray.h:
	* strfsize.cpp:
	* X3DProto.cpp:
	* JavaScript.h:
	* Components.h:
	* ProtoArray.h:
	* SbVec3.h:
	* Generator.cpp:
	* SbVec2.h:
	* SbVec4.h:
	* NodeIndex.cpp:
	* X3DBaseNode.h:
	* SbLine.h:
	* DrawingArea.h:
	* ExternProto.h:
	* ProfileInfo.h:
	* ImportedNode.h:
	* SbVec2f.h:
	* uncompress.cpp:
	* X3DConstants.h:
	* JavaScript.cpp:
	* ExportedNode.h:
	* SbVec4d.h:
	* SbVec3d.h:
	* SbPlane.h:
	* SbVec4f.h:
	* SbVec3f.h:
	* SbVec2d.h:
	* SbBox3f.h:
	* SbColor.h:
	* NodeTypeArray.h:
	* FieldCallback.h:
	* SFBool.h:
	* ProfileInfo.cpp:
	* ExternProto.cpp:
	* SFTime.h:
	* X3DBaseNode.cpp:
	* SbLine.cpp:
	* X3DArrayField.h:
	* DrawingArea.cpp:
	* ComponentInfo.h:
	* SFNode.h:
	* MFNode.h:
	* SbPlane.cpp:
	* SbMatrix4.h:
	* SFVec3d.h:
	* DIS.h:
	* SbColor.cpp:
	* SFVec2d.h:
	* LightContainer.h:
	* SFImage.h:
	* SbMatrix3.h:
	* SbBox3f.cpp:
	* SFColor.h:
	* SFFloat.h:
	* SFVec4d.h:
	* GLConfigUtil.cpp:
	* SFVec4f.h:
	* SFVec3f.h:
	* ShapeContainer.h:
	* MFInt32.h:
	* SFInt32.h:
	* SFVec2f.h:
	* Core.h:
	* Text.h:
	* SbMatrix4d.h:
	* SbMatrix4f.h:
	* SFDouble.h:
	* SbLinear.cpp:
	* MFNode.cpp:
	* SbRotation.h:
	* SbMatrix3d.h:
	* GarbageColector.h:
	* Time.h:
	* SFNode.cpp:
	* ComponentInfo.cpp:
	* SFString.h:
	* SbMatrix3f.h:
	* SbRotationf.h:
	* ExternProtoArray.h:
	* SbRotationd.h:
	* ProfileInfoArray.h:
	* HAnim.h:
	* ExecutionContext.h:
	* NURBS.h:
	* Sound.h:
	* ShapeContainer.cpp:
	* SbColorRGBA.h:
	* Shape.h:
	* GarbageColector.cpp:
	* SupportedProfiles.h:
	* SbViewVolume.h:
	* SbQuaternion.h:
	* SFRotation.h:
	* SFMatrix3f.h:
	* Layout.h:
	* SFMatrix4f.h:
	* SFMatrix4d.h:
	* SFMatrix3d.h:
	* ExportedNodesArray.h:
	* SbColorRGBA.cpp:
	* Shaders.h:
	* ArrayFields.h:
	* Picking.h:
	* FieldDefinitionSet.h:
	* ExecutionContext.cpp:
	* jsfield.h:
	* X3DFieldDefinition.h:
	* FieldCallbackArray.h:
	* ComponentInfoArray.h:
	* SFColorRGBA.h:
	* BrowserApplication.h:
	* ImportedNodesArray.h:
	* Grouping.h:
	* X3DExecutionContext.h:
	* LightContainerArray.h:
	* jsstring.h:
	* Lighting.h:
	* Layering.h:
	* SupportedComponents.h:
	* jsFields.h:
	* SbViewVolume.cpp:
	* SupportedProfiles.cpp:
	* Text.h:
	* jsGlobals.h:
	* jsBrowser.h:
	* jsfield.cpp:
	* FieldDefinitionArray.h:
	* BrowserApplication.cpp:
	* Texturing.h:
	* Scripting.h:
	* Followers.h:
	* X3DFieldDefinition.cpp:
	* Rendering.h:
	* ArrayFields.cpp:
	* jsX3DScene.h:
	* Geospatial.h:
	* Geometry2D.h:
	* Navigation.h:
	* Networking.h:
	* Geometry3D.h:
	* X3DExecutionContext.cpp:
	* jsstring.cpp:
	* jsX3DField.h:
	* SupportedComponents.cpp:
	* jsBrowser.cpp:
	* jsGlobals.cpp:
	* jsX3DObject.h:
	* Texturing3D.h:
	* CADGeometry.h:
	* Text.cpp:
	* Sound.h:
	* Shape.h:
	* X3DNode.h:
	* Image.h:
	* Array.h:
	* jsX3DScene.cpp:
	* jsX3DField.cpp:
	* Sound.cpp:
	* Shape.cpp:
	* SignalPdu.h:
	* jsX3DObject.cpp:
	* Layout.h:
	* Interpolation.h:
	* LOD.h:
	* WorldInfo.h:
	* Group.h:
	* FontStyle.h:
	* X3DNode.cpp:
	* Layer.h:
	* Box.h:
	* Material.h:
	* Image.cpp:
	* NurbsSet.h:
	* EventUtilities.h:
	* jsMFBool.h:
	* ParticleSystems.h:
	* jsMFNode.h:
	* jsMFTime.h:
	* Layout.cpp:
	* AudioClip.h:
	* Cone.h:
	* ReceiverPdu.h:
	* Switch.h:
	* jsX3DArrayField.h:
	* Contour2D.h:
	* KeyDeviceSensor.h:
	* SignalPdu.cpp:
	* jsSFNode.h:
	* TimeSensor.h:
	* Color.h:
	* HAnimSite.h:
	* NurbsSet.cpp:
	* Normal.h:
	* NurbsCurve.h:
	* FontStyle.cpp:
	* jsMFVec3d.h:
	* RigidBodyPhysics.h:
	* LOD.cpp:
	* Group.cpp:
	* MetadataSet.h:
	* WorldInfo.cpp:
	* Script.h:
	* X3DInfoNode.h:
	* Layer.cpp:
	* jsSFVec3f.h:
	* Arc2D.h:
	* CubeMapTexturing.h:
	* jsMFVec3f.h:
	* HAnimJoint.h:
	* Box.cpp:
	* jsSFVec3d.h:
	* Appearance.h:
	* jsMFImage.h:
	* jsSFColor.h:
	* jsMFFloat.h:
	* jsMFVec2d.h:
	* jsSFVec2f.h:
	* jsMFInt32.h:
	* Material.cpp:
	* jsMFColor.h:
	* jsSFVec4f.h:
	* jsSFVec4d.h:
	* jsMFVec2f.h:
	* jsSFImage.h:
	* jsMFVec4d.h:
	* jsMFVec4f.h:
	* jsSFVec2d.h:
	* jsMFBool.cpp:
	* Sphere.h:
	* jsSFNode.cpp:
	* Disk2D.h:
	* LayerSet.h:
	* Viewport.h:
	* jsMFDouble.h:
	* Cone.cpp:
	* Anchor.h:
	* ArrayTypes.h:
	* Inline.h:
	* MetadataBool.h:
	* X3DChildNode.h:
	* GeoLOD.h:
	* jsMFTime.cpp:
	* HAnimSite.cpp:
	* jsMFString.h:
	* jsMFNode.cpp:
	* ReceiverPdu.cpp:
	* Switch.cpp:
	* TimeSensor.cpp:
	* LineSet.h:
	* Contour2D.cpp:
	* AudioClip.cpp:
	* Color.cpp:
	* jsSFVec2d.cpp:
	* jsSFVec4d.cpp:
	* jsMFVec4f.cpp:
	* ShaderPart.h:
	* TransmitterPdu.h:
	* jsMFImage.cpp:
	* EspduTransform.h:
	* jsSFVec4f.cpp:
	* Appearance.cpp:
	* HAnimSegment.h:
	* HAnimJoint.cpp:
	* MetadataFloat.h:
	* Transform.h:
	* jsMFFloat.cpp:
	* X3DShapeNode.h:
	* jsMFVec4d.cpp:
	* jsMFVec2f.cpp:
	* jsMFColor.cpp:
	* jsMFVec2d.cpp:
	* Normal.cpp:
	* PointSet.h:
	* X3DInfoNode.cpp:
	* MetadataSet.cpp:
	* Script.cpp:
	* jsSFColor.cpp:
	* jsProfileInfoArray.h:
	* ScreenGroup.h:
	* jsSFImage.cpp:
	* NurbsCurve.cpp:
	* LayoutGroup.h:
	* NurbsCurve2D.h:
	* X3DSensorNode.h:
	* LayoutLayer.h:
	* X3DSoundNode.h:
	* jsMFVec3f.cpp:
	* jsSFVec3d.cpp:
	* jsSFVec2f.cpp:
	* jsMFVec3d.cpp:
	* SpotLight.h:
	* jsMFInt32.cpp:
	* jsSFVec3f.cpp:
	* Arc2D.cpp:
	* Anchor.cpp:
	* Viewport.cpp:
	* QuadSet.h:
	* CADFace.h:
	* Inline.cpp:
	* PointLight.h:
	* ArrayTypes.cpp:
	* LayerSet.cpp:
	* jsMFRotation.h:
	* ColorRGBA.h:
	* jsMFMatrix3f.h:
	* Circle2D.h:
	* jsMFMatrix3d.h:
	* jsSFMatrix4d.h:
	* jsSFMatrix4f.h:
	* Sphere.cpp:
	* jsSFMatrix3f.h:
	* GeoLOD.cpp:
	* CADPart.h:
	* jsMFMatrix4f.h:
	* HAnimHumanoid.h:
	* MetadataDouble.h:
	* Cylinder.h:
	* jsVrmlMatrix.h:
	* MetadataBool.cpp:
	* MetadataString.h:
	* LineSet.cpp:
	* jsMFMatrix4d.h:
	* ClipPlane.h:
	* jsMFString.cpp:
	* EnvironmentalSensor.h:
	* jsSFMatrix3d.h:
	* jsSFRotation.h:
	* jsMFDouble.cpp:
	* X3DChildNode.cpp:
	* Disk2D.cpp:
	* X3DSensorNode.cpp:
	* FillProperties.h:
	* MetadataInteger.h:
	* PointingDeviceSensor.h:
	* X3DBindableNode.h:
	* LayoutGroup.cpp:
	* X3DLayoutNode.h:
	* LayoutLayer.cpp:
	* jsComponentInfoArray.h:
	* GeoOrigin.h:
	* ScreenGroup.cpp:
	* X3DSoundNode.cpp:
	* StaticGroup.h:
	* Transform.cpp:
	* Collision.h:
	* ShaderPart.cpp:
	* jsX3DFieldDefinition.h:
	* jsProfileInfoArray.cpp:
	* Coordinate.h:
	* Viewpoint.h:
	* PointSet.cpp:
	* HAnimSegment.cpp:
	* Billboard.h:
	* HAnimDisplacer.h:
	* Extrusion.h:
	* SpotLight.cpp:
	* NurbsCurve2D.cpp:
	* X3DShapeNode.cpp:
	* MetadataFloat.cpp:
	* jsMFColorRGBA.h:
	* LineProperties.h:
	* EnvironmentalEffects.h:
	* DISEntityManager.h:
	* EspduTransform.cpp:
	* jsSFColorRGBA.h:
	* TransmitterPdu.cpp:
	* CADLayer.h:
	* X3DFontStyleNode.h:
	* MetadataDouble.cpp:
	* Circle2D.cpp:
	* PickableGroup.h:
	* X3DMaterialNode.h:
	* X3DShaderNode.h:
	* ProgramShader.h:
	* ShaderProgram.h:
	* PointLight.cpp:
	* Polyline2D.h:
	* ArcClose2D.h:
	* ColorDamper.h:
	* X3DLightNode.h:
	* X3DLayerNode.h:
	* jsMFMatrix3d.cpp:
	* QuadSet.cpp:
	* Cylinder.cpp:
	* jsMFMatrix3f.cpp:
	* ColorRGBA.cpp:
	* jsSFMatrix4d.cpp:
	* CADFace.cpp:
	* jsSFMatrix4f.cpp:
	* jsSFMatrix3d.cpp:
	* jsMFMatrix4f.cpp:
	* HAnimHumanoid.cpp:
	* jsSFMatrix3f.cpp:
	* jsMFMatrix4d.cpp:
	* jsMFRotation.cpp:
	* jsX3DExecutionContext.h:
	* LoadSensor.h:
	* jsSFRotation.cpp:
	* jsVrmlMatrix.cpp:
	* MetadataString.cpp:
	* CADPart.cpp:
	* TriangleSet.h:
	* ClipPlane.cpp:
	* ScreenFontStyle.h:
	* GeoLocation.h:
	* HAnimDisplacer.cpp:
	* GeoMetadata.h:
	* PackagedShader.h:
	* GeoOrigin.cpp:
	* Viewpoint.cpp:
	* Billboard.cpp:
	* ComposedShader.h:
	* ScalarChaser.h:
	* StaticGroup.cpp:
	* Collision.cpp:
	* X3DColorNode.h:
	* FillProperties.cpp:
	* Polypoint2D.h:
	* jsComponentInfoArray.cpp:
	* CADLayer.cpp:
	* LineProperties.cpp:
	* TwoSidedMaterial.h:
	* Coordinate.cpp:
	* jsX3DFieldDefinition.cpp:
	* jsFieldDefinitionArray.h:
	* X3DLayoutNode.cpp:
	* CoordinateDouble.h:
	* DISEntityManager.cpp:
	* LinePickSensor.h:
	* Rectangle2D.h:
	* Extrusion.cpp:
	* PixelTexture.h:
	* X3DBindableNode.cpp:
	* MovieTexture.h:
	* jsMFColorRGBA.cpp:
	* jsSFColorRGBA.cpp:
	* ImageTexture.h:
	* MultiTexture.h:
	* MetadataInteger.cpp:
	* X3DMetadataObject.h:
	* X3DUrlObject.h:
	* TriangleSet.cpp:
	* X3DAppearanceNode.h:
	* ArcClose2D.cpp:
	* X3DNormalNode.h:
	* ShaderProgram.cpp:
	* LoadSensor.cpp:
	* CADAssembly.h:
	* X3DLightNode.cpp:
	* ProgramShader.cpp:
	* X3DMaterialNode.cpp:
	* PickableGroup.cpp:
	* PointPickSensor.h:
	* X3DFontStyleNode.cpp:
	* ContourPolyline2D.h:
	* NurbsSwungSurface.h:
	* NurbsSweptSurface.h:
	* Polyline2D.cpp:
	* X3DShaderNode.cpp:
	* X3DLayerNode.cpp:
	* NurbsPatchSurface.h:
	* jsX3DExecutionContext.cpp:
	* GeoTransform.h:
	* X3DDamperNode.h:
	* X3DScriptNode.h:
	* ColorDamper.cpp:
	* X3DChaserNode.h:
	* GeoViewpoint.h:
	* IndexedLineSet.h:
	* ImageTexture.cpp:
	* TriangleFanSet.h:
	* PixelTexture.cpp:
	* ScalarChaser.cpp:
	* TriangleSet2D.h:
	* PositionChaser.h:
	* Polypoint2D.cpp:
	* X3DColorNode.cpp:
	* Contact.h:
	* CoordinateDouble.cpp:
	* PackagedShader.cpp:
	* X3DViewportNode.h:
	* X3DSoundSourceNode.h:
	* ComposedShader.cpp:
	* X3DGroupingNode.h:
	* Rectangle2D.cpp:
	* VolumePickSensor.h:
	* X3DMetadataObject.cpp:
	* ElevationGrid.h:
	* jsFieldDefinitionArray.cpp:
	* LinePickSensor.cpp:
	* TwoSidedMaterial.cpp:
	* MovieTexture.cpp:
	* GeoLocation.cpp:
	* Fog.h:
	* DISEntityTypeMapping.h:
	* X3DTextureNode.h:
	* ScreenFontStyle.cpp:
	* PositionDamper.h:
	* GeoCoordinate.h:
	* GeoMetadata.cpp:
	* MultiTexture.cpp:
	* KeySensor.h:
	* X3DUrlObject.cpp:
	* X3DNormalNode.cpp:
	* OrthoViewpoint.h:
	* IndexedFaceSet.h:
	* ContourPolyline2D.cpp:
	* X3DGeometryNode.h:
	* NurbsTrimmedSurface.h:
	* NurbsSweptSurface.cpp:
	* X3DPickSensorNode.h:
	* PointPickSensor.cpp:
	* X3DBoundedObject.h:
	* GeoTouchSensor.h:
	* ViewpointGroup.h:
	* X3DFollowerNode.h:
	* X3DPickableObject.h:
	* NurbsSwungSurface.cpp:
	* NurbsPatchSurface.cpp:
	* CADAssembly.cpp:
	* NavigationInfo.h:
	* GeoTransform.cpp:
	* DirectionalLight.h:
	* X3DScriptNode.cpp:
	* X3DChaserNode.cpp:
	* X3DTimeDependentNode.h:
	* X3DPrototypeInstance.h:
	* X3DDamperNode.cpp:
	* X3DAppearanceNode.cpp:
	* GeoViewpoint.cpp:
	* TextureTransform.h:
	* TriangleFanSet.cpp:
	* GeoCoordinate.cpp:
	* X3DSoundSourceNode.cpp:
	* IndexedLineSet.cpp:
	* TexCoordDamper2D.h:
	* X3DViewportNode.cpp:
	* TriangleStripSet.h:
	* TimeTrigger.h:
	* CoordinateDamper.h:
	* X3DTexture2DNode.h:
	* Contact.cpp:
	* DISEntityTypeMapping.cpp:
	* PositionDamper2D.h:
	* ElevationGrid.cpp:
	* PositionChaser.cpp:
	* ImageTexture3D.h:
	* PixelTexture3D.h:
	* PositionDamper.cpp:
	* TriangleSet2D.cpp:
	* RigidBody.h:
	* X3DTextureNode.cpp:
	* X3DGroupingNode.cpp:
	* VolumePickSensor.cpp:
	* BallJoint.h:
	* PositionChaser2D.h:
	* IndexedQuadSet.h:
	* Fog.cpp:
	* ConeEmitter.h:
	* NavigationInfo.cpp:
	* IndexedFaceSet.cpp:
	* X3DBoundedObject.cpp:
	* OrthoViewpoint.cpp:
	* EaseInEaseOut.h:
	* DirectionalLight.cpp:
	* X3DViewpointNode.h:
	* ViewpointGroup.cpp:
	* OrientationDamper.h:
	* PrimitivePickSensor.h:
	* OrientationChaser.h:
	* X3DPickSensorNode.cpp:
	* X3DPickableObject.cpp:
	* X3DCoordinateNode.h:
	* MotorJoint.h:
	* X3DGeometryNode.cpp:
	* X3DTimeDependentNode.cpp:
	* GeoTouchSensor.cpp:
	* TextureCoordinate.h:
	* TextureProperties.h:
	* NurbsTrimmedSurface.cpp:
	* X3DPrototypeInstance.cpp:
	* GeoElevationGrid.h:
	* KeySensor.cpp:
	* X3DFollowerNode.cpp:
	* CoordinateDamper.cpp:
	* X3DTexture2DNode.cpp:
	* PositionChaser2D.cpp:
	* BooleanFilter.h:
	* BooleanToggle.h:
	* X3DAppearanceChildNode.h:
	* StringSensor.h:
	* TexCoordDamper2D.cpp:
	* TextureTransform.cpp:
	* IndexedQuadSet.cpp:
	* TimeTrigger.cpp:
	* PositionDamper2D.cpp:
	* NurbsTextureCoordinate.h:
	* BallJoint.cpp:
	* RigidBody.cpp:
	* TriangleStripSet.cpp:
	* PixelTexture3D.cpp:
	* X3DTexture3DNode.h:
	* ImageTexture3D.cpp:
	* PointEmitter.h:
	* IndexedTriangleSet.h:
	* FloatVertexAttribute.h:
	* SliderJoint.h:
	* OrientationChaser.cpp:
	* GeoProximitySensor.h:
	* PrimitivePickSensor.cpp:
	* LocalFog.h:
	* GeoElevationGrid.cpp:
	* EaseInEaseOut.cpp:
	* TextureProperties.cpp:
	* TextureCoordinate.cpp:
	* X3DCoordinateNode.cpp:
	* X3DViewpointNode.cpp:
	* MotorJoint.cpp:
	* IntegerTrigger.h:
	* BooleanTrigger.h:
	* VolumeEmitter.h:
	* OrientationDamper.cpp:
	* ComposedTexture3D.h:
	* X3DTriggerNode.h:
	* ConeEmitter.cpp:
	* NurbsTextureCoordinate.cpp:
	* X3DAppearanceChildNode.cpp:
	* IndexedTriangleSet.cpp:
	* BooleanFilter.cpp:
	* TextureTransform3D.h:
	* X3DTexture3DNode.cpp:
	* BooleanToggle.cpp:
	* X3DNurbsControlCurveNode.h:
	* NurbsSurfaceInterpolator.h:
	* FloatVertexAttribute.cpp:
	* Matrix4VertexAttribute.h:
	* Matrix3VertexAttribute.h:
	* X3DVertexAttributeNode.h:
	* PointEmitter.cpp:
	* ParticleSystem.h:
	* SurfaceEmitter.h:
	* SliderJoint.cpp:
	* StringSensor.cpp:
	* VolumeEmitter.cpp:
	* PolylineEmitter.h:
	* ComposedTexture3D.cpp:
	* MultiTextureTransform.h:
	* BooleanSequencer.h:
	* X3DTriggerNode.cpp:
	* BooleanTrigger.cpp:
	* GeoProximitySensor.cpp:
	* UniversalJoint.h:
	* CollisionSpace.h:
	* NurbsPositionInterpolator.h:
	* X3DParametricGeometryNode.h:
	* IndexedTriangleFanSet.h:
	* TextureCoordinate4D.h:
	* ColorInterpolator.h:
	* X3DNetworkSensorNode.h:
	* TextureCoordinate3D.h:
	* IntegerSequencer.h:
	* X3DSequencerNode.h:
	* IntegerTrigger.cpp:
	* Background.h:
	* LocalFog.cpp:
	* CollidableShape.h:
	* ParticleSystem.cpp:
	* ScalarInterpolator.h:
	* WindPhysicsModel.h:
	* MultiTextureCoordinate.h:
	* PlaneSensor.h:
	* TouchSensor.h:
	* CollisionSensor.h:
	* NormalInterpolator.h:
	* TextureTransform3D.cpp:
	* ExplosionEmitter.h:
	* Matrix3VertexAttribute.cpp:
	* X3DVertexAttributeNode.cpp:
	* NurbsSurfaceInterpolator.cpp:
	* X3DNurbsControlCurveNode.cpp:
	* SurfaceEmitter.cpp:
	* Matrix4VertexAttribute.cpp:
	* CollisionSpace.cpp:
	* NurbsPositionInterpolator.cpp:
	* CollidableOffset.h:
	* UniversalJoint.cpp:
	* Background.cpp:
	* X3DParametricGeometryNode.cpp:
	* IndexedTriangleStripSet.h:
	* ColorInterpolator.cpp:
	* SphereSensor.h:
	* X3DNurbsSurfaceGeometryNode.h:
	* X3DComposedGeometryNode.h:
	* X3DInterpolatorNode.h:
	* IndexedTriangleFanSet.cpp:
	* X3DNetworkSensorNode.cpp:
	* TextureCoordinate3D.cpp:
	* X3DFogObject.h:
	* PolylineEmitter.cpp:
	* X3DSequencerNode.cpp:
	* IntegerSequencer.cpp:
	* BooleanSequencer.cpp:
	* TextureCoordinate4D.cpp:
	* MultiTextureTransform.cpp:
	* X3DTextureTransformNode.h:
	* CollidableShape.cpp:
	* X3DRigidJointNode.h:
	* MultiTextureCoordinate.cpp:
	* CollisionSensor.cpp:
	* NormalInterpolator.cpp:
	* ExplosionEmitter.cpp:
	* X3DGeometricPropertyNode.h:
	* NurbsOrientationInterpolator.h:
	* PositionInterpolator.h:
	* WindPhysicsModel.cpp:
	* PlaneSensor.cpp:
	* X3DTextureCoordinateNode.h:
	* ScalarInterpolator.cpp:
	* GeoPositionInterpolator.h:
	* TouchSensor.cpp:
	* FogCoordinate.h:
	* CylinderSensor.h:
	* X3DFogObject.cpp:
	* IndexedTriangleStripSet.cpp:
	* X3DNurbsSurfaceGeometryNode.cpp:
	* X3DComposedGeometryNode.cpp:
	* X3DInterpolatorNode.cpp:
	* X3DTextureTransformNode.cpp:
	* X3DProgrammableShaderObject.h:
	* CollidableOffset.cpp:
	* SphereSensor.cpp:
	* ProximitySensor.h:
	* TransformSensor.h:
	* GravityPhysicsModel.h:
	* BoundedPhysicsModel.h:
	* GeoPositionInterpolator.cpp:
	* CollisionCollection.h:
	* TextureCoordinateGenerator.h:
	* X3DRigidJointNode.cpp:
	* X3DTextureCoordinateNode.cpp:
	* ImageCubeMapTexture.h:
	* RigidBodyCollection.h:
	* FogCoordinate.cpp:
	* X3DGeometricPropertyNode.cpp:
	* TextureTransformMatrix3D.h:
	* VisibilitySensor.h:
	* PositionInterpolator.cpp:
	* PositionInterpolator2D.h:
	* CoordinateInterpolator.h:
	* NurbsOrientationInterpolator.cpp:
	* X3DProgrammableShaderObject.cpp:
	* DoubleAxisHingeJoint.h:
	* ProximitySensor.cpp:
	* TransformSensor.cpp:
	* BoundedPhysicsModel.cpp:
	* GravityPhysicsModel.cpp:
	* OrientationInterpolator.h:
	* SingleAxisHingeJoint.h:
	* CylinderSensor.cpp:
	* CollisionCollection.cpp:
	* TextureCoordinateGenerator.cpp:
	* RigidBodyCollection.cpp:
	* X3DKeyDeviceSensorNode.h:
	* X3DBackgroundNode.h:
	* X3DParticleEmitterNode.h:
	* CoordinateInterpolator2D.h:
	* SplineScalarInterpolator.h:
	* TextureBackground.h:
	* X3DDragSensorNode.h:
	* CoordinateInterpolator.cpp:
	* PositionInterpolator2D.cpp:
	* TextureTransformMatrix3D.cpp:
	* VisibilitySensor.cpp:
	* ImageCubeMapTexture.cpp:
	* X3DTouchSensorNode.h:
	* SingleAxisHingeJoint.cpp:
	* X3DNBodyCollidableNode.h:
	* ComposedCubeMapTexture.h:
	* OrientationInterpolator.cpp:
	* DoubleAxisHingeJoint.cpp:
	* SplinePositionInterpolator.h:
	* X3DProductStructureChildNode.h:
	* X3DKeyDeviceSensorNode.cpp:
	* GeneratedCubeMapTexture.h:
	* X3DBackgroundNode.cpp:
	* X3DParticleEmitterNode.cpp:
	* CoordinateInterpolator2D.cpp:
	* X3DDragSensorNode.cpp:
	* SplineScalarInterpolator.cpp:
	* TextureBackground.cpp:
	* ComposedCubeMapTexture.cpp:
	* X3DTouchSensorNode.cpp:
	* X3DNBodyCollidableNode.cpp:
	* SquadOrientationInterpolator.h:
	* X3DEnvironmentTextureNode.h:
	* SplinePositionInterpolator2D.h:
	* SplinePositionInterpolator.cpp:
	* X3DProductStructureChildNode.cpp:
	* GeneratedCubeMapTexture.cpp:
	* X3DParticlePhysicsModelNode.h:
	* X3DNBodyCollisionSpaceNode.h:
	* X3DEnvironmentTextureNode.cpp:
	* SplinePositionInterpolator2D.cpp:
	* SquadOrientationInterpolator.cpp:
	* X3DParticlePhysicsModelNode.cpp:
	* X3DNBodyCollisionSpaceNode.cpp:
	* X3DEnvironmentalSensorNode.h:
	* X3DPointingDeviceSensorNode.h:
	* X3DEnvironmentalSensorNode.cpp:
	* X3DPointingDeviceSensorNode.cpp: 

2012-06-16  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj: 

2012-06-16  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* X3DBrowser.h:
	* X3DBrowser.cpp:
	* ArrayTypes.h:
	* ArrayTypes.cpp: 

2012-06-15  Holger Seelig  <holger.seelig@yahoo.de>

	* FPS.h:
	* World.h:
	* FPS.cpp:
	* libtitania-x3d.cproj:
	* Browser.h:
	* Proto.cpp:
	* Route.cpp:
	* Viewer.cpp:
	* Browser.cpp:
	* ProfileInfo.cpp:
	* ExternProto.cpp:
	* X3DBaseNode.cpp:
	* X3DFieldDefinition.cpp:
	* BrowserApplication.cpp:
	* X3DExecutionContext.cpp:
	* TimeSensor.cpp:
	* Inline.cpp:
	* LayerSet.cpp:
	* Extrusion.cpp:
	* X3DLayerNode.cpp:
	* PixelTexture.cpp:
	* ImageTexture.cpp:
	* X3DPrototypeInstance.cpp:
	* IndexedFaceSet.cpp:
	* X3DGeometryNode.cpp:
	* X3DTexture2DNode.cpp:
	* Background.cpp:
	* ProximitySensor.cpp:
	* VisibilitySensor.cpp: 

2012-06-15  Holger Seelig  <holger.seelig@yahoo.de>

	* Math.h:
	* RefPtr.h:
	* libtitania-x3d.cproj:
	* Proto.cpp:
	* Scene.cpp:
	* Route.cpp:
	* Parser.cpp:
	* Generator.h:
	* Browser.cpp:
	* X3DObject.h:
	* X3DBaseNode.h:
	* Generator.cpp:
	* X3DObject.cpp:
	* X3DBaseNode.cpp:
	* MFNode.h:
	* ExternProto.cpp:
	* ProfileInfo.cpp:
	* SbMatrix3.h:
	* MFInt32.h:
	* ComponentInfo.cpp:
	* MFNode.cpp:
	* X3DFieldDefinition.h:
	* X3DFieldDefinition.cpp:
	* Array.h:
	* Image.h:
	* jsX3DArrayField.h:
	* ArrayTypes.h:
	* ArrayTypes.cpp: 

2012-06-15  Holger Seelig  <holger.seelig@yahoo.de>

Code clean up
MetadataBool added to Core

	* config.h:
	* X3D.h:
	* Hit.h:
	* FPS.h:
	* Math.h:
	* Cast.h:
	* Time.h:
	* Mouse.h:
	* Scene.h:
	* Route.h:
	* RegEx.h:
	* Proto.h:
	* FPS.cpp:
	* Error.h:
	* Parser.h:
	* geturl.h:
	* Fields.h:
	* Router.h:
	* RefPtr.h:
	* Viewer.h:
	* Browser.h:
	* Parser.cpp:
	* HitArray.h:
	* Viewer.cpp:
	* geturl.cpp:
	* X3DField.h:
	* X3DProto.h:
	* strfsize.h:
	* Renderer.h:
	* X3DObject.h:
	* NodeIndex.h:
	* Generator.h:
	* JavaScript.h:
	* Components.h:
	* RouteArray.h:
	* MotionBlur.h:
	* uncompress.h:
	* ProtoArray.h:
	* Renderer.cpp:
	* SbVec2.h:
	* NodeIndex.cpp:
	* Generator.cpp:
	* DrawingArea.h:
	* X3DBaseNode.h:
	* SbVec4.h:
	* SbLine.h:
	* ProfileInfo.h:
	* ExternProto.h:
	* SbVec3.h:
	* uncompress.cpp:
	* SbVec4d.h:
	* SbVec2d.h:
	* SbBox3f.h:
	* ExportedNode.h:
	* SbVec3d.h:
	* SbVec3f.h:
	* SbPlane.h:
	* ImportedNode.h:
	* X3DConstants.h:
	* SbVec4f.h:
	* SbVec2f.h:
	* JavaScript.cpp:
	* SbColor.h:
	* FieldCallback.h:
	* SFBool.h:
	* DrawingArea.cpp:
	* X3DBaseNode.cpp:
	* ExternProto.cpp:
	* MFNode.h:
	* X3DArrayField.h:
	* SbLine.cpp:
	* SFNode.h:
	* ComponentInfo.h:
	* SFTime.h:
	* NodeTypeArray.h:
	* SFInt32.h:
	* LightContainer.h:
	* ShapeContainer.h:
	* DIS.h:
	* SbMatrix3.h:
	* SbColor.cpp:
	* SFVec4f.h:
	* GLConfigUtil.cpp:
	* SFColor.h:
	* MFInt32.h:
	* SFImage.h:
	* SbBox3f.cpp:
	* SFVec3f.h:
	* SbMatrix4.h:
	* SbPlane.cpp:
	* SFVec2d.h:
	* SFVec3d.h:
	* SFFloat.h:
	* SFVec2f.h:
	* SFVec4d.h:
	* GarbageColector.h:
	* SbMatrix3d.h:
	* SbMatrix3f.h:
	* SbRotation.h:
	* SbLinear.cpp:
	* SFDouble.h:
	* SbMatrix4f.h:
	* SbMatrix4d.h:
	* Text.h:
	* Core.h:
	* Time.h:
	* SFString.h:
	* ProfileInfoArray.h:
	* Sound.h:
	* NURBS.h:
	* ExternProtoArray.h:
	* SbRotationf.h:
	* ShapeContainer.cpp:
	* SbColorRGBA.h:
	* SbRotationd.h:
	* HAnim.h:
	* ExecutionContext.h:
	* Shape.h:
	* SFMatrix4f.h:
	* SFMatrix3d.h:
	* SFRotation.h:
	* Layout.h:
	* SbQuaternion.h:
	* SupportedProfiles.h:
	* SbViewVolume.h:
	* SFMatrix4d.h:
	* SFMatrix3f.h:
	* ExportedNodesArray.h:
	* jsfield.h:
	* ExecutionContext.cpp:
	* ImportedNodesArray.h:
	* Shaders.h:
	* FieldCallbackArray.h:
	* Picking.h:
	* FieldDefinitionSet.h:
	* ComponentInfoArray.h:
	* X3DFieldDefinition.h:
	* SbColorRGBA.cpp:
	* BrowserApplication.h:
	* SFColorRGBA.h:
	* ArrayFields.h:
	* jsstring.h:
	* Layering.h:
	* SupportedComponents.h:
	* SbViewVolume.cpp:
	* LightContainerArray.h:
	* Grouping.h:
	* jsFields.h:
	* Lighting.h:
	* X3DExecutionContext.h:
	* SupportedProfiles.cpp:
	* Rendering.h:
	* FieldDefinitionArray.h:
	* Texturing.h:
	* Followers.h:
	* Scripting.h:
	* jsGlobals.h:
	* jsBrowser.h:
	* BrowserApplication.cpp:
	* Text.h:
	* Networking.h:
	* jsstring.cpp:
	* Geospatial.h:
	* Geometry2D.h:
	* Geometry3D.h:
	* Navigation.h:
	* SupportedComponents.cpp:
	* X3DExecutionContext.cpp:
	* jsX3DScene.h:
	* jsX3DField.h:
	* CADGeometry.h:
	* Shape.h:
	* Sound.h:
	* jsBrowser.cpp:
	* jsX3DObject.h:
	* Texturing3D.h:
	* jsGlobals.cpp:
	* jsX3DScene.cpp:
	* Array.h:
	* Image.h:
	* X3DNode.h:
	* Interpolation.h:
	* Layout.h:
	* SignalPdu.h:
	* Layer.h:
	* Box.h:
	* Group.h:
	* LOD.h:
	* WorldInfo.h:
	* NurbsSet.h:
	* FontStyle.h:
	* EventUtilities.h:
	* Material.h:
	* HAnimSite.h:
	* Contour2D.h:
	* AudioClip.h:
	* ReceiverPdu.h:
	* TimeSensor.h:
	* jsMFNode.h:
	* Switch.h:
	* ParticleSystems.h:
	* jsSFNode.h:
	* jsMFBool.h:
	* Color.h:
	* Cone.h:
	* jsX3DArrayField.h:
	* KeyDeviceSensor.h:
	* jsMFTime.h:
	* jsMFVec4f.h:
	* jsSFVec4d.h:
	* MetadataSet.h:
	* jsMFFloat.h:
	* jsMFVec4d.h:
	* Appearance.h:
	* LOD.cpp:
	* X3DInfoNode.h:
	* Arc2D.h:
	* jsSFVec3f.h:
	* jsSFVec3d.h:
	* jsMFVec2d.h:
	* jsSFVec2d.h:
	* jsMFVec2f.h:
	* Script.h:
	* Normal.h:
	* jsSFVec4f.h:
	* NurbsCurve.h:
	* jsMFVec3f.h:
	* jsMFVec3d.h:
	* HAnimJoint.h:
	* CubeMapTexturing.h:
	* jsMFImage.h:
	* jsMFInt32.h:
	* jsMFColor.h:
	* RigidBodyPhysics.h:
	* jsSFColor.h:
	* jsSFVec2f.h:
	* jsSFImage.h:
	* Sphere.h:
	* ArrayTypes.h:
	* Disk2D.h:
	* LineSet.h:
	* jsMFString.h:
	* Switch.cpp:
	* GeoLOD.h:
	* X3DChildNode.h:
	* jsSFNode.cpp:
	* Inline.h:
	* Anchor.h:
	* LayerSet.h:
	* MetadataBool.h:
	* jsMFDouble.h:
	* Viewport.h:
	* ScreenGroup.h:
	* ShaderPart.h:
	* PointSet.h:
	* jsProfileInfoArray.h:
	* HAnimSegment.h:
	* Transform.h:
	* TransmitterPdu.h:
	* jsSFVec3d.cpp:
	* jsSFVec2f.cpp:
	* jsSFVec3f.cpp:
	* X3DSensorNode.h:
	* SpotLight.h:
	* jsSFColor.cpp:
	* jsSFImage.cpp:
	* MetadataFloat.h:
	* EspduTransform.h:
	* X3DShapeNode.h:
	* jsSFVec4f.cpp:
	* jsSFVec4d.cpp:
	* LayoutLayer.h:
	* X3DSoundNode.h:
	* NurbsCurve2D.h:
	* jsSFVec2d.cpp:
	* LayoutGroup.h:
	* Viewport.cpp:
	* Circle2D.h:
	* EnvironmentalSensor.h:
	* jsSFMatrix3d.h:
	* jsSFMatrix3f.h:
	* jsSFRotation.h:
	* Sphere.cpp:
	* jsSFMatrix4f.h:
	* Cylinder.h:
	* jsMFMatrix4d.h:
	* jsMFMatrix3d.h:
	* jsMFMatrix3f.h:
	* jsMFRotation.h:
	* jsMFMatrix4f.h:
	* ClipPlane.h:
	* ColorRGBA.h:
	* jsSFMatrix4d.h:
	* MetadataString.h:
	* jsVrmlMatrix.h:
	* MetadataDouble.h:
	* PointLight.h:
	* ArrayTypes.cpp:
	* QuadSet.h:
	* CADFace.h:
	* CADPart.h:
	* HAnimHumanoid.h:
	* DISEntityManager.h:
	* StaticGroup.h:
	* Viewpoint.h:
	* Collision.h:
	* Billboard.h:
	* GeoOrigin.h:
	* MetadataInteger.h:
	* X3DBindableNode.h:
	* jsX3DFieldDefinition.h:
	* jsComponentInfoArray.h:
	* PointingDeviceSensor.h:
	* LineProperties.h:
	* CADLayer.h:
	* FillProperties.h:
	* HAnimDisplacer.h:
	* jsMFColorRGBA.h:
	* jsSFColorRGBA.h:
	* EnvironmentalEffects.h:
	* X3DLayoutNode.h:
	* Coordinate.h:
	* jsProfileInfoArray.cpp:
	* Extrusion.h:
	* jsSFMatrix3d.cpp:
	* ShaderProgram.h:
	* TriangleSet.h:
	* X3DShaderNode.h:
	* jsSFMatrix4d.cpp:
	* jsSFRotation.cpp:
	* jsVrmlMatrix.cpp:
	* jsSFMatrix3f.cpp:
	* ProgramShader.h:
	* jsSFMatrix4f.cpp:
	* PickableGroup.h:
	* X3DLightNode.h:
	* X3DFontStyleNode.h:
	* ArcClose2D.h:
	* Polyline2D.h:
	* ColorDamper.h:
	* jsX3DExecutionContext.h:
	* LoadSensor.h:
	* X3DLayerNode.h:
	* X3DMaterialNode.h:
	* Rectangle2D.h:
	* ComposedShader.h:
	* Viewpoint.cpp:
	* TwoSidedMaterial.h:
	* Polypoint2D.h:
	* CoordinateDouble.h:
	* MovieTexture.h:
	* PixelTexture.h:
	* GeoLocation.h:
	* GeoMetadata.h:
	* ScalarChaser.h:
	* ScreenFontStyle.h:
	* ImageTexture.h:
	* MultiTexture.h:
	* jsComponentInfoArray.cpp:
	* jsSFColorRGBA.cpp:
	* jsFieldDefinitionArray.h:
	* jsX3DFieldDefinition.cpp:
	* X3DBindableNode.cpp:
	* X3DMetadataObject.h:
	* X3DColorNode.h:
	* Extrusion.cpp:
	* LinePickSensor.h:
	* PackagedShader.h:
	* X3DChaserNode.h:
	* X3DLayerNode.cpp:
	* X3DDamperNode.h:
	* ContourPolyline2D.h:
	* NurbsSwungSurface.h:
	* NurbsSweptSurface.h:
	* X3DScriptNode.h:
	* GeoTransform.h:
	* jsX3DExecutionContext.cpp:
	* NurbsPatchSurface.h:
	* CADAssembly.h:
	* X3DNormalNode.h:
	* GeoViewpoint.h:
	* X3DAppearanceNode.h:
	* PointPickSensor.h:
	* X3DUrlObject.h:
	* ImageTexture.cpp:
	* PositionDamper.h:
	* PositionChaser.h:
	* X3DViewportNode.h:
	* jsFieldDefinitionArray.cpp:
	* X3DGroupingNode.h:
	* Fog.h:
	* X3DSoundSourceNode.h:
	* VolumePickSensor.h:
	* ElevationGrid.h:
	* TriangleSet2D.h:
	* X3DTextureNode.h:
	* TriangleFanSet.h:
	* GeoCoordinate.h:
	* IndexedLineSet.h:
	* DISEntityTypeMapping.h:
	* Contact.h:
	* IndexedFaceSet.h:
	* X3DFollowerNode.h:
	* X3DPickableObject.h:
	* NurbsTrimmedSurface.h:
	* ViewpointGroup.h:
	* GeoTouchSensor.h:
	* X3DPickSensorNode.h:
	* KeySensor.h:
	* NavigationInfo.h:
	* X3DPrototypeInstance.h:
	* X3DTimeDependentNode.h:
	* OrthoViewpoint.h:
	* DirectionalLight.h:
	* X3DBoundedObject.h:
	* X3DGeometryNode.h:
	* BallJoint.h:
	* TextureTransform.h:
	* ElevationGrid.cpp:
	* TriangleStripSet.h:
	* PixelTexture3D.h:
	* X3DTexture2DNode.h:
	* RigidBody.h:
	* CoordinateDamper.h:
	* X3DGroupingNode.cpp:
	* TimeTrigger.h:
	* IndexedQuadSet.h:
	* PositionDamper2D.h:
	* ImageTexture3D.h:
	* TexCoordDamper2D.h:
	* PositionChaser2D.h:
	* PrimitivePickSensor.h:
	* EaseInEaseOut.h:
	* MotorJoint.h:
	* GeoElevationGrid.h:
	* OrientationDamper.h:
	* X3DViewpointNode.h:
	* ConeEmitter.h:
	* X3DPrototypeInstance.cpp:
	* NavigationInfo.cpp:
	* TextureProperties.h:
	* TextureCoordinate.h:
	* IndexedFaceSet.cpp:
	* X3DCoordinateNode.h:
	* OrientationChaser.h:
	* X3DGeometryNode.cpp:
	* X3DAppearanceChildNode.h:
	* NurbsTextureCoordinate.h:
	* BooleanToggle.h:
	* BooleanFilter.h:
	* X3DTexture3DNode.h:
	* SliderJoint.h:
	* FloatVertexAttribute.h:
	* IndexedTriangleSet.h:
	* PointEmitter.h:
	* StringSensor.h:
	* X3DTexture2DNode.cpp:
	* GeoProximitySensor.h:
	* X3DViewpointNode.cpp:
	* LocalFog.h:
	* VolumeEmitter.h:
	* IntegerTrigger.h:
	* BooleanTrigger.h:
	* ComposedTexture3D.h:
	* X3DTriggerNode.h:
	* Matrix3VertexAttribute.h:
	* Matrix4VertexAttribute.h:
	* ParticleSystem.h:
	* SurfaceEmitter.h:
	* TextureTransform3D.h:
	* X3DVertexAttributeNode.h:
	* X3DNurbsControlCurveNode.h:
	* NurbsSurfaceInterpolator.h:
	* TextureCoordinate4D.h:
	* TextureCoordinate3D.h:
	* Background.h:
	* X3DNetworkSensorNode.h:
	* X3DSequencerNode.h:
	* IntegerSequencer.h:
	* ColorInterpolator.h:
	* MultiTextureTransform.h:
	* UniversalJoint.h:
	* PolylineEmitter.h:
	* BooleanSequencer.h:
	* CollisionSpace.h:
	* NurbsPositionInterpolator.h:
	* X3DParametricGeometryNode.h:
	* IndexedTriangleFanSet.h:
	* WindPhysicsModel.h:
	* CollisionSensor.h:
	* CollidableShape.h:
	* PlaneSensor.h:
	* ScalarInterpolator.h:
	* NormalInterpolator.h:
	* MultiTextureCoordinate.h:
	* ExplosionEmitter.h:
	* TouchSensor.h:
	* CollidableOffset.h:
	* IndexedTriangleStripSet.h:
	* X3DTextureTransformNode.h:
	* X3DComposedGeometryNode.h:
	* X3DInterpolatorNode.h:
	* X3DFogObject.h:
	* X3DNurbsSurfaceGeometryNode.h:
	* SphereSensor.h:
	* X3DGeometricPropertyNode.h:
	* NormalInterpolator.cpp:
	* X3DTextureCoordinateNode.h:
	* X3DRigidJointNode.h:
	* PositionInterpolator.h:
	* GeoPositionInterpolator.h:
	* FogCoordinate.h:
	* NurbsOrientationInterpolator.h:
	* TransformSensor.h:
	* BoundedPhysicsModel.h:
	* GravityPhysicsModel.h:
	* CylinderSensor.h:
	* X3DInterpolatorNode.cpp:
	* X3DProgrammableShaderObject.h:
	* ProximitySensor.h:
	* CollisionCollection.h:
	* TextureCoordinateGenerator.h:
	* VisibilitySensor.h:
	* RigidBodyCollection.h:
	* ImageCubeMapTexture.h:
	* PositionInterpolator2D.h:
	* CoordinateInterpolator.h:
	* TextureTransformMatrix3D.h:
	* ProximitySensor.cpp:
	* OrientationInterpolator.h:
	* DoubleAxisHingeJoint.h:
	* SingleAxisHingeJoint.h:
	* X3DKeyDeviceSensorNode.h:
	* TextureBackground.h:
	* X3DBackgroundNode.h:
	* SplineScalarInterpolator.h:
	* CoordinateInterpolator2D.h:
	* X3DParticleEmitterNode.h:
	* X3DDragSensorNode.h:
	* X3DNBodyCollidableNode.h:
	* X3DTouchSensorNode.h:
	* ComposedCubeMapTexture.h:
	* SplinePositionInterpolator.h:
	* X3DProductStructureChildNode.h:
	* GeneratedCubeMapTexture.h:
	* X3DEnvironmentTextureNode.h:
	* SplinePositionInterpolator2D.h:
	* SquadOrientationInterpolator.h:
	* X3DParticlePhysicsModelNode.h:
	* X3DNBodyCollisionSpaceNode.h:
	* X3DEnvironmentalSensorNode.h:
	* X3DPointingDeviceSensorNode.h: 

2012-06-15  Holger Seelig  <holger.seelig@yahoo.de>

	* ExecutionContext.h: 

2012-06-15  Holger Seelig  <holger.seelig@yahoo.de>

	* Proto.h:
	* RefPtr.h:
	* Parser.h:
	* Viewer.h:
	* Browser.h:
	* Parser.cpp:
	* Viewer.cpp:
	* Browser.cpp:
	* Renderer.cpp:
	* ProtoArray.h:
	* RouteArray.h:
	* X3DBaseNode.h:
	* ExternProto.h:
	* MFNode.h:
	* SFNode.h:
	* X3DArrayField.h:
	* X3DBaseNode.cpp:
	* ComponentInfo.h:
	* ComponentInfo.cpp:
	* MFNode.cpp:
	* ProfileInfoArray.h:
	* ExecutionContext.h:
	* ExternProtoArray.h:
	* SupportedProfiles.h:
	* X3DFieldDefinition.h:
	* ExecutionContext.cpp:
	* ComponentInfoArray.h:
	* X3DExecutionContext.h:
	* SupportedComponents.h:
	* X3DFieldDefinition.cpp:
	* X3DExecutionContext.cpp:
	* Inline.h:
	* X3DLayerNode.h:
	* X3DPrototypeInstance.h:
	* X3DPrototypeInstance.cpp:
	* X3DViewpointNode.cpp:
	* Background.h: 

2012-06-14  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* Proto.cpp:
	* Route.cpp:
	* Parser.cpp:
	* X3DObject.h:
	* Browser.cpp:
	* X3DObject.cpp:
	* X3DBaseNode.h:
	* NodeCallback.h:
	* X3DBaseNode.cpp:
	* SFNode.cpp:
	* NodeCallbackArray.h:
	* X3DFieldDefinition.h:
	* X3DFieldDefinition.cpp:
	* IndexedLineSet.cpp:
	* NormalInterpolator.cpp:
	* CoordinateInterpolator.cpp:
	* CoordinateInterpolator2D.cpp: 

2012-06-14  Holger Seelig  <holger.seelig@yahoo.de>

	* RefPtr.h:
	* libtitania-x3d.md.pc:
	* libtitania-x3d.cproj:
	* Proto.cpp:
	* Scene.cpp:
	* X3DField.h:
	* X3DObject.h:
	* X3DBaseNode.h:
	* SFTime.h:
	* SFNode.h:
	* MFNode.h:
	* X3DArrayField.h:
	* SFBool.h:
	* X3DBaseNode.cpp:
	* SFVec3f.h:
	* SFVec2f.h:
	* SFColor.h:
	* SFImage.h:
	* SFVec4f.h:
	* SFVec2d.h:
	* MFInt32.h:
	* SFInt32.h:
	* SFFloat.h:
	* SFVec4d.h:
	* SFVec3d.h:
	* SFNode.cpp:
	* ValueTypes:
	* Name.h:
	* MFNode.cpp:
	* SFString.h:
	* SFDouble.h:
	* ExecutionContext.h:
	* Image.h:
	* Array.h:
	* SFRotation.h:
	* Name.cpp:
	* SFMatrix4f.h:
	* SFMatrix3d.h:
	* SFMatrix4d.h:
	* SFMatrix3f.h:
	* ExecutionContext.cpp:
	* X3DFieldDefinition.h:
	* SFColorRGBA.h:
	* ArrayFields.h:
	* Image.cpp:
	* ArrayFields.cpp:
	* X3DFieldDefinition.cpp:
	* X3DExecutionContext.cpp:
	* Array.h:
	* Image.h:
	* Image.cpp:
	* ArrayTypes.h:
	* ArrayTypes.cpp:
	* X3DPrototypeInstance.cpp: 

2012-06-14  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.cproj:
	* X3DObject.h:
	* X3DObject.cpp:
	* X3DArrayField.h:
	* MFInt32.h:
	* Name.h:
	* Image.h:
	* Array.h:
	* Name.cpp:
	* ArrayFields.h:
	* X3DFieldDefinition.h:
	* ArrayFields.cpp:
	* X3DFieldDefinition.cpp: 

2012-06-14  Holger Seelig  <holger.seelig@yahoo.de>

	* Fields.h:
	* libtitania-x3d.cproj:
	* SbVec3f.h:
	* SbVec2f.h:
	* SbVec4d.h:
	* SbVec3d.h:
	* SbVec2d.h:
	* SbVec4f.h:
	* MFNode.h:
	* MFTime.h:
	* MFBool.h:
	* X3DArrayField.h:
	* MFColor.h:
	* MFVec3f.h:
	* MFInt32.h:
	* MFVec3d.h:
	* MFVec2f.h:
	* MFVec4f.h:
	* MFFloat.h:
	* MFVec2d.h:
	* MFVec4d.h:
	* MFImage.h:
	* SbMatrix3.h:
	* SbMatrix4f.h:
	* SbMatrix3f.h:
	* SbLinear.cpp:
	* SbMatrix4d.h:
	* MFDouble.h:
	* SbMatrix3d.h:
	* MFNode.cpp:
	* MFString.h:
	* SbRotationd.h:
	* SbRotationf.h:
	* SbQuaternion.h:
	* MFMatrix3d.h:
	* MFRotation.h:
	* MFMatrix3f.h:
	* MFMatrix4d.h:
	* MFMatrix4f.h:
	* MFColorRGBA.h:
	* ArrayFields.h:
	* ArrayFields.cpp: 

2012-06-14  Holger Seelig  <holger.seelig@yahoo.de>

	* IO:
	* Basic:
	* libtitania-x3d.md.pc:
	* libtitania-x3d.cproj:
	* Rendering:
	* BasicTypes:
	* X3DField.h:
	* Application:
	* X3DObject.h:
	* X3DBaseNode.h:
	* X3DObject.cpp:
	* SbImage.h:
	* SFTime.h:
	* MFTime.h:
	* MFNode.h:
	* MFBool.h:
	* X3DArrayField.h:
	* X3DBaseNode.cpp:
	* SFVec2d.h:
	* MFImage.h:
	* SFVec4d.h:
	* SFVec2f.h:
	* SFVec4f.h:
	* SFFloat.h:
	* SFImage.h:
	* SFVec3f.h:
	* SFVec3d.h:
	* SFColor.h:
	* MFColor.h:
	* MFVec3d.h:
	* MFInt32.h:
	* MFVec3f.h:
	* SFInt32.h:
	* MFVec4f.h:
	* MFVec2f.h:
	* MFFloat.h:
	* SbImage.cpp:
	* MFVec2d.h:
	* MFVec4d.h:
	* SFDouble.h:
	* MFString.h:
	* SFNode.cpp:
	* MFDouble.h:
	* MFNode.cpp:
	* Image.h:
	* SFImage.cpp:
	* Array.h:
	* MFMatrix3d.h:
	* SFMatrix4f.h:
	* SFMatrix4d.h:
	* SFMatrix3d.h:
	* SFMatrix3f.h:
	* SFRotation.h:
	* MFRotation.h:
	* MFMatrix3f.h:
	* MFMatrix4f.h:
	* MFMatrix4d.h:
	* X3DFieldDefinition.h:
	* MFColorRGBA.h:
	* Image.cpp:
	* SFColorRGBA.h:
	* X3DFieldDefinition.cpp:
	* PixelTexture.cpp: 

2012-06-13  Holger Seelig  <holger.seelig@yahoo.de>

	* Mouse.cpp:
	* Proto.cpp:
	* Nodes.cpp:
	* Scene.cpp:
	* Viewer.cpp:
	* Router.cpp:
	* Parser.cpp:
	* Browser.cpp:
	* Renderer.cpp:
	* ExportedNode.h:
	* X3DBaseNode.cpp:
	* ExternProto.cpp:
	* ShapeContainer.cpp:
	* GarbageColector.cpp:
	* X3DFieldDefinition.h:
	* ExecutionContext.cpp:
	* SupportedProfiles.cpp:
	* X3DExecutionContext.h:
	* BrowserApplication.cpp:
	* SupportedComponents.cpp:
	* X3DExecutionContext.cpp:
	* X3DPrototypeInstance.cpp: 

2012-06-12  Holger Seelig  <holger.seelig@yahoo.de>

	* config.h:
	* libtitania-x3d.cproj:
	* libtitania-x3d.md.pc:
	* Route.cpp:
	* Proto.cpp:
	* Scene.cpp:
	* X3DBaseNode.cpp:
	* X3DArrayField.h:
	* ProfileInfo.cpp:
	* ExternProto.cpp:
	* MFNode.cpp:
	* ComponentInfo.cpp:
	* SFImage.cpp: 

2012-06-12  Holger Seelig  <holger.seelig@yahoo.de>

toStream function implemented, improved and faster stringification

	* libtitania-x3d.h:
	* Proto.h:
	* Route.h:
	* Scene.h:
	* libtitania-x3d.cproj:
	* Route.cpp:
	* Scene.cpp:
	* Proto.cpp:
	* X3DObject.h:
	* ExternProto.h:
	* ProfileInfo.h:
	* X3DBaseNode.h:
	* ExternProto.cpp:
	* MFNode.h:
	* SFTime.h:
	* SFNode.h:
	* ComponentInfo.h:
	* ProfileInfo.cpp:
	* X3DArrayField.h:
	* X3DBaseNode.cpp:
	* SFBool.h:
	* SFVec4f.h:
	* SFColor.h:
	* SFVec4d.h:
	* SFVec2f.h:
	* SFFloat.h:
	* SFVec2d.h:
	* SFVec3d.h:
	* SFInt32.h:
	* SFImage.h:
	* SFVec3f.h:
	* ComponentInfo.cpp:
	* SFDouble.h:
	* SFString.h:
	* MFNode.cpp:
	* SFImage.cpp:
	* SFMatrix4f.h:
	* SFMatrix4d.h:
	* SFMatrix3d.h:
	* SFRotation.h:
	* SFMatrix3f.h:
	* SFColorRGBA.h: 

2012-06-12  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-x3d.md.pc:
	* libtitania-x3d.cproj: 

