#VRML V2.0 utf8 Titania V0.7.3

META "icon" "../../ui/icons/icon-bw.svg"
META "title" "about:url_error"
META "titania-history" "FALSE"

LayerSet {
  activeLayer 1
  order 1
  layers LayoutLayer {
    layout Layout {
      align [
        "MIDDLE",
        "TOP"
      ]
      offsetUnits [
        "PIXEL",
        "PIXEL"
      ]
      sizeUnits [
        "PIXEL",
        "PIXEL"
      ]
      size [
        0,
        0
      ]
      scaleMode [
        "PIXEL",
        "PIXEL"
      ]
    }
    children [
      NavigationInfo {
        type [
          "PLANE_create3000.de",
          "ANY"
        ]
      }
      DEF White Background {
        skyColor 1 1 1
      }
      DEF DialogErrorImage Transform {
        translation -225 -59 0
        scale 16 16 1
        children Shape {
          appearance Appearance {
            texture PixelTexture {
              image 32 32 4
                0xffffff00 0xffffff00 0x5 0xf 0x16 0x16 0x16 0x16 0x16 0x16 0x16 0x16 0x16 0x16 0x16 0x16 0x16 0x16 0x16 0x16 0x16 0x16 0x16 0x16 0x16 0x16 0x16 0x16 0xf 0x5 0xffffff00 0xffffff00
                0xffffff00 0xc 0x3a 0x6f 0x8b 0x8b 0x8b 0x8b 0x8b 0x8b 0x8b 0x8b 0x8b 0x8b 0x8b 0x8b 0x8b 0x8b 0x8b 0x8b 0x8b 0x8b 0x8b 0x8b 0x8b 0x8b 0x8b 0x8b 0x6f 0x3a 0xc 0xffffff00
                0x2 0x27 0x3c0707b3 0x921212f1 0xad1616ff 0xae1818ff 0xaf1b1bff 0xaf1d1dff 0xb01f1fff 0xb12121ff 0xb12323ff 0xb22525ff 0xb32727ff 0xb32929ff 0xb42b2bff 0xb52c2cff 0xb52c2cff 0xb42b2bff 0xb32929ff 0xb32727ff 0xb22525ff 0xb12323ff 0xb12121ff 0xb01f1fff 0xaf1d1dff 0xaf1b1bff 0xae1818ff 0xad1616ff 0x921212f1 0x3c0707b3 0x27 0x2
                0x6 0x4e 0x931210f0 0xad100eff 0xad100eff 0xad110fff 0xad110fff 0xae1210ff 0xae1210ff 0xae1311ff 0xae1311ff 0xae1311ff 0xae1311ff 0xae1311ff 0xae1311ff 0xae1311ff 0xae1311ff 0xae1311ff 0xae1311ff 0xae1311ff 0xae1311ff 0xae1311ff 0xae1311ff 0xae1210ff 0xae1210ff 0xad110fff 0xad110fff 0xad100eff 0xad100eff 0x931210f0 0x4e 0x6
                0x7 0x56 0xb01512ff 0xaf120fff 0xaf1310ff 0xaf1411ff 0xa51411ff 0xa21512ff 0xa41513ff 0xa81613ff 0xac1715ff 0xb01815ff 0xb11815ff 0xb11815ff 0xb11815ff 0xb11815ff 0xb11815ff 0xb11815ff 0xb11815ff 0xb11815ff 0xb11815ff 0xb11815ff 0xb11714ff 0xb11714ff 0xb01613ff 0xb01512ff 0xb01411ff 0xaf1310ff 0xaf120fff 0xb01512ff 0x56 0x7
                0x7 0x56 0xb31713ff 0xb21612ff 0xb31713ff 0xae1815ff 0x901511ff 0x8c3d3aff 0x812c29ff 0x7d1713ff 0x8b1713ff 0xa21a16ff 0xb01c19ff 0xb51d19ff 0xb51d19ff 0xb51d19ff 0xb51d19ff 0xb51d19ff 0xb51d19ff 0xb51d19ff 0xb51d19ff 0xb51d19ff 0xb41c18ff 0xb41c18ff 0xb41b18ff 0xb41a16ff 0xb31915ff 0xb31713ff 0xb21612ff 0xb31713ff 0x56 0x7
                0x6 0x54 0xb51b15ff 0xb51a14ff 0xb51b15ff 0xb41d17ff 0xa91d18ff 0xb3615dff 0xe1d3d2ff 0xd5ceceff 0xb39190ff 0x842e2dff 0x961c17ff 0xad201bff 0xaf211bff 0xae201bff 0xaf211bff 0xb2211bff 0xb4211cff 0xb6221cff 0xb7221cff 0xb7221cff 0xb7221cff 0xb7211bff 0xb7201aff 0xb61f19ff 0xb51d17ff 0xb51b15ff 0xb51a14ff 0xb51b15ff 0x54 0x6
                0x6 0x53 0xb71c15ff 0xb81c15ff 0xb81e17ff 0xb92019ff 0xba231cff 0xb5231cff 0xa32822ff 0xd7c8c8ff 0xdfdfdfff 0xdad5d5ff 0x9a615eff 0x841a16ff 0x851b16ff 0x7f1a15ff 0x811a16ff 0x8a1c17ff 0x941e18ff 0x9e201aff 0xa7221bff 0xb5251eff 0xba261fff 0xba251eff 0xba241dff 0xba231cff 0xb92019ff 0xb81e17ff 0xb81c15ff 0xb71c15ff 0x53 0x6
                0x6 0x53 0xb91f16ff 0xba2017ff 0xba2119ff 0xbb241bff 0xbc271eff 0xbd2920ff 0xb3261fff 0xb07370ff 0xe1e1e1ff 0xe1e1e1ff 0xe1e1e1ff 0xccbdbbff 0xd1c5c4ff 0xdbd7d7ff 0xd7d0d0ff 0xc5afaeff 0xb28d8bff 0x9f6c68ff 0x873934ff 0x8f1f18ff 0xac251dff 0xb82820ff 0xbd2920ff 0xbc271eff 0xbb241bff 0xba2119ff 0xba2017ff 0xb91f16ff 0x53 0x6
                0x6 0x51 0xbc2117ff 0xbd2319ff 0xbe251bff 0xbe281eff 0xbe2a21ff 0xb62a22ff 0x99241cff 0x914b46ff 0xe4e4e4ff 0xe4e4e4ff 0xe4e4e4ff 0xe4e4e4ff 0xe4e4e4ff 0xe4e4e4ff 0xe4e4e4ff 0xe3e3e3ff 0xe3e3e3ff 0xe3e3e3ff 0xe2e1e1ff 0xb99795ff 0x87322dff 0x99241cff 0xb32920ff 0xbe2a21ff 0xbe281eff 0xbe251bff 0xbd2319ff 0xbc2117ff 0x51 0x6
                0x6 0x4f 0xbf2318ff 0xc0251aff 0xc1281dff 0xc22b20ff 0xb62a21ff 0x91251dff 0xae817dff 0xe4e2e2ff 0xe6e6e6ff 0xe6e6e6ff 0xe6e6e6ff 0xe6e6e6ff 0xe6e6e6ff 0xe6e6e6ff 0xe6e6e6ff 0xe6e6e6ff 0xe6e6e6ff 0xe6e6e6ff 0xe6e6e6ff 0xe6e6e6ff 0xe2dfdfff 0xaf8481ff 0x91251cff 0xb72a21ff 0xc22b20ff 0xc1281dff 0xc0251aff 0xbf2318ff 0x4f 0x6
                0x6 0x4f 0xc1281bff 0xc2281cff 0xc32b1eff 0xbd2d21ff 0x97261cff 0xbb9895ff 0xe9e9e9ff 0xe9e9e9ff 0xe9e9e9ff 0xe9e9e9ff 0xe9e9e9ff 0xebebebff 0xe9e9e9ff 0xe9e9e9ff 0xe9e9e9ff 0xe8e8e8ff 0xeaeaeaff 0xe8e8e8ff 0xe8e8e8ff 0xe8e8e8ff 0xe8e8e8ff 0xe8e8e8ff 0xaf837fff 0x9d281dff 0xbe2d21ff 0xc32b1eff 0xc2281cff 0xc1281bff 0x4f 0x6
                0x6 0x4e 0xc52c1fff 0xc52a1eff 0xc32c1fff 0xa8291eff 0xb1827eff 0xecececff 0xecececff 0xecececff 0xebebebff 0xebebebff 0xefececff 0xdfcac8ff 0xefefefff 0xebebebff 0xebebebff 0xefefefff 0xdfcac8ff 0xefececff 0xebebebff 0xebebebff 0xebebebff 0xebebebff 0xeaeaeaff 0x9d5e59ff 0xa8291eff 0xc32c1fff 0xc52a1eff 0xc52c1fff 0x4e 0x6
                0x6 0x4b 0xc73022ff 0xc72d1fff 0xbd2d1fff 0x94352bff 0xeae6e6ff 0xeeeeeeff 0xeeeeeeff 0xeeeeeeff 0xeeeeeeff 0xf1eeeeff 0xc48079ff 0xc0362aff 0xd3aca8ff 0xf1f1f1ff 0xf1f1f1ff 0xd3aca8ff 0xc0362aff 0xc38078ff 0xf0ededff 0xedededff 0xedededff 0xedededff 0xedededff 0xe8e4e3ff 0x96382fff 0xbc2d1fff 0xc72d1fff 0xc73022ff 0x4b 0x6
                0x6 0x4a 0xca3524ff 0xc93020ff 0xb22d1fff 0xb88b87ff 0xf1f1f1ff 0xf1f1f1ff 0xf1f1f1ff 0xf1f1f1ff 0xf1f1f1ff 0xb57770ff 0xc3392aff 0xcd3c2cff 0xc53b2bff 0xd4aba6ff 0xd4aba6ff 0xc53b2bff 0xcd3c2cff 0xc3392aff 0xb57770ff 0xf0f0f0ff 0xf0f0f0ff 0xf0f0f0ff 0xf0f0f0ff 0xf0f0f0ff 0xac706aff 0xb72e1fff 0xc83020ff 0xca3524ff 0x4a 0x6
                0x5 0x4a 0xcd3827ff 0xca3121ff 0xaa2d1eff 0xd6bfbdff 0xf3f3f3ff 0xf3f3f3ff 0xf3f3f3ff 0xf3f3f3ff 0xf3f3f3ff 0xd4bebbff 0x9a352bff 0xc73d2dff 0xcf3e2eff 0xcb3d2dff 0xcb3d2dff 0xcf3e2eff 0xc73d2dff 0x9a352bff 0xd3bdbaff 0xf2f2f2ff 0xf2f2f2ff 0xf2f2f2ff 0xf2f2f2ff 0xf2f2f2ff 0xc7a5a1ff 0xb02e1fff 0xc93120ff 0xcd3827ff 0x4a 0x5
                0x5 0x49 0xd03d2aff 0xcb3422ff 0xa22b1dff 0xece5e4ff 0xf6f6f6ff 0xf6f6f6ff 0xf6f6f6ff 0xf6f6f6ff 0xf6f6f6ff 0xf6f6f6ff 0xd7c0beff 0x9f382dff 0xce402fff 0xd24130ff 0xd24130ff 0xce402fff 0x9f382dff 0xd7c0beff 0xf5f5f5ff 0xf5f5f5ff 0xf5f5f5ff 0xf5f5f5ff 0xf5f5f5ff 0xf5f5f5ff 0xe6dbdaff 0xa42b1eff 0xcb3422ff 0xd03d2aff 0x49 0x5
                0x5 0x47 0xd2402dff 0xce3622ff 0xae3020ff 0xebe0e0ff 0xf8f8f8ff 0xf8f8f8ff 0xf8f8f8ff 0xf8f8f8ff 0xf8f8f8ff 0xf8f8f8ff 0xf9f9f9ff 0xcd9993ff 0xd04330ff 0xd44431ff 0xd44431ff 0xd04330ff 0xcd9993ff 0xf9f9f9ff 0xf8f8f8ff 0xf8f8f8ff 0xf7f7f7ff 0xf7f7f7ff 0xf7f7f7ff 0xf7f7f7ff 0xeae0dfff 0xae3020ff 0xce3622ff 0xd2402dff 0x47 0x5
                0x5 0x46 0xd54330ff 0xd23b25ff 0xbd3824ff 0xd5b6b2ff 0xfbfbfbff 0xfbfbfbff 0xfbfbfbff 0xfbfbfbff 0xfbfbfbff 0xfcfcfcff 0xdbb5b0ff 0xcf4432ff 0xd74733ff 0xd34632ff 0xd34632ff 0xd74733ff 0xcf4432ff 0xdbb5b0ff 0xfbfbfbff 0xfafafaff 0xfafafaff 0xfafafaff 0xfafafaff 0xfafafaff 0xd5b6b1ff 0xbd3824ff 0xd23b25ff 0xd54330ff 0x46 0x5
                0x5 0x45 0xd84732ff 0xd63e26ff 0xc73d27ff 0xc6938bff 0xfefefeff 0xfefefeff 0xfdfdfdff 0xfdfdfdff 0xfdfdfdff 0xd2a9a3ff 0xcd4631ff 0xd84a34ff 0xd04733ff 0xa33f2fff 0xa33f2fff 0xd04733ff 0xd84a34ff 0xcd4631ff 0xd2a9a3ff 0xfdfdfdff 0xfdfdfdff 0xfcfcfcff 0xfcfcfcff 0xfcfcfcff 0xc49087ff 0xc73d27ff 0xd63e26ff 0xd84732ff 0x45 0x5
                0x5 0x43 0xdb4b35ff 0xd94028ff 0xd2412bff 0xb95a4cff 0xfaf7f6ff 0xfefefeff 0xfefefeff 0xfefefeff 0xfefefeff 0xc7a19bff 0xb03d2cff 0xd14a34ff 0xa34030ff 0xdfc9c6ff 0xdfc9c6ff 0xa34030ff 0xd04934ff 0xb03d2cff 0xc8a29cff 0xffffffff 0xffffffff 0xffffffff 0xffffffff 0xfaf7f7ff 0xb9594bff 0xd2412bff 0xd94028ff 0xdb4b35ff 0x43 0x5
                0x5 0x43 0xdd4f38ff 0xdb4329ff 0xdb462dff 0xcf462eff 0xcc958bff 0xfdfcfcff 0xfcfcfcff 0xfcfcfcff 0xfdfdfdff 0xfdfdfdff 0xc79f99ff 0x9b3f2fff 0xdec8c5ff 0xfdfdfdff 0xfdfdfdff 0xdec8c5ff 0x9b3f2fff 0xc79f99ff 0xfdfdfdff 0xfdfdfdff 0xfdfdfdff 0xfdfdfdff 0xfdfdfdff 0xcc958bff 0xcf462eff 0xdb462dff 0xdb4329ff 0xdd4f38ff 0x43 0x5
                0x5 0x42 0xe0523aff 0xde4429ff 0xde482eff 0xde4b32ff 0xcc4731ff 0xdcbcb6ff 0xfcfcfcff 0xfbfbfbff 0xfbfbfbff 0xfbfbfbff 0xfbfbfbff 0xede3e1ff 0xfbfbfbff 0xfbfbfbff 0xfbfbfbff 0xfbfbfbff 0xede3e1ff 0xfbfbfbff 0xfbfbfbff 0xfbfbfbff 0xfbfbfbff 0xfcfcfcff 0xdcbcb6ff 0xcc4731ff 0xde4b32ff 0xde482eff 0xde4429ff 0xe0523aff 0x42 0x5
                0x5 0x40 0xe2563eff 0xe0472bff 0xe04a2fff 0xe14e33ff 0xde4f35ff 0xc64b35ff 0xdfc3bdff 0xf9f7f7ff 0xf9f9f9ff 0xf8f8f8ff 0xf8f8f8ff 0xf8f8f8ff 0xf8f8f8ff 0xf8f8f8ff 0xf8f8f8ff 0xf8f8f8ff 0xf9f9f9ff 0xf9f9f9ff 0xf9f9f9ff 0xf9f9f9ff 0xf9f8f7ff 0xe0c3beff 0xc64b35ff 0xde4f35ff 0xe14e33ff 0xe04a2fff 0xe0472bff 0xe2563eff 0x40 0x5
                0x5 0x3f 0xe55a3fff 0xe2492cff 0xe34c2fff 0xe34f32ff 0xe45336ff 0xe15438ff 0xd75238ff 0xc96856ff 0xe7d3d0ff 0xf9f8f8ff 0xf7f7f7ff 0xf6f6f6ff 0xf5f5f5ff 0xf5f5f5ff 0xf5f5f5ff 0xf5f5f5ff 0xf6f6f6ff 0xf7f7f7ff 0xf8f8f8ff 0xe7d3cfff 0xc96856ff 0xd75238ff 0xe15438ff 0xe45336ff 0xe34f32ff 0xe34c2fff 0xe2492cff 0xe55a3fff 0x3f 0x5
                0x4 0x3d 0xe85d41ff 0xe54a2cff 0xe64d2eff 0xe64f32ff 0xe65235ff 0xe75437ff 0xe75639ff 0xe35639ff 0xd65037ff 0xcc7664ff 0xd9b0a7ff 0xe5cfcaff 0xeee3e1ff 0xf5f1f1ff 0xf5f1f1ff 0xeee2e0ff 0xe5cfcaff 0xdab1a8ff 0xcc7664ff 0xd65037ff 0xe35639ff 0xe75639ff 0xe75437ff 0xe65235ff 0xe64f32ff 0xe64d2eff 0xe54a2cff 0xe85d41ff 0x3d 0x4
                0x4 0x3d 0xea6043ff 0xe74d2cff 0xe74e2dff 0xe85030ff 0xe85232ff 0xe85435ff 0xe85637ff 0xe85737ff 0xe85737ff 0xe55637ff 0xe35537ff 0xde5335ff 0xd85035ff 0xd04e32ff 0xd04e32ff 0xd85035ff 0xde5335ff 0xe35537ff 0xe55637ff 0xe85737ff 0xe85737ff 0xe85637ff 0xe85435ff 0xe85232ff 0xe85030ff 0xe74e2dff 0xe74d2cff 0xea6043ff 0x3d 0x4
                0x4 0x33 0xed6548ff 0xea502eff 0xea502fff 0xea512fff 0xea5231ff 0xeb5433ff 0xeb5534ff 0xeb5534ff 0xeb5635ff 0xeb5635ff 0xeb5635ff 0xeb5635ff 0xeb5635ff 0xeb5635ff 0xeb5635ff 0xeb5635ff 0xeb5635ff 0xeb5635ff 0xeb5635ff 0xeb5635ff 0xeb5534ff 0xeb5534ff 0xeb5433ff 0xea5231ff 0xea512fff 0xea502fff 0xea502eff 0xed6548ff 0x33 0x4
                0x1 0x19 0xdb6c53e7 0xec512eff 0xec522fff 0xec522fff 0xec5230ff 0xec5330ff 0xec5431ff 0xec5432ff 0xec5432ff 0xec5432ff 0xec5432ff 0xec5432ff 0xec5432ff 0xec5432ff 0xec5432ff 0xec5432ff 0xec5432ff 0xec5432ff 0xec5432ff 0xec5432ff 0xec5432ff 0xec5431ff 0xec5330ff 0xec5230ff 0xec522fff 0xec522fff 0xec512eff 0xdb6c53e7 0x19 0x1
                0xffffff00 0x7 0xb4645069 0xe47f67e5 0xf38064ff 0xf38064ff 0xf38065ff 0xf38065ff 0xf38165ff 0xf38165ff 0xf38165ff 0xf38165ff 0xf38165ff 0xf38165ff 0xf38165ff 0xf38165ff 0xf38165ff 0xf38165ff 0xf38165ff 0xf38165ff 0xf38165ff 0xf38165ff 0xf38165ff 0xf38165ff 0xf38065ff 0xf38065ff 0xf38064ff 0xf38064ff 0xe47f67e5 0xb4645069 0x7 0xffffff00
                0xffffff00 0xffffff00 0x3 0x9 0xd 0xd 0xd 0xd 0xd 0xd 0xd 0xd 0xd 0xd 0xd 0xd 0xd 0xd 0xd 0xd 0xd 0xd 0xd 0xd 0xd 0xd 0xd 0xd 0x9 0x3 0xffffff00 0xffffff00
                0xffffff00 0xffffff00 0xffffff00 0xffffff00 0xffffff00 0xffffff00 0xffffff00 0xffffff00 0xffffff00 0xffffff00 0xffffff00 0xffffff00 0xffffff00 0xffffff00 0xffffff00 0xffffff00 0xffffff00 0xffffff00 0xffffff00 0xffffff00 0xffffff00 0xffffff00 0xffffff00 0xffffff00 0xffffff00 0xffffff00 0xffffff00 0xffffff00 0xffffff00 0xffffff00 0xffffff00 0xffffff00
              repeatS FALSE
              repeatT FALSE
            }
          }
          geometry Rectangle2D {
            solid FALSE
          }
        }
      }
      DEF Type Transform {
        translation -197 -73 0
        children Shape {
          appearance Appearance {
            material Material {
              diffuseColor 0 0 0
            }
          }
          geometry DEF _1 Text {
            string "URL Unavailable"
            fontStyle ScreenFontStyle {
              family [
                "Ubuntu",
                "SANS"
              ]
              style "BOLD"
              pointSize 22.43
              spacing 1.6
              justify [
                "BEGIN",
                "END"
              ]
            }
          }
        }
      }
      DEF Message Transform {
        translation -240 -96 0
        children [
          DEF Error Transform {
            children Shape {
              appearance Appearance {
                material Material {
                  diffuseColor 0 0 0
                }
              }
              geometry DEF _2 Text {
                string [
                  "Couldn't load URL 'http://www.web3d.org/x3d/content/examples/ConformanceNist/App",
                  "earance/FontStyle/next_family.x3dv'.",
                  "Status: 301, Moved Permanently",
                  "Location: 'http://www.web3d.org/x3d-resources/content/examples/ConformanceNist/A",
                  "ppearance/FontStyle/next_family.x3dv'",
                  ""
                ]
                fontStyle DEF _3 ScreenFontStyle {
                  family [
                    "Ubuntu Mono",
                    "TYPEWRITER"
                  ]
                  pointSize 8
                  spacing 1.6
                  justify [
                    "BEGIN",
                    "BEGIN"
                  ]
                }
              }
            }
          }
          DEF Location_1 Anchor {
            description "New Location"
            url "http://www.web3d.org/x3d-resources/content/examples/ConformanceNist/Appearance/FontStyle/next_family.x3dv'"
            children DEF Location Transform {
              translation 0 -94 0
              children [
                Shape {
                  appearance Appearance {
                    material Material {
                      diffuseColor 0 0 0
                    }
                  }
                  geometry DEF _4 Text {
                    string [
                      "Try: 'http://www.web3d.org/x3d-resources/content/examples/ConformanceNist/Appear",
                      "ance/FontStyle/next_family.x3dv'"
                    ]
                    fontStyle ScreenFontStyle {
                      family [
                        "Ubuntu Mono",
                        "TYPEWRITER"
                      ]
                      pointSize 8
                      spacing 1.6
                      justify [
                        "BEGIN",
                        "BEGIN"
                      ]
                    }
                  }
                }
                DEF _5 Script {
                  eventIn  SFVec2f set_textBounds
                  eventOut SFVec3f translation_changed

                  url "ecmascript:

function set_textBounds (value)
{
	translation_changed = new SFVec3f (0, -value .y, 0);
}

"
                }
              ]
            }
          }
        ]
      }
      DEF MessageScript Script {
        eventOut MFString type_changed
        eventOut MFString error_changed
        eventOut MFString locationURL_changed
        eventOut MFString location_changed
        field    SFNode   screenFontStyle USE _3

        url "ecmascript:

function initialize ()
{
	var worldURL = Browser .currentScene .worldURL;

	var match = worldURL .match (/type=(.*?)(;|$)/)
	var type  = unescape (match [1]);

	var match       = worldURL .match (/what=(.*?)(;|$)/)
	var what        = unescape (match [1]) .split ('\\n');
	var locationURL = [ ];
	var locations   = getLocations (what, locationURL);

	type_changed        = getType (parseInt (type));
	error_changed       = toMFString (breakLines (what, 80));
	locationURL_changed = toMFString (locationURL);
	location_changed    = toMFString (breakLines (locations, 80))
}

function getType (type)
{
	var string = new MFString ();

	switch (type)
	{
		case 13: string [0] = \"Invalid Operation Timing\"; break;
		case 15: string [0] = \"Invalid URL\";              break;
		case 21: string [0] = \"URL Unavailable\";          break;
		case 16:
		default: string [0] = \"Invalid X3D\";              break;
	}

	return string;
}

function getLocations (array, url)
{
	var locations = [ ];

	for each (var s in array)
	{
		var match = s .match (/^Location:\\s*'(.*?')/);

		if (match)
		{
			locations .push (s .replace (/Location:/, \"Try:\"));
			url .push (match [1]);
		}
	}

	return locations;

}

function breakLines (array, columns)
{
	var result = [ ];

	for each (var string in array)
	{
		if (string .length)
		{
			for (var i = 0; i < string .length; i += columns)
				result .push (string .substr (i, columns));
		}
		else
			result .push (string);
	}

	return result;
}

function toMFString (array)
{
	var string = new MFString ();

	for each (var s in array)
		string [string .length] = s;

	return string;
}
"
      }
    ]
  }
}

ROUTE MessageScript.type_changed TO _1.set_string
ROUTE _2.textBounds TO _5.set_textBounds
ROUTE _5.translation_changed TO Location.set_translation
ROUTE MessageScript.error_changed TO _2.set_string
ROUTE MessageScript.location_changed TO _4.set_string
ROUTE MessageScript.locationURL_changed TO Location_1.set_url
