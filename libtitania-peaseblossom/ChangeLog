2015-03-25  Holger Seelig  <holger.seelig@yahoo.de>

	* Makefile.in: 

2015-03-24  Holger Seelig  <holger.seelig@yahoo.de>

	* Makefile.in:
	* libtitania-peaseblossom.cproj: 

2015-02-11  Holger Seelig  <holger.seelig@yahoo.de>

	* Cache.h:
	* Date.h:
	* Math.h:
	* String.h:
	* Number.h:
	* Math.cpp:
	* Date.cpp:
	* Boolean.h:
	* Function.h:
	* var.cpp:
	* Array.cpp:
	* pbObject.h:
	* Object.cpp:
	* Global.cpp:
	* String.cpp:
	* Function.h:
	* Function.cpp:
	* pbFunction.h:
	* pbObject.cpp:
	* pbChildObject.h:
	* Function.cpp:
	* Program.cpp:
	* pbFunction.cpp:
	* pbChildObject.cpp:
	* NativeFunction.h:
	* NativeFunction.cpp:
	* GarbargeCollector.cpp:
	* pbStatement.cpp:
	* InstanceOfExpression.h:
	* MemberAccessExpression.h:
	* ComputedMemberAccessExpression.h: 

2015-02-02  Holger Seelig  <holger.seelig@yahoo.de>

	* Makefile.am:
	* libtitania-peaseblossom.cproj:
	* Objects.h:
	* Parser.h:
	* Array.h:
	* String.h:
	* Number.h:
	* Grammar.h:
	* Boolean.h:
	* Array.cpp:
	* Parser.cpp:
	* String.h:
	* Identifier.h:
	* pbObject.h:
	* var.cpp:
	* Array.cpp:
	* String.cpp:
	* String.cpp:
	* Program.h:
	* pbObject.cpp:
	* Function.cpp:
	* pbFunction.h:
	* Program.cpp:
	* NumberObject.h:
	* pbFunction.cpp:
	* StringObject.h:
	* BooleanObject.h:
	* NativeFunction.h:
	* pbStatement.h:
	* NativeFunction.cpp:
	* pbStatement.cpp:
	* StandardClassType.h:
	* pbExecutionContext.h:
	* DeleteExpression.h:
	* VariableExpression.h:
	* MemberAccessExpression.h:
	* ComputedMemberAccessExpression.h: 

2015-01-31  Holger Seelig  <holger.seelig@yahoo.de>

	* Makefile.am:
	* libtitania-peaseblossom.cproj:
	* Statements.h:
	* Object.h:
	* Parser.cpp:
	* Array.cpp:
	* Date.cpp:
	* Object.cpp:
	* pbObject.h:
	* var.cpp:
	* Array.cpp:
	* pbObject.cpp:
	* Function.cpp:
	* pbFunction.h:
	* Program.cpp:
	* pbFunction.cpp:
	* Array (Kopie).h:
	* StatementType.h:
	* VoidExpression.h:
	* StandardClassType.h:
	* DeleteExpression.h:
	* TypeOfExpression.h:
	* ToNumberExpression.h:
	* BitwiseNotExpression.h: 

2015-01-30  Holger Seelig  <holger.seelig@yahoo.de>

	* Makefile.am:
	* libtitania-peaseblossom.cproj:
	* Statements.h:
	* Cache.h:
	* pbMath.h:
	* Object.h:
	* Array.h:
	* Cache.cpp:
	* PtrCache.h:
	* Object.h:
	* ptr.h:
	* var.h:
	* pbUserData.h:
	* Parser.cpp:
	* Array.cpp:
	* Identifier.h:
	* ptr.cpp:
	* pbObject.h:
	* var.cpp:
	* PtrCache.cpp:
	* Object.cpp:
	* pbObject.cpp:
	* pbChildObject.h:
	* Function.cpp:
	* NumberObject.h:
	* pbFunction.cpp:
	* pbChildObject.cpp:
	* StringObject.h:
	* BooleanObject.h:
	* NativeFunction.h:
	* NativeFunction.cpp:
	* GarbargeCollector.cpp:
	* StatementType.h:
	* NewExpression.h:
	* BreakStatement.h:
	* LessExpression.h:
	* EqualExpression.h:
	* ContinueStatement.h:
	* GreaterExpression.h:
	* NotEqualExpression.h:
	* pbExecutionContext.cpp:
	* VariableExpression.h:
	* AdditionExpression.h:
	* VariableDeclaration.h:
	* LessEqualExpression.h:
	* AssignmentExpression.h:
	* StrictEqualExpression.h:
	* GreaterEqualExpression.h:
	* MemberAccessExpression.h:
	* FunctionCallExpression.h:
	* StrictNotEqualExpression.h:
	* ComputedMemberAccessExpression.h: 

2015-01-28  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-peaseblossom.cproj:
	* ptr.h:
	* array.h:
	* Function.h:
	* Function.cpp:
	* pbFunction.h:
	* pbObject.cpp:
	* pbChildObject.h:
	* iterator.h:
	* Program.cpp:
	* pbChildObject.cpp:
	* pbFunction.cpp:
	* NativeFunction.h:
	* NativeFunction.cpp:
	* pbExecutionContext.h:
	* pbExecutionContext.cpp:
	* VariableExpression.h:
	* VariableDeclaration.h:
	* AssignmentExpression.h: 

2015-01-28  Holger Seelig  <holger.seelig@yahoo.de>

	* Makefile.am:
	* libtitania-peaseblossom.cproj:
	* Cache.h:
	* Parser.h:
	* PtrCache.h:
	* var.h:
	* Parser.cpp:
	* PtrCache.cpp:
	* Function.h:
	* var.cpp:
	* Function.cpp:
	* GarbageCollector.h:
	* GarbargeCollector.cpp:
	* pbStatement.cpp: 

2015-01-26  Holger Seelig  <holger.seelig@yahoo.de>

	* GarbargeCollector.cpp: 

2015-01-24  Holger Seelig  <holger.seelig@yahoo.de>

	* Function.cpp:
	* MemberAccessExpression.h: 

2015-01-24  Holger Seelig  <holger.seelig@yahoo.de>

	* Array.cpp:
	* Function.h:
	* pbObject.h:
	* Function.cpp:
	* pbObject.cpp:
	* Program.cpp:
	* pbStatement.cpp:
	* pbExecutionContext.h:
	* VariableExpression.h:
	* pbExecutionContext.cpp:
	* VariableDeclaration.h:
	* MemberAccessExpression.h:
	* ComputedMemberAccessExpression.h: 

2015-01-23  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-peaseblossom.cproj:
	* Statements.h:
	* Parser.h:
	* Grammar.h:
	* Parser.cpp:
	* pbObject.h:
	* Function.h:
	* pbObject.cpp:
	* Function.cpp:
	* Program.cpp:
	* pbStatement.h:
	* InExpression.h:
	* pbStatement.cpp:
	* NewExpression.h:
	* StatementType.h:
	* BreakStatement.h:
	* LessExpression.h:
	* BlockStatement.h:
	* EqualExpression.h:
	* SwitchStatement.h:
	* pbExecutionContext.h:
	* NegateExpression.h:
	* ContinueStatement.h:
	* GreaterExpression.h:
	* AdditionExpression.h:
	* pbExecutionContext.cpp:
	* PropertyExpression.h:
	* DivisionExpression.h:
	* LogicalOrExpression.h:
	* VariableDeclaration.h:
	* LeftShiftExpression.h:
	* RemainderExpression.h:
	* ArrayIndexExpression.h:
	* InstanceOfExpression.h:
	* AssignmentExpression.h:
	* BitwiseAndExpression.h:
	* LogicalAndExpression.h:
	* LogicalNotExpression.h:
	* StrictEqualExpression.h:
	* SubtractionExpression.h:
	* ConditionalExpression.h:
	* MemberAccessExpression.h:
	* FunctionCallExpression.h:
	* PreIncrementExpression.h:
	* PreDecrementExpression.h:
	* PostDecrementExpression.h:
	* PostIncrementExpression.h:
	* MultiplicationExpression.h:
	* ComputedMemberAccessExpression.h: 

2015-01-22  Holger Seelig  <holger.seelig@yahoo.de>

	* Makefile.am:
	* libtitania-peaseblossom.cproj:
	* Statements.h:
	* Expressions.h:
	* Parser.h:
	* Object.h:
	* Grammar.h:
	* Parser.cpp:
	* Identifier.h:
	* Block.h:
	* Function.h:
	* array.h:
	* pbBlock.h:
	* Block.cpp:
	* Program.h:
	* Function.cpp:
	* pbObject.cpp:
	* Program.cpp:
	* pbBlock.cpp:
	* Expression.h:
	* pbStatement.h:
	* IfStatement.h:
	* pbExpression.h:
	* ForStatement.h:
	* InExpression.h:
	* ArrayLiteral.h:
	* CompletionType.h:
	* NewExpression.h:
	* StatementType.h:
	* pbStatement.cpp:
	* ObjectLiteral.h:
	* LessExpression.h:
	* ExpressionType.h:
	* BlockStatement.h:
	* BreakStatement.h:
	* pbExpression.cpp:
	* EmptyStatement.h:
	* ReturnStatement.h:
	* EqualExpression.h:
	* SwitchStatement.h:
	* ForVarStatement.h:
	* pbExecutionContext.h:
	* NegateExpression.h:
	* VariableStatement.h:
	* ForVarInStatement.h:
	* GreaterExpression.h:
	* FunctionExpression.h:
	* DivisionExpression.h:
	* VariableExpression.h:
	* AdditionExpression.h:
	* PropertyExpression.h:
	* pbExecutionContext.cpp:
	* VariableDeclaration.h:
	* RemainderExpression.h:
	* LogicalOrExpression.h:
	* PrimitiveExpression.h:
	* LeftShiftExpression.h:
	* LogicalAndExpression.h:
	* LogicalNotExpression.h:
	* ArrayIndexExpression.h:
	* AssignmentExpression.h:
	* BitwiseAndExpression.h:
	* InstanceOfExpression.h:
	* ConditionalExpression.h:
	* SubtractionExpression.h:
	* StrictEqualExpression.h:
	* PreIncrementExpression.h:
	* PreDecrementExpression.h:
	* FunctionCallExpression.h:
	* PostIncrementExpression.h:
	* PostDecrementExpression.h:
	* MultiplicationExpression.h: 

2015-01-17  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-peaseblossom.md.pc:
	* libtitania-peaseblossom.cproj:
	* Expressions.h:
	* Array.h:
	* var.h:
	* Block.h:
	* Parser.cpp:
	* Array.cpp:
	* Function.h:
	* pbConstants.h:
	* pbObject.h:
	* var.cpp:
	* pbBlock.h:
	* Object.cpp:
	* pbFunction.h:
	* pbObject.cpp:
	* Function.cpp:
	* Program.cpp:
	* pbFunction.cpp:
	* NativeFunction.h:
	* Expression.h:
	* IfStatement.h:
	* InExpression.h:
	* pbExpression.h:
	* ForStatement.h:
	* GarbargeCollector.cpp:
	* CompletionType.h:
	* NativeFunction.cpp:
	* ArrayLiteral.h:
	* NewExpression.h:
	* ObjectLiteral.h:
	* pbExpression.cpp:
	* LessExpression.h:
	* ForInStatement.h:
	* ExpressionType.h:
	* EqualExpression.h:
	* ForVarStatement.h:
	* ReturnStatement.h:
	* pbExecutionContext.h:
	* VariableStatement.h:
	* GreaterExpression.h:
	* ForVarInStatement.h:
	* DivisionExpression.h:
	* AdditionExpression.h:
	* pbExecutionContext.cpp:
	* FunctionExpression.h:
	* PropertyExpression.h:
	* VariableExpression.h:
	* PrimitiveExpression.h:
	* LeftShiftExpression.h:
	* RemainderExpression.h:
	* VariableDeclaration.h:
	* LogicalOrExpression.h:
	* ControlFlowException.h:
	* InstanceOfExpression.h:
	* AssignmentExpression.h:
	* ArrayIndexExpression.h:
	* SubtractionExpression.h:
	* StrictEqualExpression.h:
	* PreDecrementExpression.h:
	* PreIncrementExpression.h:
	* FunctionCallExpression.h:
	* PostDecrementExpression.h:
	* PostIncrementExpression.h:
	* MultiplicationExpression.h: 

2015-01-13  Holger Seelig  <holger.seelig@yahoo.de>

	* Array.h:
	* pbObject.h: 

2015-01-12  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-peaseblossom.cproj:
	* Expressions.h:
	* Array.h:
	* Parser.h:
	* var.h:
	* Exception.h:
	* Parser.cpp:
	* Global.h:
	* Array.cpp:
	* Identifier.h:
	* var.cpp:
	* pbConstants.h:
	* pbObject.h:
	* Function.h:
	* Object.cpp:
	* Global.cpp:
	* pbBlock.h:
	* pbObject.cpp:
	* Function.cpp:
	* pbFunction.h:
	* pbFunction.cpp:
	* NativeFunction.h:
	* Expression.h:
	* IfStatement.h:
	* InExpression.h:
	* ForStatement.h:
	* NativeFunction.cpp:
	* pbExpression.h:
	* ArrayLiteral.h:
	* ObjectLiteral.h:
	* NewExpression.h:
	* ExpressionType.h:
	* pbExpression.cpp:
	* ForInStatement.h:
	* LessExpression.h:
	* EqualExpression.h:
	* ReturnStatement.h:
	* pbExecutionContext.h:
	* VariableStatement.h:
	* VariableExpression.h:
	* AdditionExpression.h:
	* pbExecutionContext.cpp:
	* DivisionExpression.h:
	* FunctionExpression.h:
	* PropertyExpression.h:
	* LeftShiftExpression.h:
	* PrimitiveExpression.h:
	* VariableDeclaration.h:
	* RemainderExpression.h:
	* ControlFlowException.h:
	* ArrayIndexExpression.h:
	* InstanceOfExpression.h:
	* AssignmentExpression.h:
	* SubtractionExpression.h:
	* StrictEqualExpression.h:
	* FunctionCallExpression.h:
	* pbControlFlowException.h:
	* MultiplicationExpression.h: 

2015-01-10  Holger Seelig  <holger.seelig@yahoo.de>

	* pbMath.h:
	* Array.h:
	* Identifier.h:
	* Global.h:
	* Array.cpp:
	* var.cpp:
	* pbObject.h:
	* Global.cpp:
	* pbObject.cpp:
	* pbExpression.h:
	* ArrayLiteral.h:
	* PropertyExpression.h:
	* ArrayIndexExpression.h: 

2015-01-09  Holger Seelig  <holger.seelig@yahoo.de>

	* Parser.h:
	* Array.h:
	* var.h:
	* Parser.cpp:
	* Array.cpp:
	* Math.cpp:
	* Identifier.h:
	* pbObject.h:
	* Function.h:
	* var.cpp:
	* Array.cpp:
	* pbConstants.h:
	* Global.cpp:
	* Object.cpp:
	* Identifier.cpp:
	* Function.cpp:
	* pbObject.cpp:
	* pbFunction.h:
	* Program.cpp:
	* Function.cpp:
	* pbFunction.cpp:
	* NativeFunction.h:
	* InExpression.h:
	* pbExpression.h:
	* NativeFunction.cpp:
	* ObjectLiteral.h:
	* pbExpression.cpp:
	* PropertyExpression.h:
	* VariableExpression.h:
	* pbExecutionContext.cpp:
	* VariableDeclaration.h:
	* AssignmentExpression.h:
	* ArrayIndexExpression.h: 

2015-01-08  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-peaseblossom.cproj:
	* Expressions.h:
	* Parser.cpp:
	* Identifier.h:
	* pbConstants.h:
	* pbObject.h:
	* Program.h:
	* pbObject.cpp:
	* pbExpression.h:
	* InExpression.h:
	* pbExecutionContext.h:
	* InstanceOfExpression.h:
	* ArrayIndexExpression.h: 

2015-01-07  Holger Seelig  <holger.seelig@yahoo.de>

	* Makefile.am:
	* libtitania-peaseblossom.cproj:
	* Expressions.h:
	* Array.h:
	* Array.h:
	* Object.h:
	* Parser.cpp:
	* Global.h:
	* Array.cpp:
	* Object.cpp:
	* pbObject.h:
	* Array.cpp:
	* Object.cpp:
	* Global.cpp:
	* Program.h:
	* pbObject.cpp:
	* Function.cpp:
	* Program.cpp:
	* pbFunction.cpp:
	* ArrayLiteral.h:
	* StandardClassType.h:
	* PropertyExpression.h:
	* ArrayIndexExpression.h: 

2015-01-06  Holger Seelig  <holger.seelig@yahoo.de>

	* pbObject.h:
	* pbObject.cpp: 

2015-01-06  Holger Seelig  <holger.seelig@yahoo.de>

	* pbObject.h:
	* Function.cpp:
	* pbFunction.h:
	* pbObject.cpp:
	* pbFunction.cpp:
	* PropertyExpression.h: 

2015-01-06  Holger Seelig  <holger.seelig@yahoo.de>

	* Parser.h:
	* var.h:
	* Parser.cpp:
	* pbObject.h:
	* Object.cpp:
	* var.cpp:
	* Global.cpp:
	* Object.cpp:
	* pbObject.cpp:
	* Function.cpp:
	* pbFunction.cpp:
	* ForStatement.h:
	* ObjectLiteral.h:
	* ReturnStatement.h:
	* pbExecutionContext.cpp:
	* PropertyExpression.h:
	* VariableDeclaration.h: 

2015-01-06  Holger Seelig  <holger.seelig@yahoo.de>

	* Makefile.am:
	* libtitania-peaseblossom.cproj:
	* Expressions.h:
	* Math.h:
	* Parser.h:
	* Object.h:
	* Object.h:
	* Parser.cpp:
	* Math.cpp:
	* pbUserData.h:
	* pbObject.h:
	* Object.cpp:
	* Function.h:
	* Object.cpp:
	* Program.h:
	* pbObject.cpp:
	* pbFunction.h:
	* Program.cpp:
	* Function.cpp:
	* pbFunction.cpp:
	* pbExpression.h:
	* VariableExpression.h:
	* PropertyExpression.h:
	* AssignmentExpression.h:
	* InstanceOfExpression.h: 

2015-01-04  Holger Seelig  <holger.seelig@yahoo.de>

	* Makefile.am:
	* libtitania-peaseblossom.cproj:
	* Object.h:
	* Global.h:
	* Math.cpp:
	* Object.cpp:
	* Global.cpp:
	* Program.h:
	* Function.h:
	* Object.cpp:
	* Program.cpp:
	* pbFunction.cpp:
	* GlobalObject.h:
	* StandardType.h:
	* GlobalObject.cpp:
	* StandardClassType.h:
	* pbExecutionContext.h:
	* pbExecutionContext.cpp: 

2015-01-04  Holger Seelig  <holger.seelig@yahoo.de>

	* Makefile.am:
	* libtitania-peaseblossom.cproj:
	* Expressions.h:
	* Array.h:
	* Parser.h:
	* Grammar.h:
	* Object.h:
	* Parser.cpp:
	* Array.cpp:
	* pbConstants.h:
	* pbObject.h:
	* array.h:
	* Object.cpp:
	* Program.h:
	* Object.cpp:
	* pbObject.cpp:
	* Program.cpp:
	* pbBlock.cpp:
	* pbFunction.cpp:
	* StandardType.h:
	* GlobalObject.h:
	* GlobalObject.cpp:
	* pbExpression.h:
	* ArrayLiteral.h:
	* ForStatement.h:
	* pbExpression.cpp:
	* LessExpression.h:
	* EqualExpression.h:
	* ReturnStatement.h:
	* pbExecutionContext.h:
	* DivisionExpression.h:
	* AdditionExpression.h:
	* LeftShiftExpression.h:
	* PrimitiveExpression.h:
	* RemainderExpression.h:
	* VariableDeclaration.h:
	* StrictEqualExpression.h:
	* SubtractionExpression.h:
	* PrimitiveExpressionType.h:
	* MultiplicationExpression.h: 

2015-01-03  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-peaseblossom.cproj:
	* Parser.h:
	* ptr.h:
	* Grammar.h:
	* Exception.h:
	* Parser.cpp:
	* Function.cpp:
	* ForStatement.h:
	* LessExpression.h:
	* ReturnStatement.h:
	* EqualExpression.h:
	* DivisionExpression.h:
	* AdditionExpression.h:
	* LeftShiftExpression.h:
	* PrimitiveExpression.h:
	* VariableDeclaration.h:
	* RemainderExpression.h:
	* AssignmentExpression.h:
	* SubtractionExpression.h:
	* StrictEqualExpression.h:
	* AssignmentOperatorType.h:
	* PrimitiveExpressionType.h:
	* MultiplicationExpression.h: 

2015-01-03  Holger Seelig  <holger.seelig@yahoo.de>

	* Makefile.am:
	* libtitania-peaseblossom.cproj:
	* Array.h:
	* Parser.cpp:
	* Block.h:
	* Function.h:
	* pbBlock.h:
	* Block.cpp:
	* pbObject.cpp:
	* Function.cpp:
	* pbBlock.cpp:
	* Generator.h:
	* Genrator.cpp:
	* IfStatement.h:
	* pbExpression.h:
	* ForStatement.h:
	* NewExpression.h:
	* ObjectLiteral.h:
	* LessExpression.h:
	* EqualExpression.h:
	* ReturnStatement.h:
	* DivisionExpression.h:
	* VariableExpression.h:
	* FunctionExpression.h:
	* PropertyExpression.h:
	* AdditionExpression.h:
	* PrimitiveExpression.h:
	* LeftShiftExpression.h:
	* RemainderExpression.h:
	* VariableDeclaration.h:
	* AssignmentExpression.h:
	* StrictEqualExpression.h:
	* SubtractionExpression.h:
	* FunctionCallExpression.h:
	* MultiplicationExpression.h: 

2015-01-02  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-peaseblossom.cproj:
	* Math.h:
	* pbUserData.h:
	* pbObject.h:
	* Object.cpp:
	* Program.h:
	* pbObject.cpp:
	* pbFunction.h:
	* Program.cpp:
	* pbFunction.cpp:
	* NativeFunction.h:
	* pbExecutionContext.h:
	* pbExecutionContext.cpp:
	* VariableDeclaration.h: 

2015-01-02  Holger Seelig  <holger.seelig@yahoo.de>

	* Makefile.am:
	* pb.h:
	* Debug.h:
	* libtitania-peaseblossom.cproj:
	* libtitania-peaseblossom.md.pc:
	* Objects.h:
	* Primitives.h:
	* Expressions.h:
	* pbBase.h:
	* pbMath.h:
	* Array.h:
	* Math.h:
	* Parser.h:
	* Object.h:
	* Exception.h:
	* var.h:
	* Grammar.h:
	* ptr.h:
	* Block.h:
	* Object.h:
	* Identifier.h:
	* Math.cpp:
	* Parser.cpp:
	* var.cpp:
	* Function.h:
	* Object.cpp:
	* array.h:
	* pbObject.h:
	* pbConstants.h:
	* Identifier.cpp:
	* Object.cpp:
	* Block.cpp:
	* Program.h:
	* pbBlock.h:
	* Function.cpp:
	* pbFunction.h:
	* pbObject.cpp:
	* pbChildObject.h:
	* pbBlock.cpp:
	* Program.cpp:
	* StringObject.h:
	* pbFunction.cpp:
	* NumberObject.h:
	* pbChildObject.cpp:
	* GlobalObject.h:
	* GarbageCollector.h:
	* BooleanObject.h:
	* NativeFunction.h:
	* GlobalObject.cpp:
	* IfStatement.h:
	* GarbargeCollector.cpp:
	* NativeFunction.cpp:
	* ForStatement.h:
	* pbExpression.h:
	* pbInputStreamObject.h:
	* pbOutputStreamObject.h:
	* ObjectLiteral.h:
	* NewExpression.h:
	* LessExpression.h:
	* pbExpression.cpp:
	* EqualExpression.h:
	* ReturnStatement.h:
	* pbExecutionContext.h:
	* PropertyExpression.h:
	* VariableExpression.h:
	* FunctionExpression.h:
	* pbExecutionContext.cpp:
	* AdditionExpression.h:
	* DivisionExpression.h:
	* VariableDeclaration.h:
	* RemainderExpression.h:
	* PrimitiveExpression.h:
	* LeftShiftExpression.h:
	* AssignmentExpression.h:
	* ControlFlowException.h:
	* StrictEqualExpression.h:
	* SubtractionExpression.h:
	* FunctionCallExpression.h:
	* AssignmentOperatorType.h:
	* pbControlFlowException.h:
	* MultiplicationExpression.h: 

