2015-01-06  Holger Seelig  <holger.seelig@yahoo.de>

	* pbObject.h:
	* Function.cpp:
	* pbFunction.h:
	* pbObject.cpp:
	* pbFunction.cpp:
	* PropertyExpression.h: 

2015-01-06  Holger Seelig  <holger.seelig@yahoo.de>

	* Parser.h:
	* var.h:
	* Parser.cpp:
	* pbObject.h:
	* Object.cpp:
	* var.cpp:
	* Global.cpp:
	* Object.cpp:
	* pbObject.cpp:
	* Function.cpp:
	* pbFunction.cpp:
	* ForStatement.h:
	* ObjectLiteral.h:
	* ReturnStatement.h:
	* pbExecutionContext.cpp:
	* PropertyExpression.h:
	* VariableDeclaration.h: 

2015-01-06  Holger Seelig  <holger.seelig@yahoo.de>

	* Makefile.am:
	* libtitania-peaseblossom.cproj:
	* Expressions.h:
	* Math.h:
	* Parser.h:
	* Object.h:
	* Object.h:
	* Parser.cpp:
	* Math.cpp:
	* pbUserData.h:
	* pbObject.h:
	* Object.cpp:
	* Function.h:
	* Object.cpp:
	* Program.h:
	* pbObject.cpp:
	* pbFunction.h:
	* Program.cpp:
	* Function.cpp:
	* pbFunction.cpp:
	* pbExpression.h:
	* VariableExpression.h:
	* PropertyExpression.h:
	* AssignmentExpression.h:
	* InstanceOfExpression.h: 

2015-01-04  Holger Seelig  <holger.seelig@yahoo.de>

	* Makefile.am:
	* libtitania-peaseblossom.cproj:
	* Object.h:
	* Global.h:
	* Math.cpp:
	* Object.cpp:
	* Global.cpp:
	* Program.h:
	* Function.h:
	* Object.cpp:
	* Program.cpp:
	* pbFunction.cpp:
	* GlobalObject.h:
	* StandardType.h:
	* GlobalObject.cpp:
	* StandardClassType.h:
	* pbExecutionContext.h:
	* pbExecutionContext.cpp: 

2015-01-04  Holger Seelig  <holger.seelig@yahoo.de>

	* Makefile.am:
	* libtitania-peaseblossom.cproj:
	* Expressions.h:
	* Array.h:
	* Parser.h:
	* Grammar.h:
	* Object.h:
	* Parser.cpp:
	* Array.cpp:
	* pbConstants.h:
	* pbObject.h:
	* array.h:
	* Object.cpp:
	* Program.h:
	* Object.cpp:
	* pbObject.cpp:
	* Program.cpp:
	* pbBlock.cpp:
	* pbFunction.cpp:
	* StandardType.h:
	* GlobalObject.h:
	* GlobalObject.cpp:
	* pbExpression.h:
	* ArrayLiteral.h:
	* ForStatement.h:
	* pbExpression.cpp:
	* LessExpression.h:
	* EqualExpression.h:
	* ReturnStatement.h:
	* pbExecutionContext.h:
	* DivisionExpression.h:
	* AdditionExpression.h:
	* LeftShiftExpression.h:
	* PrimitiveExpression.h:
	* RemainderExpression.h:
	* VariableDeclaration.h:
	* StrictEqualExpression.h:
	* SubtractionExpression.h:
	* PrimitiveExpressionType.h:
	* MultiplicationExpression.h: 

2015-01-03  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-peaseblossom.cproj:
	* Parser.h:
	* ptr.h:
	* Grammar.h:
	* Exception.h:
	* Parser.cpp:
	* Function.cpp:
	* ForStatement.h:
	* LessExpression.h:
	* ReturnStatement.h:
	* EqualExpression.h:
	* DivisionExpression.h:
	* AdditionExpression.h:
	* LeftShiftExpression.h:
	* PrimitiveExpression.h:
	* VariableDeclaration.h:
	* RemainderExpression.h:
	* AssignmentExpression.h:
	* SubtractionExpression.h:
	* StrictEqualExpression.h:
	* AssignmentOperatorType.h:
	* PrimitiveExpressionType.h:
	* MultiplicationExpression.h: 

2015-01-03  Holger Seelig  <holger.seelig@yahoo.de>

	* Makefile.am:
	* libtitania-peaseblossom.cproj:
	* Array.h:
	* Parser.cpp:
	* Block.h:
	* Function.h:
	* pbBlock.h:
	* Block.cpp:
	* pbObject.cpp:
	* Function.cpp:
	* pbBlock.cpp:
	* Generator.h:
	* Genrator.cpp:
	* IfStatement.h:
	* pbExpression.h:
	* ForStatement.h:
	* NewExpression.h:
	* ObjectLiteral.h:
	* LessExpression.h:
	* EqualExpression.h:
	* ReturnStatement.h:
	* DivisionExpression.h:
	* VariableExpression.h:
	* FunctionExpression.h:
	* PropertyExpression.h:
	* AdditionExpression.h:
	* PrimitiveExpression.h:
	* LeftShiftExpression.h:
	* RemainderExpression.h:
	* VariableDeclaration.h:
	* AssignmentExpression.h:
	* StrictEqualExpression.h:
	* SubtractionExpression.h:
	* FunctionCallExpression.h:
	* MultiplicationExpression.h: 

2015-01-02  Holger Seelig  <holger.seelig@yahoo.de>

	* libtitania-peaseblossom.cproj:
	* Math.h:
	* pbUserData.h:
	* pbObject.h:
	* Object.cpp:
	* Program.h:
	* pbObject.cpp:
	* pbFunction.h:
	* Program.cpp:
	* pbFunction.cpp:
	* NativeFunction.h:
	* pbExecutionContext.h:
	* pbExecutionContext.cpp:
	* VariableDeclaration.h: 

2015-01-02  Holger Seelig  <holger.seelig@yahoo.de>

	* Makefile.am:
	* pb.h:
	* Debug.h:
	* libtitania-peaseblossom.cproj:
	* libtitania-peaseblossom.md.pc:
	* Objects.h:
	* Primitives.h:
	* Expressions.h:
	* pbBase.h:
	* pbMath.h:
	* Array.h:
	* Math.h:
	* Parser.h:
	* Object.h:
	* Exception.h:
	* var.h:
	* Grammar.h:
	* ptr.h:
	* Block.h:
	* Object.h:
	* Identifier.h:
	* Math.cpp:
	* Parser.cpp:
	* var.cpp:
	* Function.h:
	* Object.cpp:
	* array.h:
	* pbObject.h:
	* pbConstants.h:
	* Identifier.cpp:
	* Object.cpp:
	* Block.cpp:
	* Program.h:
	* pbBlock.h:
	* Function.cpp:
	* pbFunction.h:
	* pbObject.cpp:
	* pbChildObject.h:
	* pbBlock.cpp:
	* Program.cpp:
	* StringObject.h:
	* pbFunction.cpp:
	* NumberObject.h:
	* pbChildObject.cpp:
	* GlobalObject.h:
	* GarbageCollector.h:
	* BooleanObject.h:
	* NativeFunction.h:
	* GlobalObject.cpp:
	* IfStatement.h:
	* GarbargeCollector.cpp:
	* NativeFunction.cpp:
	* ForStatement.h:
	* pbExpression.h:
	* pbInputStreamObject.h:
	* pbOutputStreamObject.h:
	* ObjectLiteral.h:
	* NewExpression.h:
	* LessExpression.h:
	* pbExpression.cpp:
	* EqualExpression.h:
	* ReturnStatement.h:
	* pbExecutionContext.h:
	* PropertyExpression.h:
	* VariableExpression.h:
	* FunctionExpression.h:
	* pbExecutionContext.cpp:
	* AdditionExpression.h:
	* DivisionExpression.h:
	* VariableDeclaration.h:
	* RemainderExpression.h:
	* PrimitiveExpression.h:
	* LeftShiftExpression.h:
	* AssignmentExpression.h:
	* ControlFlowException.h:
	* StrictEqualExpression.h:
	* SubtractionExpression.h:
	* FunctionCallExpression.h:
	* AssignmentOperatorType.h:
	* pbControlFlowException.h:
	* MultiplicationExpression.h: 

